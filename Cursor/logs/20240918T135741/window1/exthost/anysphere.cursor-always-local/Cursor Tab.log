2024-09-18 13:57:44.793 [info] CURSOR LOG: Finished creating provider!
2024-09-18 13:57:51.305 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 13:57:51.542 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:16:03.021 [info] CURSOR LOG: creating client to https://us-eu.gcpp.cursor.sh
2024-09-18 14:16:03.021 [info] CURSOR LOG: restFunc initiated b5c2c41d-5bbe-4ac5-b903-3d743384014d
2024-09-18 14:16:04.153 [info] CURSOR LOG: Done streaming cpp with id b5c2c41d-5bbe-4ac5-b903-3d743384014d
2024-09-18 14:16:04.153 [info] CPP RT LOG: Time taken for streaming cpp 1131.765869140625 with request b5c2c41d-5bbe-4ac5-b903-3d743384014d
2024-09-18 14:16:04.153 [info] CPP Request Log with id b5c2c41d-5bbe-4ac5-b903-3d743384014d
2024-09-18 14:16:04.153 [info] =======>Model input 
2024-09-18 14:16:04.153 [info] =======>Model output 
        this.branch = branch;
        this.currentSemester = 1;
    }

2024-09-18 14:16:04.153 [info] =======>Debug stream time 157.36897999979556
2024-09-18 14:16:04.153 [info] =======>Debug ttft time 116.37483599968255
2024-09-18 14:16:04.154 [info] Average of latest 20 ttft time 116.37483599968255
2024-09-18 14:16:04.154 [info] Average of latest 20 stream time 157.36897999979556
2024-09-18 14:16:04.154 [info] Average of latest 20 total time NaN
2024-09-18 14:16:04.154 [info] Average of latest 20 client time 1131.765869140625
2024-09-18 14:16:04.154 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:16:04.154 [info] CPP RT LOG: All stats {"streamingtime":1131.765869140625,"actualTtftFromStart":1149.451904296875,"timeTillServerRequest":57.817138671875,"requestToTtft":1091.634765625,"totalTime":1189.175048828125}
2024-09-18 14:16:04.154 [info] CURSOR LOG: restFunc done b5c2c41d-5bbe-4ac5-b903-3d743384014d
2024-09-18 14:16:13.514 [info] CURSOR LOG: restFunc initiated 6896c86f-0589-459d-8c10-0407702a2da8
2024-09-18 14:16:14.051 [info] CURSOR LOG: Done streaming cpp with id 6896c86f-0589-459d-8c10-0407702a2da8
2024-09-18 14:16:14.051 [info] CPP RT LOG: Time taken for streaming cpp 537.256103515625 with request 6896c86f-0589-459d-8c10-0407702a2da8
2024-09-18 14:16:14.051 [info] CPP Request Log with id 6896c86f-0589-459d-8c10-0407702a2da8
2024-09-18 14:16:14.051 [info] =======>Model input 
2024-09-18 14:16:14.051 [info] =======>Model output 
        this.branch = branch;
        this.currentSemester = 3;
    }

2024-09-18 14:16:14.051 [info] =======>Debug stream time 77.41310099978
2024-09-18 14:16:14.051 [info] =======>Debug ttft time 71.38192499987781
2024-09-18 14:16:14.052 [info] Average of latest 20 ttft time 93.87838049978018
2024-09-18 14:16:14.052 [info] Average of latest 20 stream time 117.39104049978778
2024-09-18 14:16:14.052 [info] Average of latest 20 total time NaN
2024-09-18 14:16:14.052 [info] Average of latest 20 client time 834.510986328125
2024-09-18 14:16:14.052 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:16:14.052 [info] CPP RT LOG: All stats {"streamingtime":537.256103515625,"actualTtftFromStart":590.645751953125,"timeTillServerRequest":53.834228515625,"requestToTtft":536.8115234375,"totalTime":591.0263671875}
2024-09-18 14:16:14.052 [info] CURSOR LOG: restFunc done 6896c86f-0589-459d-8c10-0407702a2da8
2024-09-18 14:17:07.255 [info] CURSOR LOG: restFunc initiated 37315715-5756-48b3-8d4f-66be3a09d07f
2024-09-18 14:17:07.605 [info] CURSOR LOG: Done streaming cpp with id 37315715-5756-48b3-8d4f-66be3a09d07f
2024-09-18 14:17:07.605 [info] CPP RT LOG: Time taken for streaming cpp 348.5185546875 with request 37315715-5756-48b3-8d4f-66be3a09d07f
2024-09-18 14:17:07.605 [info] CPP Request Log with id 37315715-5756-48b3-8d4f-66be3a09d07f
2024-09-18 14:17:07.605 [info] =======>Model input 
2024-09-18 14:17:07.605 [info] =======>Model output 
    private Map<String, List<String>> studentInfo;
    private Map<String, List<String>> professorInfo;
    private Map<String, List<String>> adminInfo;

2024-09-18 14:17:07.605 [info] =======>Debug stream time 90.05038199946284
2024-09-18 14:17:07.605 [info] =======>Debug ttft time 87.10420999955386
2024-09-18 14:17:07.606 [info] Average of latest 20 ttft time 91.6203236663714
2024-09-18 14:17:07.606 [info] Average of latest 20 stream time 108.27748766634613
2024-09-18 14:17:07.606 [info] Average of latest 20 total time NaN
2024-09-18 14:17:07.606 [info] Average of latest 20 client time 672.5135091145834
2024-09-18 14:17:07.606 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:17:07.606 [info] CPP RT LOG: All stats {"streamingtime":348.5185546875,"actualTtftFromStart":400.3466796875,"timeTillServerRequest":52.375244140625,"requestToTtft":347.971435546875,"totalTime":400.875}
2024-09-18 14:17:07.606 [info] CURSOR LOG: restFunc done 37315715-5756-48b3-8d4f-66be3a09d07f
2024-09-18 14:19:02.194 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:29:17.417 [info] CURSOR LOG: restFunc initiated a797ff6a-871b-42a9-bbc9-9e9bcb17d457
2024-09-18 14:29:18.661 [info] CURSOR LOG: Done streaming cpp with id a797ff6a-871b-42a9-bbc9-9e9bcb17d457
2024-09-18 14:29:18.661 [info] CPP RT LOG: Time taken for streaming cpp 1242.2744140625 with request a797ff6a-871b-42a9-bbc9-9e9bcb17d457
2024-09-18 14:29:18.661 [info] CPP Request Log with id a797ff6a-871b-42a9-bbc9-9e9bcb17d457
2024-09-18 14:29:18.661 [info] =======>Model input 
2024-09-18 14:29:18.661 [info] =======>Model output 
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
2024-09-18 14:29:18.661 [info] =======>Debug stream time 160.10137999989092
2024-09-18 14:29:18.661 [info] =======>Debug ttft time 154.6430779993534
2024-09-18 14:29:18.662 [info] Average of latest 20 ttft time 107.3760122496169
2024-09-18 14:29:18.662 [info] Average of latest 20 stream time 121.23346074973233
2024-09-18 14:29:18.662 [info] Average of latest 20 total time NaN
2024-09-18 14:29:18.662 [info] Average of latest 20 client time 814.9537353515625
2024-09-18 14:29:18.662 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:18.662 [info] CPP RT LOG: All stats {"streamingtime":1242.2744140625,"actualTtftFromStart":1306.44091796875,"timeTillServerRequest":67.187744140625,"requestToTtft":1239.253173828125,"totalTime":1309.44091796875}
2024-09-18 14:29:18.662 [info] CURSOR LOG: restFunc done a797ff6a-871b-42a9-bbc9-9e9bcb17d457
2024-09-18 14:29:25.329 [info] CURSOR LOG: restFunc initiated 97e57f2a-b94a-4660-baf2-e63c63a3977e
2024-09-18 14:29:25.812 [info] CURSOR LOG: Done streaming cpp with id 97e57f2a-b94a-4660-baf2-e63c63a3977e
2024-09-18 14:29:25.812 [info] CPP RT LOG: Time taken for streaming cpp 482.849853515625 with request 97e57f2a-b94a-4660-baf2-e63c63a3977e
2024-09-18 14:29:25.812 [info] CPP Request Log with id 97e57f2a-b94a-4660-baf2-e63c63a3977e
2024-09-18 14:29:25.813 [info] =======>Model input 
2024-09-18 14:29:25.813 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();

        // Add hardcoded completed courses for semesters 1 and 2
        addCompletedCoursesForPastSemesters();
2024-09-18 14:29:25.813 [info] =======>Debug stream time 117.55573399923742
2024-09-18 14:29:25.813 [info] =======>Debug ttft time 113.9094909997657
2024-09-18 14:29:25.813 [info] Average of latest 20 ttft time 108.68270799964667
2024-09-18 14:29:25.813 [info] Average of latest 20 stream time 120.49791539963334
2024-09-18 14:29:25.813 [info] Average of latest 20 total time NaN
2024-09-18 14:29:25.813 [info] Average of latest 20 client time 748.532958984375
2024-09-18 14:29:25.813 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:25.813 [info] CPP RT LOG: All stats {"streamingtime":482.849853515625,"actualTtftFromStart":533.643310546875,"timeTillServerRequest":51.007568359375,"requestToTtft":482.6357421875,"totalTime":533.835205078125}
2024-09-18 14:29:25.813 [info] CURSOR LOG: restFunc done 97e57f2a-b94a-4660-baf2-e63c63a3977e
2024-09-18 14:29:28.432 [info] CURSOR LOG: restFunc initiated 0e7930de-040c-408b-984e-f596285fc611
2024-09-18 14:29:28.835 [info] CURSOR LOG: Done streaming cpp with id 0e7930de-040c-408b-984e-f596285fc611
2024-09-18 14:29:28.835 [info] CPP RT LOG: Time taken for streaming cpp 402.77294921875 with request 0e7930de-040c-408b-984e-f596285fc611
2024-09-18 14:29:28.835 [info] CPP Request Log with id 0e7930de-040c-408b-984e-f596285fc611
2024-09-18 14:29:28.835 [info] =======>Model input 
2024-09-18 14:29:28.835 [info] =======>Model output 
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
2024-09-18 14:29:28.835 [info] =======>Debug stream time 73.48543500062078
2024-09-18 14:29:28.835 [info] =======>Debug ttft time 68.66055600065738
2024-09-18 14:29:28.836 [info] Average of latest 20 ttft time 102.01234933314845
2024-09-18 14:29:28.836 [info] Average of latest 20 stream time 112.66250199979793
2024-09-18 14:29:28.836 [info] Average of latest 20 total time NaN
2024-09-18 14:29:28.836 [info] Average of latest 20 client time 690.9062906901041
2024-09-18 14:29:28.836 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:28.836 [info] CPP RT LOG: All stats {"streamingtime":402.77294921875,"actualTtftFromStart":452.482666015625,"timeTillServerRequest":55.8125,"requestToTtft":396.670166015625,"totalTime":458.543212890625}
2024-09-18 14:29:28.836 [info] CURSOR LOG: restFunc done 0e7930de-040c-408b-984e-f596285fc611
2024-09-18 14:29:30.794 [info] CURSOR LOG: restFunc initiated 74f5d900-0f48-4073-8c87-fcfb4add517c
2024-09-18 14:29:31.345 [info] CURSOR LOG: Done streaming cpp with id 74f5d900-0f48-4073-8c87-fcfb4add517c
2024-09-18 14:29:31.345 [info] CPP RT LOG: Time taken for streaming cpp 552.108154296875 with request 74f5d900-0f48-4073-8c87-fcfb4add517c
2024-09-18 14:29:31.346 [info] CPP Request Log with id 74f5d900-0f48-4073-8c87-fcfb4add517c
2024-09-18 14:29:31.346 [info] =======>Model input 
2024-09-18 14:29:31.346 [info] =======>Model output 
        sem1Courses.add(new Course("MA101", "Calculus I", 3, 1, dummyProfessor, "B+"));
        sem1Courses.add(new Course("PH101", "Physics I", 4, 1, dummyProfessor, "A-"));
        completedCoursesBySemester.put(1, sem1Courses);

2024-09-18 14:29:31.346 [info] =======>Debug stream time 143.2282720003277
2024-09-18 14:29:31.346 [info] =======>Debug ttft time 140.68685000017285
2024-09-18 14:29:31.347 [info] Average of latest 20 ttft time 107.53727799986622
2024-09-18 14:29:31.347 [info] Average of latest 20 stream time 117.02904057130218
2024-09-18 14:29:31.347 [info] Average of latest 20 total time NaN
2024-09-18 14:29:31.347 [info] Average of latest 20 client time 671.0779854910714
2024-09-18 14:29:31.347 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:31.347 [info] CPP RT LOG: All stats {"streamingtime":552.108154296875,"actualTtftFromStart":604.9951171875,"timeTillServerRequest":53.2724609375,"requestToTtft":551.72265625,"totalTime":605.323486328125}
2024-09-18 14:29:31.347 [info] CURSOR LOG: restFunc done 74f5d900-0f48-4073-8c87-fcfb4add517c
2024-09-18 14:29:43.589 [info] CURSOR LOG: restFunc initiated 505e68f3-abde-457f-9cfe-125de95dc33f
2024-09-18 14:29:44.055 [info] CURSOR LOG: Done streaming cpp with id 505e68f3-abde-457f-9cfe-125de95dc33f
2024-09-18 14:29:44.055 [info] CPP RT LOG: Time taken for streaming cpp 465.982666015625 with request 505e68f3-abde-457f-9cfe-125de95dc33f
2024-09-18 14:29:44.055 [info] CPP Request Log with id 505e68f3-abde-457f-9cfe-125de95dc33f
2024-09-18 14:29:44.055 [info] =======>Model input 
2024-09-18 14:29:44.055 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-40s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:44.055 [info] =======>Debug stream time 124.92686700075865
2024-09-18 14:29:44.055 [info] =======>Debug ttft time 121.71088100038469
2024-09-18 14:29:44.055 [info] Average of latest 20 ttft time 109.30897837493103
2024-09-18 14:29:44.055 [info] Average of latest 20 stream time 118.01626887498423
2024-09-18 14:29:44.055 [info] Average of latest 20 total time NaN
2024-09-18 14:29:44.055 [info] Average of latest 20 client time 645.4410705566406
2024-09-18 14:29:44.055 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:44.055 [info] CPP RT LOG: All stats {"streamingtime":465.982666015625,"actualTtftFromStart":518.84765625,"timeTillServerRequest":53.032470703125,"requestToTtft":465.815185546875,"totalTime":518.96533203125}
2024-09-18 14:29:44.055 [info] CURSOR LOG: restFunc done 505e68f3-abde-457f-9cfe-125de95dc33f
2024-09-18 14:29:49.734 [info] CURSOR LOG: restFunc initiated 0921398a-d063-404b-a020-38dbaa2a50f2
2024-09-18 14:29:49.810 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:29:49.810 [info] CURSOR LOG: restFunc done 0921398a-d063-404b-a020-38dbaa2a50f2
2024-09-18 14:29:49.847 [info] CURSOR LOG: restFunc initiated 07b47af9-ba71-4c39-9c2a-d42deacc1bfb
2024-09-18 14:29:50.148 [info] CURSOR LOG: Done streaming cpp with id 07b47af9-ba71-4c39-9c2a-d42deacc1bfb
2024-09-18 14:29:50.148 [info] CPP RT LOG: Time taken for streaming cpp 301.1015625 with request 07b47af9-ba71-4c39-9c2a-d42deacc1bfb
2024-09-18 14:29:50.148 [info] CPP Request Log with id 07b47af9-ba71-4c39-9c2a-d42deacc1bfb
2024-09-18 14:29:50.148 [info] =======>Model input 
2024-09-18 14:29:50.148 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:50.148 [info] =======>Debug stream time 94.39685800019652
2024-09-18 14:29:50.148 [info] =======>Debug ttft time 90.83099099993706
2024-09-18 14:29:50.149 [info] Average of latest 20 ttft time 107.25586866659836
2024-09-18 14:29:50.149 [info] Average of latest 20 stream time 115.39188988889671
2024-09-18 14:29:50.149 [info] Average of latest 20 total time NaN
2024-09-18 14:29:50.149 [info] Average of latest 20 client time 607.1811252170139
2024-09-18 14:29:50.149 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:50.149 [info] CPP RT LOG: All stats {"streamingtime":301.1015625,"actualTtftFromStart":352.071044921875,"timeTillServerRequest":51.59130859375,"requestToTtft":300.479736328125,"totalTime":352.619873046875}
2024-09-18 14:29:50.149 [info] CURSOR LOG: restFunc done 07b47af9-ba71-4c39-9c2a-d42deacc1bfb
2024-09-18 14:29:50.481 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:29:50.518 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:29:50.977 [info] CURSOR LOG: restFunc initiated 5a2eb5cd-6014-49f1-a2c5-d9f22c09a8ea
2024-09-18 14:29:51.062 [info] CURSOR LOG: restFunc initiated 52d09162-408a-4b71-bf68-6addaa6c910d
2024-09-18 14:29:51.421 [info] CURSOR LOG: Done streaming cpp with id 52d09162-408a-4b71-bf68-6addaa6c910d
2024-09-18 14:29:51.421 [info] CPP RT LOG: Time taken for streaming cpp 358.717529296875 with request 52d09162-408a-4b71-bf68-6addaa6c910d
2024-09-18 14:29:51.421 [info] CPP Request Log with id 52d09162-408a-4b71-bf68-6addaa6c910d
2024-09-18 14:29:51.421 [info] =======>Model input 
2024-09-18 14:29:51.421 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:51.421 [info] =======>Debug stream time 118.65375899989158
2024-09-18 14:29:51.421 [info] =======>Debug ttft time 113.03065900038928
2024-09-18 14:29:51.422 [info] Average of latest 20 ttft time 107.83334769997745
2024-09-18 14:29:51.422 [info] Average of latest 20 stream time 115.7180767999962
2024-09-18 14:29:51.422 [info] Average of latest 20 total time NaN
2024-09-18 14:29:51.422 [info] Average of latest 20 client time 582.334765625
2024-09-18 14:29:51.422 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:51.422 [info] CPP RT LOG: All stats {"streamingtime":358.717529296875,"actualTtftFromStart":406.974365234375,"timeTillServerRequest":54.587646484375,"requestToTtft":352.38671875,"totalTime":413.25634765625}
2024-09-18 14:29:51.422 [info] CURSOR LOG: restFunc done 52d09162-408a-4b71-bf68-6addaa6c910d
2024-09-18 14:29:51.518 [info] CURSOR LOG: Done streaming cpp with id 5a2eb5cd-6014-49f1-a2c5-d9f22c09a8ea
2024-09-18 14:29:51.518 [info] CPP RT LOG: Time taken for streaming cpp 541.927734375 with request 5a2eb5cd-6014-49f1-a2c5-d9f22c09a8ea
2024-09-18 14:29:51.518 [info] CPP Request Log with id 5a2eb5cd-6014-49f1-a2c5-d9f22c09a8ea
2024-09-18 14:29:51.518 [info] =======>Model input 
2024-09-18 14:29:51.518 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:51.518 [info] =======>Debug stream time 213.44644800014794
2024-09-18 14:29:51.518 [info] =======>Debug ttft time 81.28215900063515
2024-09-18 14:29:51.522 [info] Average of latest 20 ttft time 105.41960327276452
2024-09-18 14:29:51.522 [info] Average of latest 20 stream time 124.60247418182817
2024-09-18 14:29:51.522 [info] Average of latest 20 total time NaN
2024-09-18 14:29:51.522 [info] Average of latest 20 client time 578.6613991477273
2024-09-18 14:29:51.522 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:51.522 [info] CPP RT LOG: All stats {"streamingtime":541.927734375,"actualTtftFromStart":456.322509765625,"timeTillServerRequest":51.792236328125,"requestToTtft":404.5302734375,"totalTime":593.70361328125}
2024-09-18 14:29:51.522 [info] CURSOR LOG: restFunc done 5a2eb5cd-6014-49f1-a2c5-d9f22c09a8ea
2024-09-18 14:29:53.109 [info] CURSOR LOG: restFunc initiated 7fcff7ae-2ca3-47ad-946d-6f77bbfda574
2024-09-18 14:29:53.486 [info] CURSOR LOG: restFunc initiated b0336762-3284-4b52-9268-555f5e0eb272
2024-09-18 14:29:53.632 [info] CURSOR LOG: Done streaming cpp with id 7fcff7ae-2ca3-47ad-946d-6f77bbfda574
2024-09-18 14:29:53.632 [info] CPP RT LOG: Time taken for streaming cpp 523.80517578125 with request 7fcff7ae-2ca3-47ad-946d-6f77bbfda574
2024-09-18 14:29:53.632 [info] CPP Request Log with id 7fcff7ae-2ca3-47ad-946d-6f77bbfda574
2024-09-18 14:29:53.632 [info] =======>Model input 
2024-09-18 14:29:53.632 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:53.632 [info] =======>Debug stream time 199.3045270005241
2024-09-18 14:29:53.632 [info] =======>Debug ttft time 79.81292400043458
2024-09-18 14:29:53.632 [info] Average of latest 20 ttft time 103.28571333340369
2024-09-18 14:29:53.632 [info] Average of latest 20 stream time 130.82764525005283
2024-09-18 14:29:53.632 [info] Average of latest 20 total time NaN
2024-09-18 14:29:53.632 [info] Average of latest 20 client time 574.0900472005209
2024-09-18 14:29:53.632 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:53.632 [info] CPP RT LOG: All stats {"streamingtime":523.80517578125,"actualTtftFromStart":455.6416015625,"timeTillServerRequest":53.334228515625,"requestToTtft":402.307373046875,"totalTime":577.085693359375}
2024-09-18 14:29:53.632 [info] CURSOR LOG: restFunc done 7fcff7ae-2ca3-47ad-946d-6f77bbfda574
2024-09-18 14:29:53.639 [info] CURSOR LOG: restFunc initiated f32b2869-81ad-4bf8-a147-0a7578df4566
2024-09-18 14:29:53.910 [info] CURSOR LOG: Done streaming cpp with id f32b2869-81ad-4bf8-a147-0a7578df4566
2024-09-18 14:29:53.910 [info] CPP RT LOG: Time taken for streaming cpp 271.440185546875 with request f32b2869-81ad-4bf8-a147-0a7578df4566
2024-09-18 14:29:53.910 [info] CPP Request Log with id f32b2869-81ad-4bf8-a147-0a7578df4566
2024-09-18 14:29:53.910 [info] =======>Model input 
2024-09-18 14:29:53.910 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:53.910 [info] =======>Debug stream time 81.01092300005257
2024-09-18 14:29:53.910 [info] =======>Debug ttft time 77.85054299980402
2024-09-18 14:29:53.910 [info] CURSOR LOG: Done streaming cpp with id b0336762-3284-4b52-9268-555f5e0eb272
2024-09-18 14:29:53.910 [info] CPP RT LOG: Time taken for streaming cpp 425.32958984375 with request b0336762-3284-4b52-9268-555f5e0eb272
2024-09-18 14:29:53.910 [info] CPP Request Log with id b0336762-3284-4b52-9268-555f5e0eb272
2024-09-18 14:29:53.910 [info] =======>Model input 
2024-09-18 14:29:53.910 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:53.910 [info] =======>Debug stream time 229.22136999946088
2024-09-18 14:29:53.910 [info] =======>Debug ttft time 104.37671299930662
2024-09-18 14:29:53.911 [info] Average of latest 20 ttft time 101.54684399999678
2024-09-18 14:29:53.911 [info] Average of latest 20 stream time 134.29743114286768
2024-09-18 14:29:53.911 [info] Average of latest 20 total time NaN
2024-09-18 14:29:53.911 [info] Average of latest 20 client time 550.8092886117788
2024-09-18 14:29:53.911 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:53.911 [info] CPP RT LOG: All stats {"streamingtime":271.440185546875,"actualTtftFromStart":320.967041015625,"timeTillServerRequest":53.56494140625,"requestToTtft":267.402099609375,"totalTime":324.9833984375}
2024-09-18 14:29:53.911 [info] CURSOR LOG: restFunc done f32b2869-81ad-4bf8-a147-0a7578df4566
2024-09-18 14:29:53.911 [info] Average of latest 20 ttft time 101.54684399999678
2024-09-18 14:29:53.911 [info] Average of latest 20 stream time 134.29743114286768
2024-09-18 14:29:53.911 [info] Average of latest 20 total time NaN
2024-09-18 14:29:53.911 [info] Average of latest 20 client time 541.846452985491
2024-09-18 14:29:53.911 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:53.911 [info] CPP RT LOG: All stats {"streamingtime":425.32958984375,"actualTtftFromStart":354.544189453125,"timeTillServerRequest":55.387451171875,"requestToTtft":299.15673828125,"totalTime":480.644775390625}
2024-09-18 14:29:53.911 [info] CURSOR LOG: restFunc done b0336762-3284-4b52-9268-555f5e0eb272
2024-09-18 14:29:56.692 [info] CURSOR LOG: restFunc initiated 057ebb6e-1e47-484c-8f67-b6374677a8f6
2024-09-18 14:29:57.275 [info] CURSOR LOG: Done streaming cpp with id 057ebb6e-1e47-484c-8f67-b6374677a8f6
2024-09-18 14:29:57.275 [info] CPP RT LOG: Time taken for streaming cpp 582.651611328125 with request 057ebb6e-1e47-484c-8f67-b6374677a8f6
2024-09-18 14:29:57.275 [info] CPP Request Log with id 057ebb6e-1e47-484c-8f67-b6374677a8f6
2024-09-18 14:29:57.275 [info] =======>Model input 
2024-09-18 14:29:57.275 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-10s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:29:57.275 [info] =======>Debug stream time 260.0186770008877
2024-09-18 14:29:57.275 [info] =======>Debug ttft time 135.50134100019932
2024-09-18 14:29:57.276 [info] Average of latest 20 ttft time 103.81047713334361
2024-09-18 14:29:57.276 [info] Average of latest 20 stream time 142.67884753340235
2024-09-18 14:29:57.276 [info] Average of latest 20 total time NaN
2024-09-18 14:29:57.276 [info] Average of latest 20 client time 544.566796875
2024-09-18 14:29:57.276 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:29:57.276 [info] CPP RT LOG: All stats {"streamingtime":582.651611328125,"actualTtftFromStart":608.530517578125,"timeTillServerRequest":52.866455078125,"requestToTtft":555.6640625,"totalTime":635.485107421875}
2024-09-18 14:29:57.276 [info] CURSOR LOG: restFunc done 057ebb6e-1e47-484c-8f67-b6374677a8f6
2024-09-18 14:30:03.121 [info] CURSOR LOG: restFunc initiated 979d2a01-b9d9-4311-888a-090755a3ab9c
2024-09-18 14:30:03.218 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:03.218 [info] CURSOR LOG: restFunc done 979d2a01-b9d9-4311-888a-090755a3ab9c
2024-09-18 14:30:03.251 [info] CURSOR LOG: restFunc initiated e720aee1-04e4-4ef6-b003-5c9cbba946c2
2024-09-18 14:30:03.853 [info] CURSOR LOG: Done streaming cpp with id e720aee1-04e4-4ef6-b003-5c9cbba946c2
2024-09-18 14:30:03.853 [info] CPP RT LOG: Time taken for streaming cpp 602.78857421875 with request e720aee1-04e4-4ef6-b003-5c9cbba946c2
2024-09-18 14:30:03.854 [info] CPP Request Log with id e720aee1-04e4-4ef6-b003-5c9cbba946c2
2024-09-18 14:30:03.854 [info] =======>Model input 
2024-09-18 14:30:03.854 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-10s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:30:03.854 [info] =======>Debug stream time 334.0392999993637
2024-09-18 14:30:03.854 [info] =======>Debug ttft time 205.41789199970663
2024-09-18 14:30:03.854 [info] Average of latest 20 ttft time 110.1609405624913
2024-09-18 14:30:03.854 [info] Average of latest 20 stream time 154.63887581252493
2024-09-18 14:30:03.854 [info] Average of latest 20 total time NaN
2024-09-18 14:30:03.854 [info] Average of latest 20 client time 548.2056579589844
2024-09-18 14:30:03.854 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:03.854 [info] CPP RT LOG: All stats {"streamingtime":602.78857421875,"actualTtftFromStart":527.456787109375,"timeTillServerRequest":51.425048828125,"requestToTtft":476.03173828125,"totalTime":654.16064453125}
2024-09-18 14:30:03.854 [info] CURSOR LOG: restFunc done e720aee1-04e4-4ef6-b003-5c9cbba946c2
2024-09-18 14:30:03.933 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:04.159 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:04.331 [info] CURSOR LOG: restFunc initiated b0033a0d-4131-43e6-85c3-5bc2f438a905
2024-09-18 14:30:04.826 [info] CURSOR LOG: Done streaming cpp with id b0033a0d-4131-43e6-85c3-5bc2f438a905
2024-09-18 14:30:04.826 [info] CPP RT LOG: Time taken for streaming cpp 495.445556640625 with request b0033a0d-4131-43e6-85c3-5bc2f438a905
2024-09-18 14:30:04.826 [info] CPP Request Log with id b0033a0d-4131-43e6-85c3-5bc2f438a905
2024-09-18 14:30:04.826 [info] =======>Model input 
2024-09-18 14:30:04.826 [info] =======>Model output 
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
2024-09-18 14:30:04.826 [info] =======>Debug stream time 102.76200900040567
2024-09-18 14:30:04.826 [info] =======>Debug ttft time 97.51609100028872
2024-09-18 14:30:04.826 [info] Average of latest 20 ttft time 109.41712588236174
2024-09-18 14:30:04.826 [info] Average of latest 20 stream time 151.58729541181202
2024-09-18 14:30:04.826 [info] Average of latest 20 total time NaN
2024-09-18 14:30:04.826 [info] Average of latest 20 client time 545.1021225873162
2024-09-18 14:30:04.826 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:04.826 [info] CPP RT LOG: All stats {"streamingtime":495.445556640625,"actualTtftFromStart":548.287841796875,"timeTillServerRequest":53.05419921875,"requestToTtft":495.233642578125,"totalTime":548.46044921875}
2024-09-18 14:30:04.826 [info] CURSOR LOG: restFunc done b0033a0d-4131-43e6-85c3-5bc2f438a905
2024-09-18 14:30:09.157 [info] CURSOR LOG: restFunc initiated 33c9d0bc-a889-47b9-921b-22f1213def8f
2024-09-18 14:30:09.687 [info] CURSOR LOG: Done streaming cpp with id 33c9d0bc-a889-47b9-921b-22f1213def8f
2024-09-18 14:30:09.687 [info] CPP RT LOG: Time taken for streaming cpp 529.58447265625 with request 33c9d0bc-a889-47b9-921b-22f1213def8f
2024-09-18 14:30:09.688 [info] CPP Request Log with id 33c9d0bc-a889-47b9-921b-22f1213def8f
2024-09-18 14:30:09.688 [info] =======>Model input 
2024-09-18 14:30:09.688 [info] =======>Model output 
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
2024-09-18 14:30:09.688 [info] =======>Debug stream time 207.69720400031656
2024-09-18 14:30:09.688 [info] =======>Debug ttft time 101.8111260002479
2024-09-18 14:30:09.690 [info] Average of latest 20 ttft time 108.99457033335541
2024-09-18 14:30:09.690 [info] Average of latest 20 stream time 154.70451255561784
2024-09-18 14:30:09.690 [info] Average of latest 20 total time NaN
2024-09-18 14:30:09.690 [info] Average of latest 20 client time 544.2400309244791
2024-09-18 14:30:09.690 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:09.690 [info] CPP RT LOG: All stats {"streamingtime":529.58447265625,"actualTtftFromStart":534.52099609375,"timeTillServerRequest":52.1396484375,"requestToTtft":482.38134765625,"totalTime":581.696533203125}
2024-09-18 14:30:09.690 [info] CURSOR LOG: restFunc done 33c9d0bc-a889-47b9-921b-22f1213def8f
2024-09-18 14:30:09.850 [info] CURSOR LOG: restFunc initiated 42cd58dd-2a78-4056-82b9-fc67744ff1de
2024-09-18 14:30:09.941 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:09.941 [info] CURSOR LOG: restFunc done 42cd58dd-2a78-4056-82b9-fc67744ff1de
2024-09-18 14:30:09.977 [info] CURSOR LOG: restFunc initiated 10e232ab-8d10-40a1-ac6c-38b29b1c4684
2024-09-18 14:30:10.419 [info] CURSOR LOG: Done streaming cpp with id 10e232ab-8d10-40a1-ac6c-38b29b1c4684
2024-09-18 14:30:10.419 [info] CPP RT LOG: Time taken for streaming cpp 443.61572265625 with request 10e232ab-8d10-40a1-ac6c-38b29b1c4684
2024-09-18 14:30:10.419 [info] CPP Request Log with id 10e232ab-8d10-40a1-ac6c-38b29b1c4684
2024-09-18 14:30:10.419 [info] =======>Model input 
2024-09-18 14:30:10.419 [info] =======>Model output 
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
2024-09-18 14:30:10.419 [info] =======>Debug stream time 244.1456340001896
2024-09-18 14:30:10.419 [info] =======>Debug ttft time 133.32799100037664
2024-09-18 14:30:10.420 [info] Average of latest 20 ttft time 110.27527668425127
2024-09-18 14:30:10.420 [info] Average of latest 20 stream time 159.411940000069
2024-09-18 14:30:10.420 [info] Average of latest 20 total time NaN
2024-09-18 14:30:10.420 [info] Average of latest 20 client time 538.9440146998355
2024-09-18 14:30:10.420 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:10.420 [info] CPP RT LOG: All stats {"streamingtime":443.61572265625,"actualTtftFromStart":388.2744140625,"timeTillServerRequest":51.7744140625,"requestToTtft":336.5,"totalTime":495.337158203125}
2024-09-18 14:30:10.420 [info] CURSOR LOG: restFunc done 10e232ab-8d10-40a1-ac6c-38b29b1c4684
2024-09-18 14:30:10.641 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:10.663 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:26.979 [info] CURSOR LOG: restFunc initiated 5b85cd27-d21f-4e98-b6ff-0a455e17f311
2024-09-18 14:30:27.560 [info] CURSOR LOG: Done streaming cpp with id 5b85cd27-d21f-4e98-b6ff-0a455e17f311
2024-09-18 14:30:27.560 [info] CPP RT LOG: Time taken for streaming cpp 581.4853515625 with request 5b85cd27-d21f-4e98-b6ff-0a455e17f311
2024-09-18 14:30:27.560 [info] CPP Request Log with id 5b85cd27-d21f-4e98-b6ff-0a455e17f311
2024-09-18 14:30:27.560 [info] =======>Model input 
2024-09-18 14:30:27.560 [info] =======>Model output 
        return course.getPrerequisites().stream()
                .allMatch(prereq -> completedCourses.stream()
                        .anyMatch(c -> c.getCode().equals(prereq)));
    }
2024-09-18 14:30:27.560 [info] =======>Debug stream time 126.9759799996391
2024-09-18 14:30:27.560 [info] =======>Debug ttft time 120.22962599992752
2024-09-18 14:30:27.561 [info] Average of latest 20 ttft time 110.77299415003509
2024-09-18 14:30:27.561 [info] Average of latest 20 stream time 157.7901420000475
2024-09-18 14:30:27.561 [info] Average of latest 20 total time NaN
2024-09-18 14:30:27.561 [info] Average of latest 20 client time 541.0710815429687
2024-09-18 14:30:27.561 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:27.561 [info] CPP RT LOG: All stats {"streamingtime":581.4853515625,"actualTtftFromStart":634.09033203125,"timeTillServerRequest":52.8046875,"requestToTtft":581.28564453125,"totalTime":634.25}
2024-09-18 14:30:27.561 [info] CURSOR LOG: restFunc done 5b85cd27-d21f-4e98-b6ff-0a455e17f311
2024-09-18 14:30:28.469 [info] CURSOR LOG: restFunc initiated fe62ce0f-d3c0-4da5-b6ca-d0630faf2cf7
2024-09-18 14:30:28.750 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:28.750 [info] CURSOR LOG: restFunc done fe62ce0f-d3c0-4da5-b6ca-d0630faf2cf7
2024-09-18 14:30:28.786 [info] CURSOR LOG: restFunc initiated 9d5e7204-1404-4237-93c2-c13c81cd5f3b
2024-09-18 14:30:29.060 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:29.060 [info] CURSOR LOG: restFunc done 9d5e7204-1404-4237-93c2-c13c81cd5f3b
2024-09-18 14:30:29.092 [info] CURSOR LOG: restFunc initiated 9ed2592d-05d4-4cbe-90d0-687b6881f4ad
2024-09-18 14:30:29.344 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:29.344 [info] CURSOR LOG: restFunc done 9ed2592d-05d4-4cbe-90d0-687b6881f4ad
2024-09-18 14:30:29.377 [info] CURSOR LOG: restFunc initiated 0d3ce8de-58f8-4969-ba39-1be2ca8e3bee
2024-09-18 14:30:29.480 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:29.486 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:29.670 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:29.670 [info] CURSOR LOG: restFunc done 0d3ce8de-58f8-4969-ba39-1be2ca8e3bee
2024-09-18 14:30:29.722 [info] CURSOR LOG: restFunc initiated 9ecc96e0-d73c-47c5-87a6-d2a095233fda
2024-09-18 14:30:29.748 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:29.774 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:29.981 [info] CURSOR LOG: Done streaming cpp with id 9ecc96e0-d73c-47c5-87a6-d2a095233fda
2024-09-18 14:30:29.981 [info] CPP RT LOG: Time taken for streaming cpp 258.69091796875 with request 9ecc96e0-d73c-47c5-87a6-d2a095233fda
2024-09-18 14:30:29.982 [info] CPP Request Log with id 9ecc96e0-d73c-47c5-87a6-d2a095233fda
2024-09-18 14:30:29.982 [info] =======>Model input 
2024-09-18 14:30:29.982 [info] =======>Model output 
    private boolean meetsPrerequisites(Course course) {
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream()
                        .anyMatch(c -> c.getCode().equals(prereq)));
    }
2024-09-18 14:30:29.982 [info] =======>Debug stream time 69.84779400005937
2024-09-18 14:30:29.982 [info] =======>Debug ttft time 63.542745999991894
2024-09-18 14:30:29.989 [info] Average of latest 20 ttft time 108.13138965005055
2024-09-18 14:30:29.989 [info] Average of latest 20 stream time 153.41408270006067
2024-09-18 14:30:29.989 [info] Average of latest 20 total time NaN
2024-09-18 14:30:29.989 [info] Average of latest 20 client time 497.417333984375
2024-09-18 14:30:29.989 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:29.989 [info] CPP RT LOG: All stats {"streamingtime":258.69091796875,"actualTtftFromStart":308.843505859375,"timeTillServerRequest":50.35205078125,"requestToTtft":258.491455078125,"totalTime":309.01611328125}
2024-09-18 14:30:29.989 [info] CURSOR LOG: restFunc done 9ecc96e0-d73c-47c5-87a6-d2a095233fda
2024-09-18 14:30:30.088 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:30.096 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:31.761 [info] CURSOR LOG: restFunc initiated 4887a3a3-17b3-4db7-9c8f-36ac3a6ae7c2
2024-09-18 14:30:32.175 [info] CURSOR LOG: Done streaming cpp with id 4887a3a3-17b3-4db7-9c8f-36ac3a6ae7c2
2024-09-18 14:30:32.175 [info] CPP RT LOG: Time taken for streaming cpp 413.73193359375 with request 4887a3a3-17b3-4db7-9c8f-36ac3a6ae7c2
2024-09-18 14:30:32.175 [info] CPP Request Log with id 4887a3a3-17b3-4db7-9c8f-36ac3a6ae7c2
2024-09-18 14:30:32.175 [info] =======>Model input 
2024-09-18 14:30:32.175 [info] =======>Model output 
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream()
                        .anyMatch(c -> c.getCode().equals(prereq)));
    }

2024-09-18 14:30:32.175 [info] =======>Debug stream time 79.7839590003714
2024-09-18 14:30:32.175 [info] =======>Debug ttft time 75.49728400073946
2024-09-18 14:30:32.176 [info] Average of latest 20 ttft time 108.33715760009363
2024-09-18 14:30:32.176 [info] Average of latest 20 stream time 153.53262560009026
2024-09-18 14:30:32.176 [info] Average of latest 20 total time NaN
2024-09-18 14:30:32.176 [info] Average of latest 20 client time 491.2411254882812
2024-09-18 14:30:32.176 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:32.176 [info] CPP RT LOG: All stats {"streamingtime":413.73193359375,"actualTtftFromStart":461.507080078125,"timeTillServerRequest":52.9140625,"requestToTtft":408.593017578125,"totalTime":466.61279296875}
2024-09-18 14:30:32.176 [info] CURSOR LOG: restFunc done 4887a3a3-17b3-4db7-9c8f-36ac3a6ae7c2
2024-09-18 14:30:34.877 [info] CURSOR LOG: restFunc initiated 5ccd87c3-f9e5-4b92-90b0-054944bd48a4
2024-09-18 14:30:35.077 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:35.077 [info] CURSOR LOG: restFunc done 5ccd87c3-f9e5-4b92-90b0-054944bd48a4
2024-09-18 14:30:35.113 [info] CURSOR LOG: restFunc initiated 20c5ee68-4954-42b2-ab35-07f2956c482a
2024-09-18 14:30:35.295 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:35.295 [info] CURSOR LOG: restFunc done 20c5ee68-4954-42b2-ab35-07f2956c482a
2024-09-18 14:30:35.333 [info] CURSOR LOG: restFunc initiated 57452e2d-863a-453a-8f7a-e0cde8235200
2024-09-18 14:30:35.552 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:35.552 [info] CURSOR LOG: restFunc done 57452e2d-863a-453a-8f7a-e0cde8235200
2024-09-18 14:30:35.586 [info] CURSOR LOG: restFunc initiated 151a33b5-87e2-4c43-ada9-a1adca329801
2024-09-18 14:30:35.752 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:35.797 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:35.812 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:35.812 [info] CURSOR LOG: restFunc done 151a33b5-87e2-4c43-ada9-a1adca329801
2024-09-18 14:30:35.864 [info] CURSOR LOG: restFunc initiated d8c02a21-a2be-422d-8a52-b1843e6b87d1
2024-09-18 14:30:35.997 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:36.001 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:36.095 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:36.095 [info] CURSOR LOG: restFunc done d8c02a21-a2be-422d-8a52-b1843e6b87d1
2024-09-18 14:30:36.148 [info] CURSOR LOG: restFunc initiated b6adb34e-da45-4e1a-a380-ef165605ae85
2024-09-18 14:30:36.265 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:36.447 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:30:36.447 [info] CURSOR LOG: restFunc done b6adb34e-da45-4e1a-a380-ef165605ae85
2024-09-18 14:30:36.499 [info] CURSOR LOG: restFunc initiated b33cb503-6846-4141-b8d4-08c7420b419a
2024-09-18 14:30:36.776 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:30:36.784 [info] CURSOR LOG: Done streaming cpp with id b33cb503-6846-4141-b8d4-08c7420b419a
2024-09-18 14:30:36.784 [info] CPP RT LOG: Time taken for streaming cpp 285.075927734375 with request b33cb503-6846-4141-b8d4-08c7420b419a
2024-09-18 14:30:36.785 [info] CPP Request Log with id b33cb503-6846-4141-b8d4-08c7420b419a
2024-09-18 14:30:36.785 [info] =======>Model input 
2024-09-18 14:30:36.785 [info] =======>Model output 
    private boolean meetsPrerequisites(Course course) {
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream().anyMatch(c -> c.getCode().equals(prereq)));
    }

2024-09-18 14:30:36.785 [info] =======>Debug stream time 94.87013200018555
2024-09-18 14:30:36.785 [info] =======>Debug ttft time 92.30210100021213
2024-09-18 14:30:36.785 [info] Average of latest 20 ttft time 108.59705215012654
2024-09-18 14:30:36.785 [info] Average of latest 20 stream time 153.7736131001264
2024-09-18 14:30:36.785 [info] Average of latest 20 total time NaN
2024-09-18 14:30:36.785 [info] Average of latest 20 client time 488.068994140625
2024-09-18 14:30:36.785 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:36.785 [info] CPP RT LOG: All stats {"streamingtime":285.075927734375,"actualTtftFromStart":331.396484375,"timeTillServerRequest":50.501953125,"requestToTtft":280.89453125,"totalTime":335.54931640625}
2024-09-18 14:30:36.785 [info] CURSOR LOG: restFunc done b33cb503-6846-4141-b8d4-08c7420b419a
2024-09-18 14:30:42.576 [info] CURSOR LOG: restFunc initiated 6db4e562-d4b8-48f9-9b78-72f51aa50a0d
2024-09-18 14:30:43.232 [info] CURSOR LOG: Done streaming cpp with id 6db4e562-d4b8-48f9-9b78-72f51aa50a0d
2024-09-18 14:30:43.232 [info] CPP RT LOG: Time taken for streaming cpp 656.895751953125 with request 6db4e562-d4b8-48f9-9b78-72f51aa50a0d
2024-09-18 14:30:43.233 [info] CPP Request Log with id 6db4e562-d4b8-48f9-9b78-72f51aa50a0d
2024-09-18 14:30:43.233 [info] =======>Model input 
2024-09-18 14:30:43.233 [info] =======>Model output 

    public void setBranch(String branch) {
        this.branch = branch;
    }
2024-09-18 14:30:43.233 [info] =======>Debug stream time 142.1104380004108
2024-09-18 14:30:43.233 [info] =======>Debug ttft time 134.42932900041342
2024-09-18 14:30:43.233 [info] Average of latest 20 ttft time 107.58636470017954
2024-09-18 14:30:43.233 [info] Average of latest 20 stream time 152.87406600015237
2024-09-18 14:30:43.233 [info] Average of latest 20 total time NaN
2024-09-18 14:30:43.233 [info] Average of latest 20 client time 458.80006103515626
2024-09-18 14:30:43.233 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:43.233 [info] CPP RT LOG: All stats {"streamingtime":656.895751953125,"actualTtftFromStart":710.1494140625,"timeTillServerRequest":53.42919921875,"requestToTtft":656.72021484375,"totalTime":710.281494140625}
2024-09-18 14:30:43.233 [info] CURSOR LOG: restFunc done 6db4e562-d4b8-48f9-9b78-72f51aa50a0d
2024-09-18 14:30:45.320 [info] CURSOR LOG: restFunc initiated ee0f31bf-0610-4613-98ea-7605b06e27c4
2024-09-18 14:30:45.729 [info] CURSOR LOG: Done streaming cpp with id ee0f31bf-0610-4613-98ea-7605b06e27c4
2024-09-18 14:30:45.729 [info] CPP RT LOG: Time taken for streaming cpp 407.707763671875 with request ee0f31bf-0610-4613-98ea-7605b06e27c4
2024-09-18 14:30:45.729 [info] CPP Request Log with id ee0f31bf-0610-4613-98ea-7605b06e27c4
2024-09-18 14:30:45.729 [info] =======>Model input 
2024-09-18 14:30:45.729 [info] =======>Model output 
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream().anyMatch(c -> c.getCode().equals(prereq)));
    }

    public String getBranch() {
2024-09-18 14:30:45.729 [info] =======>Debug stream time 83.60013499949127
2024-09-18 14:30:45.729 [info] =======>Debug ttft time 77.689871000126
2024-09-18 14:30:45.729 [info] Average of latest 20 ttft time 105.77538370019757
2024-09-18 14:30:45.729 [info] Average of latest 20 stream time 151.17628605016506
2024-09-18 14:30:45.729 [info] Average of latest 20 total time NaN
2024-09-18 14:30:45.729 [info] Average of latest 20 client time 455.04295654296874
2024-09-18 14:30:45.729 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:45.729 [info] CPP RT LOG: All stats {"streamingtime":407.707763671875,"actualTtftFromStart":452.02880859375,"timeTillServerRequest":51.262939453125,"requestToTtft":400.765869140625,"totalTime":458.952392578125}
2024-09-18 14:30:45.729 [info] CURSOR LOG: restFunc done ee0f31bf-0610-4613-98ea-7605b06e27c4
2024-09-18 14:30:51.859 [info] CURSOR LOG: restFunc initiated 461fc926-91d8-49e8-a9ff-4102cfccc4fd
2024-09-18 14:30:52.265 [info] CURSOR LOG: Done streaming cpp with id 461fc926-91d8-49e8-a9ff-4102cfccc4fd
2024-09-18 14:30:52.265 [info] CPP RT LOG: Time taken for streaming cpp 407.372314453125 with request 461fc926-91d8-49e8-a9ff-4102cfccc4fd
2024-09-18 14:30:52.266 [info] CPP Request Log with id 461fc926-91d8-49e8-a9ff-4102cfccc4fd
2024-09-18 14:30:52.266 [info] =======>Model input 
2024-09-18 14:30:52.266 [info] =======>Model output 
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream().anyMatch(c -> c.getCode().equals(prereq)));
    }

    public String getBranch() {
2024-09-18 14:30:52.266 [info] =======>Debug stream time 86.35493599995971
2024-09-18 14:30:52.266 [info] =======>Debug ttft time 80.88565299939364
2024-09-18 14:30:52.266 [info] Average of latest 20 ttft time 106.38663855013438
2024-09-18 14:30:52.266 [info] Average of latest 20 stream time 151.819761100132
2024-09-18 14:30:52.266 [info] Average of latest 20 total time NaN
2024-09-18 14:30:52.266 [info] Average of latest 20 client time 455.2729248046875
2024-09-18 14:30:52.266 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:30:52.266 [info] CPP RT LOG: All stats {"streamingtime":407.372314453125,"actualTtftFromStart":461.553955078125,"timeTillServerRequest":54.329833984375,"requestToTtft":407.22412109375,"totalTime":461.651611328125}
2024-09-18 14:30:52.266 [info] CURSOR LOG: restFunc done 461fc926-91d8-49e8-a9ff-4102cfccc4fd
2024-09-18 14:30:59.407 [info] CURSOR LOG: restFunc initiated 2f8c3365-c5f9-4528-a998-a70dee49bf69
2024-09-18 14:31:00.023 [info] CURSOR LOG: Done streaming cpp with id 2f8c3365-c5f9-4528-a998-a70dee49bf69
2024-09-18 14:31:00.023 [info] CPP RT LOG: Time taken for streaming cpp 615.5498046875 with request 2f8c3365-c5f9-4528-a998-a70dee49bf69
2024-09-18 14:31:00.023 [info] CPP Request Log with id 2f8c3365-c5f9-4528-a998-a70dee49bf69
2024-09-18 14:31:00.023 [info] =======>Model input 
2024-09-18 14:31:00.023 [info] =======>Model output 
        return course.getPrerequisites().stream().allMatch(prereq -> completedCourses.stream().anyMatch(c -> c.getCode().equals(prereq)));
    }

    public String getBranch() {
2024-09-18 14:31:00.023 [info] =======>Debug stream time 144.08539999928325
2024-09-18 14:31:00.023 [info] =======>Debug ttft time 132.1376029998064
2024-09-18 14:31:00.024 [info] Average of latest 20 ttft time 105.95917620011605
2024-09-18 14:31:00.024 [info] Average of latest 20 stream time 151.8626175000798
2024-09-18 14:31:00.024 [info] Average of latest 20 total time NaN
2024-09-18 14:31:00.024 [info] Average of latest 20 client time 458.44500732421875
2024-09-18 14:31:00.024 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:31:00.024 [info] CPP RT LOG: All stats {"streamingtime":615.5498046875,"actualTtftFromStart":671.270751953125,"timeTillServerRequest":56.094482421875,"requestToTtft":615.17626953125,"totalTime":671.455810546875}
2024-09-18 14:31:00.024 [info] CURSOR LOG: restFunc done 2f8c3365-c5f9-4528-a998-a70dee49bf69
2024-09-18 14:32:12.058 [info] CURSOR LOG: restFunc initiated 890fbf7e-5239-45e0-a122-564ef167ef8c
2024-09-18 14:32:12.763 [info] CURSOR LOG: Done streaming cpp with id 890fbf7e-5239-45e0-a122-564ef167ef8c
2024-09-18 14:32:12.763 [info] CPP RT LOG: Time taken for streaming cpp 704.34326171875 with request 890fbf7e-5239-45e0-a122-564ef167ef8c
2024-09-18 14:32:12.763 [info] CPP Request Log with id 890fbf7e-5239-45e0-a122-564ef167ef8c
2024-09-18 14:32:12.763 [info] =======>Model input 
2024-09-18 14:32:12.763 [info] =======>Model output 
        return true; // Placeholder
    }

    public void registerForCourse(Course course) {
2024-09-18 14:32:12.763 [info] =======>Debug stream time 99.42730000056326
2024-09-18 14:32:12.763 [info] =======>Debug ttft time 93.04470199998468
2024-09-18 14:32:12.765 [info] Average of latest 20 ttft time 104.52586725009606
2024-09-18 14:32:12.765 [info] Average of latest 20 stream time 150.58763915007003
2024-09-18 14:32:12.765 [info] Average of latest 20 total time NaN
2024-09-18 14:32:12.765 [info] Average of latest 20 client time 470.363037109375
2024-09-18 14:32:12.765 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:32:12.765 [info] CPP RT LOG: All stats {"streamingtime":704.34326171875,"actualTtftFromStart":750.565185546875,"timeTillServerRequest":53.074951171875,"requestToTtft":697.490234375,"totalTime":757.3994140625}
2024-09-18 14:32:12.765 [info] CURSOR LOG: restFunc done 890fbf7e-5239-45e0-a122-564ef167ef8c
2024-09-18 14:32:15.923 [info] CURSOR LOG: restFunc initiated b5139328-22b2-46ea-b3db-206e7d320b60
2024-09-18 14:32:16.339 [info] CURSOR LOG: Done streaming cpp with id b5139328-22b2-46ea-b3db-206e7d320b60
2024-09-18 14:32:16.339 [info] CPP RT LOG: Time taken for streaming cpp 416.297607421875 with request b5139328-22b2-46ea-b3db-206e7d320b60
2024-09-18 14:32:16.339 [info] CPP Request Log with id b5139328-22b2-46ea-b3db-206e7d320b60
2024-09-18 14:32:16.339 [info] =======>Model input 
2024-09-18 14:32:16.339 [info] =======>Model output 
    public boolean canRegisterForCourse(Course course) {
        return true; // Placeholder
    }
2024-09-18 14:32:16.339 [info] =======>Debug stream time 108.61709200032055
2024-09-18 14:32:16.339 [info] =======>Debug ttft time 73.84033699985594
2024-09-18 14:32:16.339 [info] Average of latest 20 ttft time 103.676334550092
2024-09-18 14:32:16.340 [info] Average of latest 20 stream time 151.29865085007623
2024-09-18 14:32:16.340 [info] Average of latest 20 total time NaN
2024-09-18 14:32:16.340 [info] Average of latest 20 client time 476.1228393554687
2024-09-18 14:32:16.340 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:32:16.340 [info] CPP RT LOG: All stats {"streamingtime":416.297607421875,"actualTtftFromStart":431.64892578125,"timeTillServerRequest":51.726806640625,"requestToTtft":379.922119140625,"totalTime":468.001953125}
2024-09-18 14:32:16.340 [info] CURSOR LOG: restFunc done b5139328-22b2-46ea-b3db-206e7d320b60
2024-09-18 14:32:20.425 [info] CURSOR LOG: restFunc initiated 63fc9911-9372-4015-92d5-491251c9eab6
2024-09-18 14:32:20.923 [info] CURSOR LOG: Done streaming cpp with id 63fc9911-9372-4015-92d5-491251c9eab6
2024-09-18 14:32:20.923 [info] CPP RT LOG: Time taken for streaming cpp 497.3408203125 with request 63fc9911-9372-4015-92d5-491251c9eab6
2024-09-18 14:32:20.923 [info] CPP Request Log with id 63fc9911-9372-4015-92d5-491251c9eab6
2024-09-18 14:32:20.923 [info] =======>Model input 
2024-09-18 14:32:20.923 [info] =======>Model output 
        return true; // Placeholder
    }

    public void registerForCourse(Course course) {
2024-09-18 14:32:20.923 [info] =======>Debug stream time 105.89534899964929
2024-09-18 14:32:20.923 [info] =======>Debug ttft time 98.36640499997884
2024-09-18 14:32:20.924 [info] Average of latest 20 ttft time 102.94312185007148
2024-09-18 14:32:20.924 [info] Average of latest 20 stream time 150.6607303500641
2024-09-18 14:32:20.924 [info] Average of latest 20 total time NaN
2024-09-18 14:32:20.924 [info] Average of latest 20 client time 483.05400390625
2024-09-18 14:32:20.924 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:32:20.924 [info] CPP RT LOG: All stats {"streamingtime":497.3408203125,"actualTtftFromStart":543.7529296875,"timeTillServerRequest":52.814697265625,"requestToTtft":490.938232421875,"totalTime":550.123779296875}
2024-09-18 14:32:20.924 [info] CURSOR LOG: restFunc done 63fc9911-9372-4015-92d5-491251c9eab6
2024-09-18 14:34:44.747 [info] CURSOR LOG: restFunc initiated 091bf4c1-df20-4a0d-8fcd-26aa27ee9eb7
2024-09-18 14:34:45.856 [info] CURSOR LOG: Done streaming cpp with id 091bf4c1-df20-4a0d-8fcd-26aa27ee9eb7
2024-09-18 14:34:45.856 [info] CPP RT LOG: Time taken for streaming cpp 1110.104248046875 with request 091bf4c1-df20-4a0d-8fcd-26aa27ee9eb7
2024-09-18 14:34:45.857 [info] CPP Request Log with id 091bf4c1-df20-4a0d-8fcd-26aa27ee9eb7
2024-09-18 14:34:45.857 [info] =======>Model input 
2024-09-18 14:34:45.857 [info] =======>Model output 
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
2024-09-18 14:34:45.857 [info] =======>Debug stream time 125.19617199990898
2024-09-18 14:34:45.857 [info] =======>Debug ttft time 118.31016199942678
2024-09-18 14:34:45.857 [info] Average of latest 20 ttft time 104.79452200001106
2024-09-18 14:34:45.857 [info] Average of latest 20 stream time 146.24821655005218
2024-09-18 14:34:45.857 [info] Average of latest 20 total time NaN
2024-09-18 14:34:45.857 [info] Average of latest 20 client time 511.46282958984375
2024-09-18 14:34:45.857 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:34:45.857 [info] CPP RT LOG: All stats {"streamingtime":1110.104248046875,"actualTtftFromStart":1174.24072265625,"timeTillServerRequest":71.666748046875,"requestToTtft":1102.573974609375,"totalTime":1181.7353515625}
2024-09-18 14:34:45.857 [info] CURSOR LOG: restFunc done 091bf4c1-df20-4a0d-8fcd-26aa27ee9eb7
2024-09-18 14:34:46.949 [info] CURSOR LOG: restFunc initiated ddc8fd19-68db-4b2e-8fc4-cccebcfd994f
2024-09-18 14:34:47.337 [info] CURSOR LOG: Done streaming cpp with id ddc8fd19-68db-4b2e-8fc4-cccebcfd994f
2024-09-18 14:34:47.337 [info] CPP RT LOG: Time taken for streaming cpp 388.5244140625 with request ddc8fd19-68db-4b2e-8fc4-cccebcfd994f
2024-09-18 14:34:47.338 [info] CPP Request Log with id ddc8fd19-68db-4b2e-8fc4-cccebcfd994f
2024-09-18 14:34:47.338 [info] =======>Model input 
2024-09-18 14:34:47.338 [info] =======>Model output 
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }
2024-09-18 14:34:47.338 [info] =======>Debug stream time 80.95178300049156
2024-09-18 14:34:47.338 [info] =======>Debug ttft time 76.6944550005719
2024-09-18 14:34:47.338 [info] Average of latest 20 ttft time 104.63859855001792
2024-09-18 14:34:47.339 [info] Average of latest 20 stream time 140.33057935005053
2024-09-18 14:34:47.339 [info] Average of latest 20 total time NaN
2024-09-18 14:34:47.339 [info] Average of latest 20 client time 504.69879150390625
2024-09-18 14:34:47.339 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:34:47.339 [info] CPP RT LOG: All stats {"streamingtime":388.5244140625,"actualTtftFromStart":438.260498046875,"timeTillServerRequest":52.522705078125,"requestToTtft":385.73779296875,"totalTime":441.00439453125}
2024-09-18 14:34:47.339 [info] CURSOR LOG: restFunc done ddc8fd19-68db-4b2e-8fc4-cccebcfd994f
2024-09-18 14:34:48.945 [info] CURSOR LOG: restFunc initiated c3a74099-6567-4ead-bb54-31f59d76b1d4
2024-09-18 14:34:49.499 [info] CURSOR LOG: Done streaming cpp with id c3a74099-6567-4ead-bb54-31f59d76b1d4
2024-09-18 14:34:49.499 [info] CPP RT LOG: Time taken for streaming cpp 554.758544921875 with request c3a74099-6567-4ead-bb54-31f59d76b1d4
2024-09-18 14:34:49.500 [info] CPP Request Log with id c3a74099-6567-4ead-bb54-31f59d76b1d4
2024-09-18 14:34:49.500 [info] =======>Model input 
2024-09-18 14:34:49.500 [info] =======>Model output 

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
2024-09-18 14:34:49.500 [info] =======>Debug stream time 146.89956500008702
2024-09-18 14:34:49.500 [info] =======>Debug ttft time 144.68621200043708
2024-09-18 14:34:49.500 [info] Average of latest 20 ttft time 107.98038200004957
2024-09-18 14:34:49.500 [info] Average of latest 20 stream time 143.62501145005226
2024-09-18 14:34:49.500 [info] Average of latest 20 total time NaN
2024-09-18 14:34:49.500 [info] Average of latest 20 client time 518.8647094726563
2024-09-18 14:34:49.500 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:34:49.500 [info] CPP RT LOG: All stats {"streamingtime":554.758544921875,"actualTtftFromStart":607.829345703125,"timeTillServerRequest":53.24462890625,"requestToTtft":554.584716796875,"totalTime":607.958251953125}
2024-09-18 14:34:49.500 [info] CURSOR LOG: restFunc done c3a74099-6567-4ead-bb54-31f59d76b1d4
2024-09-18 14:35:07.556 [info] CURSOR LOG: restFunc initiated 149e0269-d7c8-441a-ae28-b5bb8de92562
2024-09-18 14:35:08.033 [info] CURSOR LOG: Done streaming cpp with id 149e0269-d7c8-441a-ae28-b5bb8de92562
2024-09-18 14:35:08.033 [info] CPP RT LOG: Time taken for streaming cpp 477.373046875 with request 149e0269-d7c8-441a-ae28-b5bb8de92562
2024-09-18 14:35:08.034 [info] CPP Request Log with id 149e0269-d7c8-441a-ae28-b5bb8de92562
2024-09-18 14:35:08.034 [info] =======>Model input 
2024-09-18 14:35:08.034 [info] =======>Model output 
            return false;
        }

        // Check if the student is already registered for this course
2024-09-18 14:35:08.034 [info] =======>Debug stream time 91.36719200015068
2024-09-18 14:35:08.034 [info] =======>Debug ttft time 86.06060400046408
2024-09-18 14:35:08.034 [info] Average of latest 20 ttft time 107.06457655010745
2024-09-18 14:35:08.034 [info] Average of latest 20 stream time 136.73230255008676
2024-09-18 14:35:08.034 [info] Average of latest 20 total time NaN
2024-09-18 14:35:08.034 [info] Average of latest 20 client time 521.4668823242188
2024-09-18 14:35:08.034 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:35:08.034 [info] CPP RT LOG: All stats {"streamingtime":477.373046875,"actualTtftFromStart":530.16796875,"timeTillServerRequest":52.9501953125,"requestToTtft":477.2177734375,"totalTime":530.291748046875}
2024-09-18 14:35:08.034 [info] CURSOR LOG: restFunc done 149e0269-d7c8-441a-ae28-b5bb8de92562
2024-09-18 14:35:17.098 [info] CURSOR LOG: restFunc initiated 00bff357-90b4-4f3f-9dc2-1f0362c8576b
2024-09-18 14:35:17.589 [info] CURSOR LOG: Done streaming cpp with id 00bff357-90b4-4f3f-9dc2-1f0362c8576b
2024-09-18 14:35:17.589 [info] CPP RT LOG: Time taken for streaming cpp 490.724365234375 with request 00bff357-90b4-4f3f-9dc2-1f0362c8576b
2024-09-18 14:35:17.589 [info] CPP Request Log with id 00bff357-90b4-4f3f-9dc2-1f0362c8576b
2024-09-18 14:35:17.589 [info] =======>Model input 
2024-09-18 14:35:17.589 [info] =======>Model output 
        }

        // Check if the student is already registered for this course
        if (registeredCourses.stream().anyMatch(c -> c.getCode().equals(course.getCode()))) {
2024-09-18 14:35:17.589 [info] =======>Debug stream time 118.77569300029427
2024-09-18 14:35:17.589 [info] =======>Debug ttft time 113.94781700056046
2024-09-18 14:35:17.589 [info] Average of latest 20 ttft time 105.98690035012551
2024-09-18 14:35:17.589 [info] Average of latest 20 stream time 129.6701533500571
2024-09-18 14:35:17.589 [info] Average of latest 20 total time NaN
2024-09-18 14:35:17.589 [info] Average of latest 20 client time 516.8705200195312
2024-09-18 14:35:17.589 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:35:17.589 [info] CPP RT LOG: All stats {"streamingtime":490.724365234375,"actualTtftFromStart":543.886474609375,"timeTillServerRequest":53.355224609375,"requestToTtft":490.53125,"totalTime":544.04833984375}
2024-09-18 14:35:17.589 [info] CURSOR LOG: restFunc done 00bff357-90b4-4f3f-9dc2-1f0362c8576b
2024-09-18 14:35:21.196 [info] CURSOR LOG: restFunc initiated 477783d1-dcb7-400d-bac0-ec870264cc82
2024-09-18 14:35:21.655 [info] CURSOR LOG: Done streaming cpp with id 477783d1-dcb7-400d-bac0-ec870264cc82
2024-09-18 14:35:21.655 [info] CPP RT LOG: Time taken for streaming cpp 459.296875 with request 477783d1-dcb7-400d-bac0-ec870264cc82
2024-09-18 14:35:21.655 [info] CPP Request Log with id 477783d1-dcb7-400d-bac0-ec870264cc82
2024-09-18 14:35:21.655 [info] =======>Model input 
2024-09-18 14:35:21.655 [info] =======>Model output 
            return false;
        }

        return true;
2024-09-18 14:35:21.655 [info] =======>Debug stream time 106.95735900010914
2024-09-18 14:35:21.655 [info] =======>Debug ttft time 99.28891299944371
2024-09-18 14:35:21.656 [info] Average of latest 20 ttft time 100.68045140011236
2024-09-18 14:35:21.656 [info] Average of latest 20 stream time 118.31605630009435
2024-09-18 14:35:21.656 [info] Average of latest 20 total time NaN
2024-09-18 14:35:21.656 [info] Average of latest 20 client time 509.69593505859376
2024-09-18 14:35:21.656 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:35:21.656 [info] CPP RT LOG: All stats {"streamingtime":459.296875,"actualTtftFromStart":512.0419921875,"timeTillServerRequest":52.9013671875,"requestToTtft":459.140625,"totalTime":512.1640625}
2024-09-18 14:35:21.656 [info] CURSOR LOG: restFunc done 477783d1-dcb7-400d-bac0-ec870264cc82
2024-09-18 14:36:03.216 [info] CURSOR LOG: restFunc initiated 73cb3657-3bb1-4052-9324-d2f79c16cdf4
2024-09-18 14:36:03.661 [info] CURSOR LOG: Done streaming cpp with id 73cb3657-3bb1-4052-9324-d2f79c16cdf4
2024-09-18 14:36:03.661 [info] CPP RT LOG: Time taken for streaming cpp 444.961669921875 with request 73cb3657-3bb1-4052-9324-d2f79c16cdf4
2024-09-18 14:36:03.668 [info] CPP Request Log with id 73cb3657-3bb1-4052-9324-d2f79c16cdf4
2024-09-18 14:36:03.668 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.



Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
        this.completedCoursesBySemester = new HashMap<>();

        // Add hardcoded completed courses for semesters 1 and 2
        addCompletedCoursesForPastSemesters();
    }

    private void addCompletedCoursesForPastSemesters() {
        Professor dummyProfessor = new Professor("John Doe", "johndoe@example.com", "P001");
        
        // Semester 1 courses
        List<Course> sem1Courses = new ArrayList<>();
        sem1Courses.add(new Course("CS101", "Introduction to Programming", 4, 1, dummyProfessor, "A"));
        sem1Courses.add(new Course("MA101", "Calculus I", 3, 1, dummyProfessor, "B+"));
        sem1Courses.add(new Course("PH101", "Physics I", 4, 1, dummyProfessor, "A-"));
        completedCoursesBySemester.put(1, sem1Courses);

        // Semester 2 courses
        List<Course> sem2Courses = new ArrayList<>();
        sem2Courses.add(new Course("CS201", "Data Structures", 4, 2, dummyProfessor, "A"));
        sem2Courses.add(new Course("MA201", "Linear Algebra", 3, 2, dummyProfessor, "B"));
        sem2Courses.add(new Course("EN201", "Technical Writing", 3, 2, dummyProfessor, "A-"));
        completedCoursesBySemester.put(2, sem2Courses);

        // Add all completed courses to the main list
        completedCourses.addAll(sem1Courses);
        completedCourses.addAll(sem2Courses);
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }
<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>

</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
174-|        for (Course course : registeredCourses) {
175-|            if (course.getCode().equals(courseCode)) {
176-|                registeredCourses.remove(course);
177-|                totalCredits -= course.getCredits();
178-|                System.out.println("Successfully dropped " + course.getTitle());
179-|                return;
180-|            }
174+|            totalCredits -= courseToDrop.getCredits();
175+|            System.out.println("Successfully dropped " + courseToDrop.getTitle());
176+|        } else {
177+|            System.out.println("Course not found in your registered courses.");
178 |        }
182-|        System.out.println("Course not found in your registered courses.");
then
167-|        Course courseToDrop = registeredCourses.stream()
168-|            .filter(c -> c.getCode().equals(courseCode))
169-|            .findFirst()
170-|            .orElse(null);
171-|
172-|        if (courseToDrop != null) {
173-|            registeredCourses.remove(courseToDrop);
174-|            totalCredits -= courseToDrop.getCredits();
175-|            System.out.println("Successfully dropped " + courseToDrop.getTitle());
176-|        } else {
177-|            System.out.println("Course not found in your registered courses.");
167+|        for (Course course : registeredCourses) {
168+|            if (course.getCode().equals(courseCode)) {
169+|                registeredCourses.remove(course);
170+|                totalCredits -= course.getCredits();
171+|                System.out.println("Successfully dropped " + course.getTitle());
172+|                return;
173+|            }
174 |        }
175+|        System.out.println("Course not found in your registered courses.");
then
108-|                System.out.printf("%-10s | %-40s | %-7d | %-5s%n", 
108+|                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
then
103-|            System.out.printf("%-10s | %-40s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
103+|            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
then
84-|        if (canRegisterForCourse(course)) {
85-|            registeredCourses.add(course);
86-|            totalCredits += course.getCredits();
87-|            System.out.println("Successfully registered for " + course.getTitle());
84+|        if (course.getSemester() != currentSemester) {
85+|            System.out.println("This course is not available for your current semester.");
86+|            return;
87 |        }
88+|        if (!meetsPrerequisites(course)) {
89+|            System.out.println("You don't meet the prerequisites for this course.");
90+|            return;
91+|        }
92+|        int totalCredits = registeredCourses.stream().mapToInt(Course::getCredits).sum();
93+|        if (totalCredits + course.getCredits() > 20) {
94+|            System.out.println("Registering for this course would exceed the credit limit.");
95+|            return;
96+|        }
97+|
98+|        registeredCourses.add(course);
99+|        totalCredits += course.getCredits();
100+|        System.out.println("Successfully registered for " + course.getTitle());
</diff_history>



<area_around_code_to_rewrite>

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }


<code_to_rewrite>
    public void setEmail(String email) {
        this.email = email;
    }
}
</code_to_rewrite>

</area_around_code_to_rewrite>


<diff_history>
Student.java
60-|        System.out.println("-------------------------------------------------------------------------------------");
61-|        System.out.printf("%-10s | %-40s | %-7s | %-15s | %-10s%n", "Code", "Course Name", "Credits", "Prerequisites", "Can Register");
62-|        System.out.println("-------------------------------------------------------------------------------------");
63-|        for (Course course : availableCourses) {
64-|            boolean canRegister = canRegisterForCourse(course);
65-|            System.out.printf("%-10s | %-40s | %-7d | %-15s | %-10s%n", 
66-|                course.getCode(), course.getTitle(), course.getCredits(), 
67-|                String.join(", ", course.getPrerequisites()), canRegister ? "Yes" : "No");
68-|        }
69-|        System.out.println("-------------------------------------------------------------------------------------");
60+|        CourseTable.printCourseTable(availableCourses);
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:36:03.668 [info] =======>Model output 
    public void setEmail(String email) {
        this.email = email;
    }
}
2024-09-18 14:36:03.668 [info] =======>Debug stream time 134.30901199951768
2024-09-18 14:36:03.668 [info] =======>Debug ttft time 98.96533400006592
2024-09-18 14:36:03.668 [info] Average of latest 20 ttft time 100.75291355010123
2024-09-18 14:36:03.668 [info] Average of latest 20 stream time 119.89340645004995
2024-09-18 14:36:03.668 [info] Average of latest 20 total time NaN
2024-09-18 14:36:03.668 [info] Average of latest 20 client time 507.17174072265624
2024-09-18 14:36:03.668 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:36:03.668 [info] CPP RT LOG: All stats {"streamingtime":444.961669921875,"actualTtftFromStart":488.765625,"timeTillServerRequest":66.58056640625,"requestToTtft":422.18505859375,"totalTime":511.524169921875}
2024-09-18 14:36:03.668 [info] CURSOR LOG: restFunc done 73cb3657-3bb1-4052-9324-d2f79c16cdf4
2024-09-18 14:36:14.052 [info] CURSOR LOG: restFunc initiated 910c2541-b7f9-4bba-9b63-a82f6781160d
2024-09-18 14:36:14.499 [info] CURSOR LOG: Done streaming cpp with id 910c2541-b7f9-4bba-9b63-a82f6781160d
2024-09-18 14:36:14.499 [info] CPP RT LOG: Time taken for streaming cpp 446.180419921875 with request 910c2541-b7f9-4bba-9b63-a82f6781160d
2024-09-18 14:36:14.499 [info] CPP Request Log with id 910c2541-b7f9-4bba-9b63-a82f6781160d
2024-09-18 14:36:14.499 [info] =======>Model input 
2024-09-18 14:36:14.499 [info] =======>Model output 
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
2024-09-18 14:36:14.499 [info] =======>Debug stream time 131.35172200016677
2024-09-18 14:36:14.499 [info] =======>Debug ttft time 127.01145000010729
2024-09-18 14:36:14.500 [info] Average of latest 20 ttft time 102.01292975009419
2024-09-18 14:36:14.500 [info] Average of latest 20 stream time 116.07613235004246
2024-09-18 14:36:14.500 [info] Average of latest 20 total time NaN
2024-09-18 14:36:14.500 [info] Average of latest 20 client time 503.0015380859375
2024-09-18 14:36:14.500 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:36:14.500 [info] CPP RT LOG: All stats {"streamingtime":446.180419921875,"actualTtftFromStart":490.923095703125,"timeTillServerRequest":51.181640625,"requestToTtft":439.741455078125,"totalTime":497.348876953125}
2024-09-18 14:36:14.500 [info] CURSOR LOG: restFunc done 910c2541-b7f9-4bba-9b63-a82f6781160d
2024-09-18 14:36:19.645 [info] CURSOR LOG: restFunc initiated 3af7fce6-d574-4211-9bec-c79cc0dcde8f
2024-09-18 14:36:20.131 [info] CURSOR LOG: Done streaming cpp with id 3af7fce6-d574-4211-9bec-c79cc0dcde8f
2024-09-18 14:36:20.131 [info] CPP RT LOG: Time taken for streaming cpp 486.19091796875 with request 3af7fce6-d574-4211-9bec-c79cc0dcde8f
2024-09-18 14:36:20.131 [info] CPP Request Log with id 3af7fce6-d574-4211-9bec-c79cc0dcde8f
2024-09-18 14:36:20.131 [info] =======>Model input 
2024-09-18 14:36:20.131 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();

        // Add hardcoded completed courses for semesters 1 and 2
        addCompletedCoursesForPastSemesters();
2024-09-18 14:36:20.131 [info] =======>Debug stream time 159.81876699998975
2024-09-18 14:36:20.131 [info] =======>Debug ttft time 143.82861299999058
2024-09-18 14:36:20.132 [info] Average of latest 20 ttft time 102.53796085007488
2024-09-18 14:36:20.132 [info] Average of latest 20 stream time 111.85978900003246
2024-09-18 14:36:20.132 [info] Average of latest 20 total time NaN
2024-09-18 14:36:20.132 [info] Average of latest 20 client time 505.1302978515625
2024-09-18 14:36:20.132 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:36:20.132 [info] CPP RT LOG: All stats {"streamingtime":486.19091796875,"actualTtftFromStart":530.952392578125,"timeTillServerRequest":52.622802734375,"requestToTtft":478.32958984375,"totalTime":538.7822265625}
2024-09-18 14:36:20.132 [info] CURSOR LOG: restFunc done 3af7fce6-d574-4211-9bec-c79cc0dcde8f
2024-09-18 14:36:21.173 [info] CURSOR LOG: restFunc initiated 69efb39c-57a7-4d23-af01-91bf67c19d83
2024-09-18 14:36:21.604 [info] CURSOR LOG: Done streaming cpp with id 69efb39c-57a7-4d23-af01-91bf67c19d83
2024-09-18 14:36:21.604 [info] CPP RT LOG: Time taken for streaming cpp 431.885498046875 with request 69efb39c-57a7-4d23-af01-91bf67c19d83
2024-09-18 14:36:21.604 [info] CPP Request Log with id 69efb39c-57a7-4d23-af01-91bf67c19d83
2024-09-18 14:36:21.604 [info] =======>Model input 
2024-09-18 14:36:21.604 [info] =======>Model output 

        addCompletedCoursesForPastSemesters();
    }
2024-09-18 14:36:21.604 [info] =======>Debug stream time 119.65013600047678
2024-09-18 14:36:21.604 [info] =======>Debug ttft time 74.1629990004003
2024-09-18 14:36:21.605 [info] Average of latest 20 ttft time 100.23462950009852
2024-09-18 14:36:21.605 [info] Average of latest 20 stream time 111.49349680007435
2024-09-18 14:36:21.605 [info] Average of latest 20 total time NaN
2024-09-18 14:36:21.605 [info] Average of latest 20 client time 497.6503051757812
2024-09-18 14:36:21.605 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:36:21.605 [info] CPP RT LOG: All stats {"streamingtime":431.885498046875,"actualTtftFromStart":441.654296875,"timeTillServerRequest":54.23828125,"requestToTtft":387.416015625,"totalTime":486.07373046875}
2024-09-18 14:36:21.605 [info] CURSOR LOG: restFunc done 69efb39c-57a7-4d23-af01-91bf67c19d83
2024-09-18 14:36:35.191 [info] CURSOR LOG: restFunc initiated c7419af7-a1a8-402a-bb0a-e0064ec1dca4
2024-09-18 14:36:35.591 [info] CURSOR LOG: Done streaming cpp with id c7419af7-a1a8-402a-bb0a-e0064ec1dca4
2024-09-18 14:36:35.591 [info] CPP RT LOG: Time taken for streaming cpp 400.479248046875 with request c7419af7-a1a8-402a-bb0a-e0064ec1dca4
2024-09-18 14:36:35.591 [info] CPP Request Log with id c7419af7-a1a8-402a-bb0a-e0064ec1dca4
2024-09-18 14:36:35.591 [info] =======>Model input 
2024-09-18 14:36:35.591 [info] =======>Model output 
        addCompletedCoursesForPastSemesters();
    }

    private void addCompletedCoursesForPastSemesters() {
2024-09-18 14:36:35.591 [info] =======>Debug stream time 85.74887899961323
2024-09-18 14:36:35.591 [info] =======>Debug ttft time 78.90427100006491
2024-09-18 14:36:35.592 [info] Average of latest 20 ttft time 101.00270575010218
2024-09-18 14:36:35.592 [info] Average of latest 20 stream time 112.28855105005205
2024-09-18 14:36:35.592 [info] Average of latest 20 total time NaN
2024-09-18 14:36:35.592 [info] Average of latest 20 client time 504.7397216796875
2024-09-18 14:36:35.592 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:36:35.592 [info] CPP RT LOG: All stats {"streamingtime":400.479248046875,"actualTtftFromStart":451.84375,"timeTillServerRequest":56.816650390625,"requestToTtft":395.027099609375,"totalTime":457.25439453125}
2024-09-18 14:36:35.592 [info] CURSOR LOG: restFunc done c7419af7-a1a8-402a-bb0a-e0064ec1dca4
2024-09-18 14:37:12.142 [info] CURSOR LOG: restFunc initiated 708e24e8-c618-4154-b797-f9e6c78c25e0
2024-09-18 14:37:12.756 [info] CURSOR LOG: Done streaming cpp with id 708e24e8-c618-4154-b797-f9e6c78c25e0
2024-09-18 14:37:12.756 [info] CPP RT LOG: Time taken for streaming cpp 613.86181640625 with request 708e24e8-c618-4154-b797-f9e6c78c25e0
2024-09-18 14:37:12.756 [info] CPP Request Log with id 708e24e8-c618-4154-b797-f9e6c78c25e0
2024-09-18 14:37:12.756 [info] =======>Model input 
2024-09-18 14:37:12.756 [info] =======>Model output 
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

2024-09-18 14:37:12.756 [info] =======>Debug stream time 159.4460070002824
2024-09-18 14:37:12.756 [info] =======>Debug ttft time 156.89653600007296
2024-09-18 14:37:12.757 [info] Average of latest 20 ttft time 105.07266835006885
2024-09-18 14:37:12.757 [info] Average of latest 20 stream time 116.2716534500476
2024-09-18 14:37:12.757 [info] Average of latest 20 total time NaN
2024-09-18 14:37:12.757 [info] Average of latest 20 client time 514.7462158203125
2024-09-18 14:37:12.757 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:37:12.757 [info] CPP RT LOG: All stats {"streamingtime":613.86181640625,"actualTtftFromStart":666.452392578125,"timeTillServerRequest":52.694580078125,"requestToTtft":613.7578125,"totalTime":666.53173828125}
2024-09-18 14:37:12.757 [info] CURSOR LOG: restFunc done 708e24e8-c618-4154-b797-f9e6c78c25e0
2024-09-18 14:39:47.230 [info] CURSOR LOG: restFunc initiated e8519629-9b61-482f-9ccf-8ee7b01b699a
2024-09-18 14:39:48.395 [info] CURSOR LOG: Done streaming cpp with id e8519629-9b61-482f-9ccf-8ee7b01b699a
2024-09-18 14:39:48.395 [info] CPP RT LOG: Time taken for streaming cpp 1165.221923828125 with request e8519629-9b61-482f-9ccf-8ee7b01b699a
2024-09-18 14:39:48.395 [info] CPP Request Log with id e8519629-9b61-482f-9ccf-8ee7b01b699a
2024-09-18 14:39:48.395 [info] =======>Model input 
2024-09-18 14:39:48.395 [info] =======>Model output 

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
2024-09-18 14:39:48.395 [info] =======>Debug stream time 164.26158900000155
2024-09-18 14:39:48.395 [info] =======>Debug ttft time 119.67883499991149
2024-09-18 14:39:48.396 [info] Average of latest 20 ttft time 106.44150505005382
2024-09-18 14:39:48.396 [info] Average of latest 20 stream time 119.74122630003839
2024-09-18 14:39:48.396 [info] Average of latest 20 total time NaN
2024-09-18 14:39:48.396 [info] Average of latest 20 client time 558.753515625
2024-09-18 14:39:48.396 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:39:48.396 [info] CPP RT LOG: All stats {"streamingtime":1165.221923828125,"actualTtftFromStart":1169.085205078125,"timeTillServerRequest":52.549072265625,"requestToTtft":1116.5361328125,"totalTime":1217.75537109375}
2024-09-18 14:39:48.396 [info] CURSOR LOG: restFunc done e8519629-9b61-482f-9ccf-8ee7b01b699a
2024-09-18 14:39:49.528 [info] CURSOR LOG: restFunc initiated d289a30b-fc5b-4a01-89d0-ddf81443025e
2024-09-18 14:39:49.927 [info] CURSOR LOG: Done streaming cpp with id d289a30b-fc5b-4a01-89d0-ddf81443025e
2024-09-18 14:39:49.927 [info] CPP RT LOG: Time taken for streaming cpp 399.47021484375 with request d289a30b-fc5b-4a01-89d0-ddf81443025e
2024-09-18 14:39:49.927 [info] CPP Request Log with id d289a30b-fc5b-4a01-89d0-ddf81443025e
2024-09-18 14:39:49.927 [info] =======>Model input 
2024-09-18 14:39:49.927 [info] =======>Model output 

        addCompletedCoursesForPastSemesters();
    }

2024-09-18 14:39:49.927 [info] =======>Debug stream time 72.97057700064033
2024-09-18 14:39:49.927 [info] =======>Debug ttft time 67.64301200024784
2024-09-18 14:39:49.928 [info] Average of latest 20 ttft time 103.10218920004554
2024-09-18 14:39:49.928 [info] Average of latest 20 stream time 116.28423325004988
2024-09-18 14:39:49.928 [info] Average of latest 20 total time NaN
2024-09-18 14:39:49.928 [info] Average of latest 20 client time 545.8822387695312
2024-09-18 14:39:49.928 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:39:49.928 [info] CPP RT LOG: All stats {"streamingtime":399.47021484375,"actualTtftFromStart":447.828369140625,"timeTillServerRequest":52.901123046875,"requestToTtft":394.92724609375,"totalTime":452.318115234375}
2024-09-18 14:39:49.928 [info] CURSOR LOG: restFunc done d289a30b-fc5b-4a01-89d0-ddf81443025e
2024-09-18 14:39:50.622 [info] CURSOR LOG: restFunc initiated 32f69418-e38c-45ae-a1e9-8a41348697e2
2024-09-18 14:39:51.056 [info] CURSOR LOG: Done streaming cpp with id 32f69418-e38c-45ae-a1e9-8a41348697e2
2024-09-18 14:39:51.056 [info] CPP RT LOG: Time taken for streaming cpp 434.62841796875 with request 32f69418-e38c-45ae-a1e9-8a41348697e2
2024-09-18 14:39:51.056 [info] CPP Request Log with id 32f69418-e38c-45ae-a1e9-8a41348697e2
2024-09-18 14:39:51.056 [info] =======>Model input 
2024-09-18 14:39:51.056 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();

    }

2024-09-18 14:39:51.056 [info] =======>Debug stream time 106.62479700054973
2024-09-18 14:39:51.056 [info] =======>Debug ttft time 102.15114800073206
2024-09-18 14:39:51.057 [info] Average of latest 20 ttft time 104.32525305007584
2024-09-18 14:39:51.057 [info] Average of latest 20 stream time 117.4354663501028
2024-09-18 14:39:51.057 [info] Average of latest 20 total time NaN
2024-09-18 14:39:51.057 [info] Average of latest 20 client time 547.228271484375
2024-09-18 14:39:51.057 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:39:51.057 [info] CPP RT LOG: All stats {"streamingtime":434.62841796875,"actualTtftFromStart":484.07080078125,"timeTillServerRequest":52.692626953125,"requestToTtft":431.378173828125,"totalTime":487.28369140625}
2024-09-18 14:39:51.057 [info] CURSOR LOG: restFunc done 32f69418-e38c-45ae-a1e9-8a41348697e2
2024-09-18 14:47:44.419 [info] CURSOR LOG: restFunc initiated 1039b412-059e-4708-bea4-e46c623c4250
2024-09-18 14:47:44.719 [info] CURSOR LOG: restFunc initiated abc31b19-9e62-436d-85a0-c0d2ebad14aa
2024-09-18 14:47:45.735 [info] CURSOR LOG: Done streaming cpp with id abc31b19-9e62-436d-85a0-c0d2ebad14aa
2024-09-18 14:47:45.735 [info] CPP RT LOG: Time taken for streaming cpp 1015.490478515625 with request abc31b19-9e62-436d-85a0-c0d2ebad14aa
2024-09-18 14:47:45.735 [info] CPP Request Log with id abc31b19-9e62-436d-85a0-c0d2ebad14aa
2024-09-18 14:47:45.735 [info] =======>Model input 
2024-09-18 14:47:45.735 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        
    }

2024-09-18 14:47:45.735 [info] =======>Debug stream time 160.92110799998045
2024-09-18 14:47:45.735 [info] =======>Debug ttft time 151.2357910014689
2024-09-18 14:47:45.736 [info] Average of latest 20 ttft time 107.84275995017961
2024-09-18 14:47:45.736 [info] Average of latest 20 stream time 121.16377495010383
2024-09-18 14:47:45.736 [info] Average of latest 20 total time NaN
2024-09-18 14:47:45.736 [info] Average of latest 20 client time 577.6341796875
2024-09-18 14:47:45.736 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:45.736 [info] CPP RT LOG: All stats {"streamingtime":1015.490478515625,"actualTtftFromStart":1058.521728515625,"timeTillServerRequest":52.501708984375,"requestToTtft":1006.02001953125,"totalTime":1067.94482421875}
2024-09-18 14:47:45.736 [info] CURSOR LOG: restFunc done abc31b19-9e62-436d-85a0-c0d2ebad14aa
2024-09-18 14:47:45.755 [info] CURSOR LOG: Done streaming cpp with id 1039b412-059e-4708-bea4-e46c623c4250
2024-09-18 14:47:45.755 [info] CPP RT LOG: Time taken for streaming cpp 1337.814697265625 with request 1039b412-059e-4708-bea4-e46c623c4250
2024-09-18 14:47:45.755 [info] CPP Request Log with id 1039b412-059e-4708-bea4-e46c623c4250
2024-09-18 14:47:45.755 [info] =======>Model input 
2024-09-18 14:47:45.755 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
    }

2024-09-18 14:47:45.755 [info] =======>Debug stream time 184.95596799999475
2024-09-18 14:47:45.755 [info] =======>Debug ttft time 152.7847659997642
2024-09-18 14:47:45.756 [info] Average of latest 20 ttft time 108.8751181001775
2024-09-18 14:47:45.756 [info] Average of latest 20 stream time 123.20730335013941
2024-09-18 14:47:45.756 [info] Average of latest 20 total time NaN
2024-09-18 14:47:45.756 [info] Average of latest 20 client time 613.7474243164063
2024-09-18 14:47:45.756 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:45.756 [info] CPP RT LOG: All stats {"streamingtime":1337.814697265625,"actualTtftFromStart":1359.809814453125,"timeTillServerRequest":53.4697265625,"requestToTtft":1306.340087890625,"totalTime":1391.254638671875}
2024-09-18 14:47:45.756 [info] CURSOR LOG: restFunc done 1039b412-059e-4708-bea4-e46c623c4250
2024-09-18 14:47:49.723 [info] CURSOR LOG: restFunc initiated f7f24b13-a6e6-482e-8f68-9480eed6dc8f
2024-09-18 14:47:49.933 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:47:49.933 [info] CURSOR LOG: restFunc done f7f24b13-a6e6-482e-8f68-9480eed6dc8f
2024-09-18 14:47:49.969 [info] CURSOR LOG: restFunc initiated 6cac0ba6-5fe8-44ca-a769-e1b04e283c7e
2024-09-18 14:47:50.274 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:47:50.274 [info] CURSOR LOG: restFunc done 6cac0ba6-5fe8-44ca-a769-e1b04e283c7e
2024-09-18 14:47:50.311 [info] CURSOR LOG: restFunc initiated a3b73b3c-dc6f-4900-a7fd-3bd7f27bf922
2024-09-18 14:47:50.656 [info] CURSOR LOG: Done streaming cpp with id a3b73b3c-dc6f-4900-a7fd-3bd7f27bf922
2024-09-18 14:47:50.656 [info] CPP RT LOG: Time taken for streaming cpp 344.610107421875 with request a3b73b3c-dc6f-4900-a7fd-3bd7f27bf922
2024-09-18 14:47:50.658 [info] CPP Request Log with id a3b73b3c-dc6f-4900-a7fd-3bd7f27bf922
2024-09-18 14:47:50.658 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.



Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>

Here are some snippets of code I just looked at:
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>

Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
167-|        Course courseToDrop = registeredCourses.stream()
168-|            .filter(c -> c.getCode().equals(courseCode))
169-|            .findFirst()
170-|            .orElse(null);
171-|
172-|        if (courseToDrop != null) {
173-|            registeredCourses.remove(courseToDrop);
174-|            totalCredits -= courseToDrop.getCredits();
175-|            System.out.println("Successfully dropped " + courseToDrop.getTitle());
176-|        } else {
177-|            System.out.println("Course not found in your registered courses.");
167+|        for (Course course : registeredCourses) {
168+|            if (course.getCode().equals(courseCode)) {
169+|                registeredCourses.remove(course);
170+|                totalCredits -= course.getCredits();
171+|                System.out.println("Successfully dropped " + course.getTitle());
172+|                return;
173+|            }
174 |        }
175+|        System.out.println("Course not found in your registered courses.");
then
108-|                System.out.printf("%-10s | %-40s | %-7d | %-5s%n", 
108+|                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
then
103-|            System.out.printf("%-10s | %-40s | %-7s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
103+|            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
then
84-|        if (canRegisterForCourse(course)) {
85-|            registeredCourses.add(course);
86-|            totalCredits += course.getCredits();
87-|            System.out.println("Successfully registered for " + course.getTitle());
84+|        if (course.getSemester() != currentSemester) {
85+|            System.out.println("This course is not available for your current semester.");
86+|            return;
87 |        }
88+|        if (!meetsPrerequisites(course)) {
89+|            System.out.println("You don't meet the prerequisites for this course.");
90+|            return;
91+|        }
92+|        int totalCredits = registeredCourses.stream().mapToInt(Course::getCredits).sum();
93+|        if (totalCredits + course.getCredits() > 20) {
94+|            System.out.println("Registering for this course would exceed the credit limit.");
95+|            return;
96+|        }
97+|
98+|        registeredCourses.add(course);
99+|        totalCredits += course.getCredits();
100+|        System.out.println("Successfully registered for " + course.getTitle());
then
60-|        System.out.println("-------------------------------------------------------------------------------------");
61-|        System.out.printf("%-10s | %-40s | %-7s | %-15s | %-10s%n", "Code", "Course Name", "Credits", "Prerequisites", "Can Register");
62-|        System.out.println("-------------------------------------------------------------------------------------");
63-|        for (Course course : availableCourses) {
64-|            boolean canRegister = canRegisterForCourse(course);
65-|            System.out.printf("%-10s | %-40s | %-7d | %-15s | %-10s%n", 
66-|                course.getCode(), course.getTitle(), course.getCredits(), 
67-|                String.join(", ", course.getPrerequisites()), canRegister ? "Yes" : "No");
68-|        }
69-|        System.out.println("-------------------------------------------------------------------------------------");
60+|        CourseTable.printCourseTable(availableCourses);
</diff_history>



<area_around_code_to_rewrite>
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;

<code_to_rewrite>
        this.currentSemester = 3;
        this.completedCoursesBySemester = new HashMap<>();
    }

</code_to_rewrite>


    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);

</area_around_code_to_rewrite>


<diff_history>
Student.java
26-|
27-|        addCompletedCoursesForPastSemesters();
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:47:50.658 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCoursesBySemester = new HashMap<>();
    }

2024-09-18 14:47:50.658 [info] =======>Debug stream time 142.25935599952936
2024-09-18 14:47:50.658 [info] =======>Debug ttft time 97.73661599867046
2024-09-18 14:47:50.658 [info] Average of latest 20 ttft time 109.10971380011179
2024-09-18 14:47:50.658 [info] Average of latest 20 stream time 125.34890615008771
2024-09-18 14:47:50.658 [info] Average of latest 20 total time NaN
2024-09-18 14:47:50.658 [info] Average of latest 20 client time 595.7607666015625
2024-09-18 14:47:50.658 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:50.658 [info] CPP RT LOG: All stats {"streamingtime":344.610107421875,"actualTtftFromStart":380.157470703125,"timeTillServerRequest":51.16650390625,"requestToTtft":328.990966796875,"totalTime":395.71923828125}
2024-09-18 14:47:50.658 [info] CURSOR LOG: restFunc done a3b73b3c-dc6f-4900-a7fd-3bd7f27bf922
2024-09-18 14:47:50.923 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:50.987 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:50.994 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:51.538 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:53.045 [info] CURSOR LOG: restFunc initiated 56b9e10c-4e6b-4dea-99e4-dc1c8ee9372f
2024-09-18 14:47:53.664 [info] CURSOR LOG: Done streaming cpp with id 56b9e10c-4e6b-4dea-99e4-dc1c8ee9372f
2024-09-18 14:47:53.664 [info] CPP RT LOG: Time taken for streaming cpp 619.277587890625 with request 56b9e10c-4e6b-4dea-99e4-dc1c8ee9372f
2024-09-18 14:47:53.665 [info] CPP Request Log with id 56b9e10c-4e6b-4dea-99e4-dc1c8ee9372f
2024-09-18 14:47:53.665 [info] =======>Model input 
2024-09-18 14:47:53.665 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        
    }

2024-09-18 14:47:53.665 [info] =======>Debug stream time 301.65267900004983
2024-09-18 14:47:53.665 [info] =======>Debug ttft time 295.83436099998653
2024-09-18 14:47:53.665 [info] Average of latest 20 ttft time 120.20941500011831
2024-09-18 14:47:53.665 [info] Average of latest 20 stream time 135.00068550007418
2024-09-18 14:47:53.665 [info] Average of latest 20 total time NaN
2024-09-18 14:47:53.665 [info] Average of latest 20 client time 605.909765625
2024-09-18 14:47:53.665 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:53.665 [info] CPP RT LOG: All stats {"streamingtime":619.277587890625,"actualTtftFromStart":670.2109375,"timeTillServerRequest":51.131103515625,"requestToTtft":619.079833984375,"totalTime":670.375732421875}
2024-09-18 14:47:53.665 [info] CURSOR LOG: restFunc done 56b9e10c-4e6b-4dea-99e4-dc1c8ee9372f
2024-09-18 14:47:57.154 [info] CURSOR LOG: restFunc initiated fe680e11-213d-4df1-8c95-460f8c37a667
2024-09-18 14:47:57.507 [info] CURSOR LOG: restFunc initiated adb8d4c0-17a8-42bb-88cc-8f8ea98b3ecc
2024-09-18 14:47:57.667 [info] CURSOR LOG: restFunc initiated fe751bb7-1b75-42f8-9e96-fdb0c18bca47
2024-09-18 14:47:57.687 [info] CURSOR LOG: Done streaming cpp with id fe680e11-213d-4df1-8c95-460f8c37a667
2024-09-18 14:47:57.687 [info] CPP RT LOG: Time taken for streaming cpp 533.158447265625 with request fe680e11-213d-4df1-8c95-460f8c37a667
2024-09-18 14:47:57.687 [info] CPP Request Log with id fe680e11-213d-4df1-8c95-460f8c37a667
2024-09-18 14:47:57.687 [info] =======>Model input 
2024-09-18 14:47:57.687 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        addCompletedCoursesForPastSemesters();
    }

2024-09-18 14:47:57.687 [info] =======>Debug stream time 215.02530300058424
2024-09-18 14:47:57.687 [info] =======>Debug ttft time 159.59417999908328
2024-09-18 14:47:57.688 [info] Average of latest 20 ttft time 123.27080375007354
2024-09-18 14:47:57.688 [info] Average of latest 20 stream time 140.45718320012094
2024-09-18 14:47:57.688 [info] Average of latest 20 total time NaN
2024-09-18 14:47:57.688 [info] Average of latest 20 client time 607.7006469726563
2024-09-18 14:47:57.688 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:57.688 [info] CPP RT LOG: All stats {"streamingtime":533.158447265625,"actualTtftFromStart":530.744140625,"timeTillServerRequest":51.47412109375,"requestToTtft":479.27001953125,"totalTime":584.617919921875}
2024-09-18 14:47:57.688 [info] CURSOR LOG: restFunc done fe680e11-213d-4df1-8c95-460f8c37a667
2024-09-18 14:47:57.956 [info] CURSOR LOG: Done streaming cpp with id adb8d4c0-17a8-42bb-88cc-8f8ea98b3ecc
2024-09-18 14:47:57.956 [info] CPP RT LOG: Time taken for streaming cpp 450.944091796875 with request adb8d4c0-17a8-42bb-88cc-8f8ea98b3ecc
2024-09-18 14:47:57.956 [info] CPP Request Log with id adb8d4c0-17a8-42bb-88cc-8f8ea98b3ecc
2024-09-18 14:47:57.956 [info] =======>Model input 
2024-09-18 14:47:57.956 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
    }

2024-09-18 14:47:57.956 [info] =======>Debug stream time 108.25564900040627
2024-09-18 14:47:57.956 [info] =======>Debug ttft time 83.08612000010908
2024-09-18 14:47:57.957 [info] Average of latest 20 ttft time 121.50960165010765
2024-09-18 14:47:57.957 [info] Average of latest 20 stream time 139.6101570501458
2024-09-18 14:47:57.957 [info] Average of latest 20 total time NaN
2024-09-18 14:47:57.957 [info] Average of latest 20 client time 574.7426391601563
2024-09-18 14:47:57.957 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:57.957 [info] CPP RT LOG: All stats {"streamingtime":450.944091796875,"actualTtftFromStart":504.878173828125,"timeTillServerRequest":54.165283203125,"requestToTtft":450.712890625,"totalTime":505.0556640625}
2024-09-18 14:47:57.957 [info] CURSOR LOG: restFunc done adb8d4c0-17a8-42bb-88cc-8f8ea98b3ecc
2024-09-18 14:47:57.974 [info] CURSOR LOG: Done streaming cpp with id fe751bb7-1b75-42f8-9e96-fdb0c18bca47
2024-09-18 14:47:57.974 [info] CPP RT LOG: Time taken for streaming cpp 308.148193359375 with request fe751bb7-1b75-42f8-9e96-fdb0c18bca47
2024-09-18 14:47:57.974 [info] CPP Request Log with id fe751bb7-1b75-42f8-9e96-fdb0c18bca47
2024-09-18 14:47:57.974 [info] =======>Model input 
2024-09-18 14:47:57.974 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
    }

2024-09-18 14:47:57.974 [info] =======>Debug stream time 125.7955529987812
2024-09-18 14:47:57.974 [info] =======>Debug ttft time 102.2546989992261
2024-09-18 14:47:57.974 [info] Average of latest 20 ttft time 122.78761385004036
2024-09-18 14:47:57.974 [info] Average of latest 20 stream time 141.85234555006028
2024-09-18 14:47:57.974 [info] Average of latest 20 total time NaN
2024-09-18 14:47:57.974 [info] Average of latest 20 client time 570.723828125
2024-09-18 14:47:57.974 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:57.974 [info] CPP RT LOG: All stats {"streamingtime":308.148193359375,"actualTtftFromStart":342.83544921875,"timeTillServerRequest":51.318603515625,"requestToTtft":291.516845703125,"totalTime":359.420166015625}
2024-09-18 14:47:57.974 [info] CURSOR LOG: restFunc done fe751bb7-1b75-42f8-9e96-fdb0c18bca47
2024-09-18 14:47:58.727 [info] CURSOR LOG: restFunc initiated 3e730985-de7b-4972-89e6-43e73f33a50d
2024-09-18 14:47:58.812 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:47:58.812 [info] CURSOR LOG: restFunc done 3e730985-de7b-4972-89e6-43e73f33a50d
2024-09-18 14:47:58.849 [info] CURSOR LOG: restFunc initiated e67dd402-fb1b-400c-8f36-cdbcb3e40efa
2024-09-18 14:47:58.942 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:47:58.942 [info] CURSOR LOG: restFunc done e67dd402-fb1b-400c-8f36-cdbcb3e40efa
2024-09-18 14:47:58.981 [info] CURSOR LOG: restFunc initiated 88c63ca0-c283-4b44-be50-4957a0f1b13e
2024-09-18 14:47:59.278 [info] CURSOR LOG: Done streaming cpp with id 88c63ca0-c283-4b44-be50-4957a0f1b13e
2024-09-18 14:47:59.278 [info] CPP RT LOG: Time taken for streaming cpp 297.56640625 with request 88c63ca0-c283-4b44-be50-4957a0f1b13e
2024-09-18 14:47:59.278 [info] CPP Request Log with id 88c63ca0-c283-4b44-be50-4957a0f1b13e
2024-09-18 14:47:59.278 [info] =======>Model input 
2024-09-18 14:47:59.278 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        
    }

2024-09-18 14:47:59.278 [info] =======>Debug stream time 86.52207200042903
2024-09-18 14:47:59.278 [info] =======>Debug ttft time 80.54134500026703
2024-09-18 14:47:59.279 [info] Average of latest 20 ttft time 119.58037050003186
2024-09-18 14:47:59.279 [info] Average of latest 20 stream time 138.83347090007737
2024-09-18 14:47:59.279 [info] Average of latest 20 total time NaN
2024-09-18 14:47:59.279 [info] Average of latest 20 client time 557.8642211914063
2024-09-18 14:47:59.279 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:47:59.279 [info] CPP RT LOG: All stats {"streamingtime":297.56640625,"actualTtftFromStart":341.181884765625,"timeTillServerRequest":51.718994140625,"requestToTtft":289.462890625,"totalTime":349.235595703125}
2024-09-18 14:47:59.279 [info] CURSOR LOG: restFunc done 88c63ca0-c283-4b44-be50-4957a0f1b13e
2024-09-18 14:47:59.527 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:59.533 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:59.691 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:47:59.692 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:48:01.533 [info] CURSOR LOG: restFunc initiated 7cc27736-bb3f-427e-8332-123285d52505
2024-09-18 14:48:01.626 [info] CURSOR LOG: restFunc initiated 6d9c933a-f7e4-4491-9574-a139f777c280
2024-09-18 14:48:01.783 [info] CURSOR LOG: restFunc initiated 461928e2-7390-496c-9e9d-6965779988a2
2024-09-18 14:48:01.946 [info] CURSOR LOG: restFunc initiated 554b13a5-9cb6-4665-b7af-afd9c2b18506
2024-09-18 14:48:02.313 [info] CURSOR LOG: Done streaming cpp with id 7cc27736-bb3f-427e-8332-123285d52505
2024-09-18 14:48:02.313 [info] CPP RT LOG: Time taken for streaming cpp 779.76806640625 with request 7cc27736-bb3f-427e-8332-123285d52505
2024-09-18 14:48:02.313 [info] CPP Request Log with id 7cc27736-bb3f-427e-8332-123285d52505
2024-09-18 14:48:02.313 [info] =======>Model input 
2024-09-18 14:48:02.313 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:02.313 [info] =======>Debug stream time 454.58361399918795
2024-09-18 14:48:02.313 [info] =======>Debug ttft time 76.72611900046468
2024-09-18 14:48:02.314 [info] Average of latest 20 ttft time 119.11364625003189
2024-09-18 14:48:02.314 [info] Average of latest 20 stream time 156.99429200002925
2024-09-18 14:48:02.314 [info] Average of latest 20 total time NaN
2024-09-18 14:48:02.314 [info] Average of latest 20 client time 572.9839721679688
2024-09-18 14:48:02.314 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:02.314 [info] CPP RT LOG: All stats {"streamingtime":779.76806640625,"actualTtftFromStart":459.51025390625,"timeTillServerRequest":51.4169921875,"requestToTtft":408.09326171875,"totalTime":831.172119140625}
2024-09-18 14:48:02.314 [info] CURSOR LOG: restFunc done 7cc27736-bb3f-427e-8332-123285d52505
2024-09-18 14:48:02.478 [info] CURSOR LOG: Done streaming cpp with id 6d9c933a-f7e4-4491-9574-a139f777c280
2024-09-18 14:48:02.478 [info] CPP RT LOG: Time taken for streaming cpp 852.822021484375 with request 6d9c933a-f7e4-4491-9574-a139f777c280
2024-09-18 14:48:02.478 [info] CPP Request Log with id 6d9c933a-f7e4-4491-9574-a139f777c280
2024-09-18 14:48:02.478 [info] =======>Model input 
2024-09-18 14:48:02.478 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:02.478 [info] =======>Debug stream time 492.93703800067306
2024-09-18 14:48:02.478 [info] =======>Debug ttft time 75.5419190004468
2024-09-18 14:48:02.494 [info] Average of latest 20 ttft time 117.1933513500262
2024-09-18 14:48:02.494 [info] Average of latest 20 stream time 175.70235925004818
2024-09-18 14:48:02.494 [info] Average of latest 20 total time NaN
2024-09-18 14:48:02.494 [info] Average of latest 20 client time 591.0888549804688
2024-09-18 14:48:02.494 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:02.494 [info] CPP RT LOG: All stats {"streamingtime":852.822021484375,"actualTtftFromStart":490.80224609375,"timeTillServerRequest":53.84814453125,"requestToTtft":436.9541015625,"totalTime":906.63671875}
2024-09-18 14:48:02.494 [info] CURSOR LOG: restFunc done 6d9c933a-f7e4-4491-9574-a139f777c280
2024-09-18 14:48:02.549 [info] CURSOR LOG: Done streaming cpp with id 461928e2-7390-496c-9e9d-6965779988a2
2024-09-18 14:48:02.549 [info] CPP RT LOG: Time taken for streaming cpp 767.38232421875 with request 461928e2-7390-496c-9e9d-6965779988a2
2024-09-18 14:48:02.549 [info] CPP Request Log with id 461928e2-7390-496c-9e9d-6965779988a2
2024-09-18 14:48:02.549 [info] =======>Model input 
2024-09-18 14:48:02.549 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:02.549 [info] =======>Debug stream time 528.6980140004307
2024-09-18 14:48:02.549 [info] =======>Debug ttft time 138.4093639999628
2024-09-18 14:48:02.550 [info] Average of latest 20 ttft time 119.14937390005215
2024-09-18 14:48:02.550 [info] Average of latest 20 stream time 196.78939200006425
2024-09-18 14:48:02.550 [info] Average of latest 20 total time NaN
2024-09-18 14:48:02.550 [info] Average of latest 20 client time 606.4931274414063
2024-09-18 14:48:02.550 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:02.550 [info] CPP RT LOG: All stats {"streamingtime":767.38232421875,"actualTtftFromStart":431.29736328125,"timeTillServerRequest":56.332763671875,"requestToTtft":374.964599609375,"totalTime":823.668212890625}
2024-09-18 14:48:02.550 [info] CURSOR LOG: restFunc done 461928e2-7390-496c-9e9d-6965779988a2
2024-09-18 14:48:02.580 [info] CURSOR LOG: Done streaming cpp with id 554b13a5-9cb6-4665-b7af-afd9c2b18506
2024-09-18 14:48:02.580 [info] CPP RT LOG: Time taken for streaming cpp 634.9580078125 with request 554b13a5-9cb6-4665-b7af-afd9c2b18506
2024-09-18 14:48:02.580 [info] CPP Request Log with id 554b13a5-9cb6-4665-b7af-afd9c2b18506
2024-09-18 14:48:02.580 [info] =======>Model input 
2024-09-18 14:48:02.580 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:02.580 [info] =======>Debug stream time 459.6675630006939
2024-09-18 14:48:02.580 [info] =======>Debug ttft time 81.9779669996351
2024-09-18 14:48:02.601 [info] Average of latest 20 ttft time 118.30000555003062
2024-09-18 14:48:02.601 [info] Average of latest 20 stream time 213.05731955012305
2024-09-18 14:48:02.601 [info] Average of latest 20 total time NaN
2024-09-18 14:48:02.601 [info] Average of latest 20 client time 615.9929443359375
2024-09-18 14:48:02.601 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:02.601 [info] CPP RT LOG: All stats {"streamingtime":634.9580078125,"actualTtftFromStart":310.845458984375,"timeTillServerRequest":52.36083984375,"requestToTtft":258.484619140625,"totalTime":687.28466796875}
2024-09-18 14:48:02.601 [info] CURSOR LOG: restFunc done 554b13a5-9cb6-4665-b7af-afd9c2b18506
2024-09-18 14:48:05.361 [info] CURSOR LOG: restFunc initiated 65b89b6c-0254-4eb6-8488-17b48ca00a89
2024-09-18 14:48:05.843 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:48:05.843 [info] CURSOR LOG: restFunc done 65b89b6c-0254-4eb6-8488-17b48ca00a89
2024-09-18 14:48:05.894 [info] CURSOR LOG: restFunc initiated a5835d62-bc66-40fc-ab9d-e40f3f127fd1
2024-09-18 14:48:06.021 [info] CURSOR LOG: restFunc initiated 6b8e23f0-243a-4dfb-87c3-9b0c0b038284
2024-09-18 14:48:06.542 [info] CURSOR LOG: Done streaming cpp with id 6b8e23f0-243a-4dfb-87c3-9b0c0b038284
2024-09-18 14:48:06.542 [info] CPP RT LOG: Time taken for streaming cpp 520.89501953125 with request 6b8e23f0-243a-4dfb-87c3-9b0c0b038284
2024-09-18 14:48:06.542 [info] CPP Request Log with id 6b8e23f0-243a-4dfb-87c3-9b0c0b038284
2024-09-18 14:48:06.542 [info] =======>Model input 
2024-09-18 14:48:06.542 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:06.542 [info] =======>Debug stream time 332.9248430002481
2024-09-18 14:48:06.542 [info] =======>Debug ttft time 79.12221900001168
2024-09-18 14:48:06.543 [info] Average of latest 20 ttft time 115.90554400002584
2024-09-18 14:48:06.543 [info] Average of latest 20 stream time 223.13597560012713
2024-09-18 14:48:06.543 [info] Average of latest 20 total time NaN
2024-09-18 14:48:06.543 [info] Average of latest 20 client time 619.7286743164062
2024-09-18 14:48:06.543 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:06.543 [info] CPP RT LOG: All stats {"streamingtime":520.89501953125,"actualTtftFromStart":325.63916015625,"timeTillServerRequest":53.04296875,"requestToTtft":272.59619140625,"totalTime":573.893310546875}
2024-09-18 14:48:06.543 [info] CURSOR LOG: restFunc done 6b8e23f0-243a-4dfb-87c3-9b0c0b038284
2024-09-18 14:48:07.156 [info] CURSOR LOG: Done streaming cpp with id a5835d62-bc66-40fc-ab9d-e40f3f127fd1
2024-09-18 14:48:07.156 [info] CPP RT LOG: Time taken for streaming cpp 1262.8857421875 with request a5835d62-bc66-40fc-ab9d-e40f3f127fd1
2024-09-18 14:48:07.156 [info] CPP Request Log with id a5835d62-bc66-40fc-ab9d-e40f3f127fd1
2024-09-18 14:48:07.156 [info] =======>Model input 
2024-09-18 14:48:07.156 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:07.156 [info] =======>Debug stream time 404.08465999923646
2024-09-18 14:48:07.156 [info] =======>Debug ttft time 106.61081000044942
2024-09-18 14:48:07.157 [info] Average of latest 20 ttft time 114.04465385004877
2024-09-18 14:48:07.157 [info] Average of latest 20 stream time 235.34927025008946
2024-09-18 14:48:07.157 [info] Average of latest 20 total time NaN
2024-09-18 14:48:07.157 [info] Average of latest 20 client time 658.5634155273438
2024-09-18 14:48:07.157 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:07.157 [info] CPP RT LOG: All stats {"streamingtime":1262.8857421875,"actualTtftFromStart":1016.691650390625,"timeTillServerRequest":50.5458984375,"requestToTtft":966.145751953125,"totalTime":1313.411865234375}
2024-09-18 14:48:07.157 [info] CURSOR LOG: restFunc done a5835d62-bc66-40fc-ab9d-e40f3f127fd1
2024-09-18 14:48:08.134 [info] CURSOR LOG: restFunc initiated 363cf6e4-a64e-461d-b227-1006873f1947
2024-09-18 14:48:08.239 [info] CURSOR LOG: restFunc initiated 80211133-1df5-4e4d-b201-f6bd22fb92d6
2024-09-18 14:48:08.860 [info] CURSOR LOG: Done streaming cpp with id 363cf6e4-a64e-461d-b227-1006873f1947
2024-09-18 14:48:08.860 [info] CPP RT LOG: Time taken for streaming cpp 725.319580078125 with request 363cf6e4-a64e-461d-b227-1006873f1947
2024-09-18 14:48:08.860 [info] CPP Request Log with id 363cf6e4-a64e-461d-b227-1006873f1947
2024-09-18 14:48:08.860 [info] =======>Model input 
2024-09-18 14:48:08.860 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:08.860 [info] =======>Debug stream time 407.8767620008439
2024-09-18 14:48:08.860 [info] =======>Debug ttft time 77.2530220001936
2024-09-18 14:48:08.860 [info] Average of latest 20 ttft time 114.19915500003844
2024-09-18 14:48:08.860 [info] Average of latest 20 stream time 249.76060155010782
2024-09-18 14:48:08.860 [info] Average of latest 20 total time NaN
2024-09-18 14:48:08.860 [info] Average of latest 20 client time 673.2351196289062
2024-09-18 14:48:08.860 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:08.860 [info] CPP RT LOG: All stats {"streamingtime":725.319580078125,"actualTtftFromStart":447.136474609375,"timeTillServerRequest":52.268310546875,"requestToTtft":394.8681640625,"totalTime":777.56298828125}
2024-09-18 14:48:08.860 [info] CURSOR LOG: restFunc done 363cf6e4-a64e-461d-b227-1006873f1947
2024-09-18 14:48:08.907 [info] CURSOR LOG: restFunc initiated e5636b0a-8b3c-4936-a765-bb137c904d16
2024-09-18 14:48:09.011 [info] CURSOR LOG: Done streaming cpp with id 80211133-1df5-4e4d-b201-f6bd22fb92d6
2024-09-18 14:48:09.011 [info] CPP RT LOG: Time taken for streaming cpp 772.330078125 with request 80211133-1df5-4e4d-b201-f6bd22fb92d6
2024-09-18 14:48:09.011 [info] CPP Request Log with id 80211133-1df5-4e4d-b201-f6bd22fb92d6
2024-09-18 14:48:09.011 [info] =======>Model input 
2024-09-18 14:48:09.011 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:09.011 [info] =======>Debug stream time 416.2423350010067
2024-09-18 14:48:09.011 [info] =======>Debug ttft time 84.74890500120819
2024-09-18 14:48:09.011 [info] Average of latest 20 ttft time 114.4913867000956
2024-09-18 14:48:09.011 [info] Average of latest 20 stream time 266.2852743501775
2024-09-18 14:48:09.011 [info] Average of latest 20 total time NaN
2024-09-18 14:48:09.011 [info] Average of latest 20 client time 691.8276611328125
2024-09-18 14:48:09.011 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:09.011 [info] CPP RT LOG: All stats {"streamingtime":772.330078125,"actualTtftFromStart":491.4228515625,"timeTillServerRequest":52.540283203125,"requestToTtft":438.882568359375,"totalTime":824.82958984375}
2024-09-18 14:48:09.012 [info] CURSOR LOG: restFunc done 80211133-1df5-4e4d-b201-f6bd22fb92d6
2024-09-18 14:48:09.056 [info] CURSOR LOG: restFunc initiated 38c8c976-ff1e-46f5-9351-b10047100e4c
2024-09-18 14:48:09.264 [info] CURSOR LOG: restFunc initiated 4a24edd2-0289-4d16-a9c1-8d418c935c13
2024-09-18 14:48:09.395 [info] CURSOR LOG: restFunc initiated ee07c9b5-f577-4c8e-95c0-b9b60c3ef169
2024-09-18 14:48:09.601 [info] CURSOR LOG: restFunc initiated ec7a2660-65de-443e-bf26-f0661eb97420
2024-09-18 14:48:09.601 [info] CURSOR LOG: Done streaming cpp with id e5636b0a-8b3c-4936-a765-bb137c904d16
2024-09-18 14:48:09.601 [info] CPP RT LOG: Time taken for streaming cpp 695.712890625 with request e5636b0a-8b3c-4936-a765-bb137c904d16
2024-09-18 14:48:09.601 [info] CPP Request Log with id e5636b0a-8b3c-4936-a765-bb137c904d16
2024-09-18 14:48:09.601 [info] =======>Model input 
2024-09-18 14:48:09.601 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:09.601 [info] =======>Debug stream time 405.4726619999856
2024-09-18 14:48:09.601 [info] =======>Debug ttft time 95.62105100043118
2024-09-18 14:48:09.601 [info] Average of latest 20 ttft time 111.42761245011351
2024-09-18 14:48:09.601 [info] Average of latest 20 stream time 278.58660710016267
2024-09-18 14:48:09.601 [info] Average of latest 20 total time NaN
2024-09-18 14:48:09.601 [info] Average of latest 20 client time 695.92021484375
2024-09-18 14:48:09.601 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:09.601 [info] CPP RT LOG: All stats {"streamingtime":695.712890625,"actualTtftFromStart":437.1357421875,"timeTillServerRequest":52.9658203125,"requestToTtft":384.169921875,"totalTime":748.624267578125}
2024-09-18 14:48:09.602 [info] CURSOR LOG: restFunc done e5636b0a-8b3c-4936-a765-bb137c904d16
2024-09-18 14:48:09.663 [info] CURSOR LOG: Done streaming cpp with id 38c8c976-ff1e-46f5-9351-b10047100e4c
2024-09-18 14:48:09.663 [info] CPP RT LOG: Time taken for streaming cpp 608.015380859375 with request 38c8c976-ff1e-46f5-9351-b10047100e4c
2024-09-18 14:48:09.663 [info] CPP Request Log with id 38c8c976-ff1e-46f5-9351-b10047100e4c
2024-09-18 14:48:09.663 [info] =======>Model input 
2024-09-18 14:48:09.663 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:09.663 [info] =======>Debug stream time 398.54523200169206
2024-09-18 14:48:09.663 [info] =======>Debug ttft time 93.19893399998546
2024-09-18 14:48:09.680 [info] Average of latest 20 ttft time 110.10361740011722
2024-09-18 14:48:09.680 [info] Average of latest 20 stream time 290.3007892502472
2024-09-18 14:48:09.680 [info] Average of latest 20 total time NaN
2024-09-18 14:48:09.680 [info] Average of latest 20 client time 668.0598876953125
2024-09-18 14:48:09.680 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:09.680 [info] CPP RT LOG: All stats {"streamingtime":608.015380859375,"actualTtftFromStart":324.248779296875,"timeTillServerRequest":50.92578125,"requestToTtft":273.322998046875,"totalTime":658.9150390625}
2024-09-18 14:48:09.680 [info] CURSOR LOG: restFunc done 38c8c976-ff1e-46f5-9351-b10047100e4c
2024-09-18 14:48:09.964 [info] CURSOR LOG: Done streaming cpp with id ee07c9b5-f577-4c8e-95c0-b9b60c3ef169
2024-09-18 14:48:09.964 [info] CPP RT LOG: Time taken for streaming cpp 569.0615234375 with request ee07c9b5-f577-4c8e-95c0-b9b60c3ef169
2024-09-18 14:48:09.964 [info] CPP Request Log with id ee07c9b5-f577-4c8e-95c0-b9b60c3ef169
2024-09-18 14:48:09.964 [info] =======>Model input 
2024-09-18 14:48:09.964 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:09.964 [info] =======>Debug stream time 383.67571000009775
2024-09-18 14:48:09.964 [info] =======>Debug ttft time 80.75404500029981
2024-09-18 14:48:09.966 [info] Average of latest 20 ttft time 110.75916905011982
2024-09-18 14:48:09.966 [info] Average of latest 20 stream time 305.83604590022003
2024-09-18 14:48:09.966 [info] Average of latest 20 total time NaN
2024-09-18 14:48:09.966 [info] Average of latest 20 client time 676.539453125
2024-09-18 14:48:09.966 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:09.966 [info] CPP RT LOG: All stats {"streamingtime":569.0615234375,"actualTtftFromStart":339.165283203125,"timeTillServerRequest":52.60595703125,"requestToTtft":286.559326171875,"totalTime":621.636474609375}
2024-09-18 14:48:09.966 [info] CURSOR LOG: restFunc done ee07c9b5-f577-4c8e-95c0-b9b60c3ef169
2024-09-18 14:48:10.237 [info] CURSOR LOG: Done streaming cpp with id ec7a2660-65de-443e-bf26-f0661eb97420
2024-09-18 14:48:10.237 [info] CPP RT LOG: Time taken for streaming cpp 636.919677734375 with request ec7a2660-65de-443e-bf26-f0661eb97420
2024-09-18 14:48:10.237 [info] CPP Request Log with id ec7a2660-65de-443e-bf26-f0661eb97420
2024-09-18 14:48:10.237 [info] =======>Model input 
2024-09-18 14:48:10.237 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:10.237 [info] =======>Debug stream time 451.6115839984268
2024-09-18 14:48:10.237 [info] =======>Debug ttft time 73.98373299837112
2024-09-18 14:48:10.237 [info] Average of latest 20 ttft time 109.35079830000177
2024-09-18 14:48:10.237 [info] Average of latest 20 stream time 323.0853852501139
2024-09-18 14:48:10.237 [info] Average of latest 20 total time NaN
2024-09-18 14:48:10.237 [info] Average of latest 20 client time 686.6540161132813
2024-09-18 14:48:10.237 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:10.237 [info] CPP RT LOG: All stats {"streamingtime":636.919677734375,"actualTtftFromStart":303.700439453125,"timeTillServerRequest":50.921875,"requestToTtft":252.778564453125,"totalTime":687.8115234375}
2024-09-18 14:48:10.237 [info] CURSOR LOG: restFunc done ec7a2660-65de-443e-bf26-f0661eb97420
2024-09-18 14:48:10.484 [info] CURSOR LOG: Done streaming cpp with id 4a24edd2-0289-4d16-a9c1-8d418c935c13
2024-09-18 14:48:10.484 [info] CPP RT LOG: Time taken for streaming cpp 1220.734130859375 with request 4a24edd2-0289-4d16-a9c1-8d418c935c13
2024-09-18 14:48:10.484 [info] CPP Request Log with id 4a24edd2-0289-4d16-a9c1-8d418c935c13
2024-09-18 14:48:10.484 [info] =======>Model input 
2024-09-18 14:48:10.484 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedCoursesBySemester.put(1, new ArrayList<>());
        completedCoursesBySemester.put(2, new ArrayList<>());
        completedCoursesBySemester.put(3, new ArrayList<>());
        completedCoursesBySemester.put(4, new ArrayList<>());
    }

2024-09-18 14:48:10.484 [info] =======>Debug stream time 465.9168750010431
2024-09-18 14:48:10.484 [info] =======>Debug ttft time 124.21002499945462
2024-09-18 14:48:10.485 [info] Average of latest 20 ttft time 107.99950999990105
2024-09-18 14:48:10.485 [info] Average of latest 20 stream time 338.335173600167
2024-09-18 14:48:10.485 [info] Average of latest 20 total time NaN
2024-09-18 14:48:10.485 [info] Average of latest 20 client time 696.9161987304688
2024-09-18 14:48:10.485 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:10.485 [info] CPP RT LOG: All stats {"streamingtime":1220.734130859375,"actualTtftFromStart":934.014892578125,"timeTillServerRequest":55.74755859375,"requestToTtft":878.267333984375,"totalTime":1276.45556640625}
2024-09-18 14:48:10.485 [info] CURSOR LOG: restFunc done 4a24edd2-0289-4d16-a9c1-8d418c935c13
2024-09-18 14:48:11.864 [info] CURSOR LOG: restFunc initiated 04280ad0-4be2-46b5-b569-2f62c854076b
2024-09-18 14:48:12.323 [info] CURSOR LOG: Done streaming cpp with id 04280ad0-4be2-46b5-b569-2f62c854076b
2024-09-18 14:48:12.323 [info] CPP RT LOG: Time taken for streaming cpp 458.756103515625 with request 04280ad0-4be2-46b5-b569-2f62c854076b
2024-09-18 14:48:12.324 [info] CPP Request Log with id 04280ad0-4be2-46b5-b569-2f62c854076b
2024-09-18 14:48:12.324 [info] =======>Model input 
2024-09-18 14:48:12.324 [info] =======>Model output 
        this.completedCoursesBySemester = new HashMap<>();
        completedcourses();
    }

2024-09-18 14:48:12.324 [info] =======>Debug stream time 107.51368000172079
2024-09-18 14:48:12.324 [info] =======>Debug ttft time 79.95037800073624
2024-09-18 14:48:12.324 [info] Average of latest 20 ttft time 104.35779059994965
2024-09-18 14:48:12.324 [info] Average of latest 20 stream time 334.4630592002533
2024-09-18 14:48:12.324 [info] Average of latest 20 total time NaN
2024-09-18 14:48:12.324 [info] Average of latest 20 client time 652.9632690429687
2024-09-18 14:48:12.324 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:12.324 [info] CPP RT LOG: All stats {"streamingtime":458.756103515625,"actualTtftFromStart":511,"timeTillServerRequest":52.546875,"requestToTtft":458.453125,"totalTime":511.288818359375}
2024-09-18 14:48:12.324 [info] CURSOR LOG: restFunc done 04280ad0-4be2-46b5-b569-2f62c854076b
2024-09-18 14:48:15.157 [info] CURSOR LOG: restFunc initiated ad51e674-e30a-479d-88fc-8494c231e0d5
2024-09-18 14:48:15.563 [info] CURSOR LOG: Done streaming cpp with id ad51e674-e30a-479d-88fc-8494c231e0d5
2024-09-18 14:48:15.563 [info] CPP RT LOG: Time taken for streaming cpp 406.2529296875 with request ad51e674-e30a-479d-88fc-8494c231e0d5
2024-09-18 14:48:15.563 [info] CPP Request Log with id ad51e674-e30a-479d-88fc-8494c231e0d5
2024-09-18 14:48:15.563 [info] =======>Model input 
2024-09-18 14:48:15.563 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCoursesBySemester = new HashMap<>();
        completedcourses();
    }
2024-09-18 14:48:15.563 [info] =======>Debug stream time 88.9313740003854
2024-09-18 14:48:15.563 [info] =======>Debug ttft time 82.30441000126302
2024-09-18 14:48:15.564 [info] Average of latest 20 ttft time 103.58618030007929
2024-09-18 14:48:15.564 [info] Average of latest 20 stream time 331.79666010029615
2024-09-18 14:48:15.564 [info] Average of latest 20 total time NaN
2024-09-18 14:48:15.564 [info] Average of latest 20 client time 656.04541015625
2024-09-18 14:48:15.564 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:15.564 [info] CPP RT LOG: All stats {"streamingtime":406.2529296875,"actualTtftFromStart":449.823974609375,"timeTillServerRequest":52.45068359375,"requestToTtft":397.373291015625,"totalTime":458.66943359375}
2024-09-18 14:48:15.564 [info] CURSOR LOG: restFunc done ad51e674-e30a-479d-88fc-8494c231e0d5
2024-09-18 14:48:19.061 [info] CURSOR LOG: restFunc initiated 198c66c1-6562-4440-be3e-b82c115d27a5
2024-09-18 14:48:19.607 [info] CURSOR LOG: Done streaming cpp with id 198c66c1-6562-4440-be3e-b82c115d27a5
2024-09-18 14:48:19.607 [info] CPP RT LOG: Time taken for streaming cpp 545.5751953125 with request 198c66c1-6562-4440-be3e-b82c115d27a5
2024-09-18 14:48:19.607 [info] CPP Request Log with id 198c66c1-6562-4440-be3e-b82c115d27a5
2024-09-18 14:48:19.607 [info] =======>Model input 
2024-09-18 14:48:19.607 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new HashMap<>();
        completedcourses();
    }
2024-09-18 14:48:19.607 [info] =======>Debug stream time 121.43874199874699
2024-09-18 14:48:19.607 [info] =======>Debug ttft time 115.57419999875128
2024-09-18 14:48:19.607 [info] Average of latest 20 ttft time 94.57317225001752
2024-09-18 14:48:19.607 [info] Average of latest 20 stream time 322.785963250231
2024-09-18 14:48:19.607 [info] Average of latest 20 total time NaN
2024-09-18 14:48:19.607 [info] Average of latest 20 client time 652.3602905273438
2024-09-18 14:48:19.607 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:19.607 [info] CPP RT LOG: All stats {"streamingtime":545.5751953125,"actualTtftFromStart":598.625732421875,"timeTillServerRequest":53.218994140625,"requestToTtft":545.40673828125,"totalTime":598.768798828125}
2024-09-18 14:48:19.607 [info] CURSOR LOG: restFunc done 198c66c1-6562-4440-be3e-b82c115d27a5
2024-09-18 14:48:21.813 [info] CURSOR LOG: restFunc initiated 8ba70fe4-ec71-4835-8b8e-c6ba8531d959
2024-09-18 14:48:22.360 [info] CURSOR LOG: Done streaming cpp with id 8ba70fe4-ec71-4835-8b8e-c6ba8531d959
2024-09-18 14:48:22.360 [info] CPP RT LOG: Time taken for streaming cpp 546.721435546875 with request 8ba70fe4-ec71-4835-8b8e-c6ba8531d959
2024-09-18 14:48:22.360 [info] CPP Request Log with id 8ba70fe4-ec71-4835-8b8e-c6ba8531d959
2024-09-18 14:48:22.360 [info] =======>Model input 
2024-09-18 14:48:22.360 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:48:22.360 [info] =======>Debug stream time 148.06178899854422
2024-09-18 14:48:22.360 [info] =======>Debug ttft time 143.1075949985534
2024-09-18 14:48:22.360 [info] Average of latest 20 ttft time 93.74884299999103
2024-09-18 14:48:22.360 [info] Average of latest 20 stream time 319.437787550129
2024-09-18 14:48:22.360 [info] Average of latest 20 total time NaN
2024-09-18 14:48:22.360 [info] Average of latest 20 client time 653.0384399414063
2024-09-18 14:48:22.360 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:22.360 [info] CPP RT LOG: All stats {"streamingtime":546.721435546875,"actualTtftFromStart":599.241943359375,"timeTillServerRequest":52.62646484375,"requestToTtft":546.615478515625,"totalTime":599.318603515625}
2024-09-18 14:48:22.360 [info] CURSOR LOG: restFunc done 8ba70fe4-ec71-4835-8b8e-c6ba8531d959
2024-09-18 14:48:24.277 [info] CURSOR LOG: restFunc initiated 93e4a3dc-ef66-44cb-bb9e-00b395e4b4fb
2024-09-18 14:48:24.853 [info] CURSOR LOG: Done streaming cpp with id 93e4a3dc-ef66-44cb-bb9e-00b395e4b4fb
2024-09-18 14:48:24.853 [info] CPP RT LOG: Time taken for streaming cpp 576.0205078125 with request 93e4a3dc-ef66-44cb-bb9e-00b395e4b4fb
2024-09-18 14:48:24.853 [info] CPP Request Log with id 93e4a3dc-ef66-44cb-bb9e-00b395e4b4fb
2024-09-18 14:48:24.853 [info] =======>Model input 
2024-09-18 14:48:24.853 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:48:24.853 [info] =======>Debug stream time 179.68788000009954
2024-09-18 14:48:24.853 [info] =======>Debug ttft time 86.15934900008142
2024-09-18 14:48:24.853 [info] Average of latest 20 ttft time 93.90250444998965
2024-09-18 14:48:24.853 [info] Average of latest 20 stream time 323.0093991001137
2024-09-18 14:48:24.853 [info] Average of latest 20 total time NaN
2024-09-18 14:48:24.853 [info] Average of latest 20 client time 659.2922607421875
2024-09-18 14:48:24.853 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:24.853 [info] CPP RT LOG: All stats {"streamingtime":576.0205078125,"actualTtftFromStart":538.990966796875,"timeTillServerRequest":52.6513671875,"requestToTtft":486.339599609375,"totalTime":628.64501953125}
2024-09-18 14:48:24.853 [info] CURSOR LOG: restFunc done 93e4a3dc-ef66-44cb-bb9e-00b395e4b4fb
2024-09-18 14:48:25.328 [info] CURSOR LOG: restFunc initiated c8e7ab11-9699-40a8-b6eb-cdd5c555b405
2024-09-18 14:48:25.844 [info] CURSOR LOG: Done streaming cpp with id c8e7ab11-9699-40a8-b6eb-cdd5c555b405
2024-09-18 14:48:25.844 [info] CPP RT LOG: Time taken for streaming cpp 516.233642578125 with request c8e7ab11-9699-40a8-b6eb-cdd5c555b405
2024-09-18 14:48:25.844 [info] CPP Request Log with id c8e7ab11-9699-40a8-b6eb-cdd5c555b405
2024-09-18 14:48:25.844 [info] =======>Model input 
2024-09-18 14:48:25.844 [info] =======>Model output 
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
2024-09-18 14:48:25.844 [info] =======>Debug stream time 136.84518699906766
2024-09-18 14:48:25.844 [info] =======>Debug ttft time 131.3766159992665
2024-09-18 14:48:25.844 [info] Average of latest 20 ttft time 95.35860029999166
2024-09-18 14:48:25.844 [info] Average of latest 20 stream time 323.561880800128
2024-09-18 14:48:25.844 [info] Average of latest 20 total time NaN
2024-09-18 14:48:25.844 [info] Average of latest 20 client time 669.696533203125
2024-09-18 14:48:25.844 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:48:25.844 [info] CPP RT LOG: All stats {"streamingtime":516.233642578125,"actualTtftFromStart":568.84228515625,"timeTillServerRequest":52.7568359375,"requestToTtft":516.08544921875,"totalTime":568.958740234375}
2024-09-18 14:48:25.844 [info] CURSOR LOG: restFunc done c8e7ab11-9699-40a8-b6eb-cdd5c555b405
2024-09-18 14:49:25.677 [info] CURSOR LOG: restFunc initiated 1a2022f6-1b87-4b73-b0ea-3380006d8764
2024-09-18 14:49:25.799 [info] CURSOR LOG: Error in streaming cpp [internal] Stream closed with error code NGHTTP2_REFUSED_STREAM
2024-09-18 14:49:25.799 [info] CURSOR LOG: restFunc done 1a2022f6-1b87-4b73-b0ea-3380006d8764
2024-09-18 14:49:26.568 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:49:26.568 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:49:28.032 [info] CURSOR LOG: restFunc initiated 198ba1c9-8bfe-47d8-a90c-06b0c7ae1fe0
2024-09-18 14:49:28.382 [info] CURSOR LOG: restFunc initiated 7ecd3a42-0bd0-4dbe-8fb5-5b05f901ae1c
2024-09-18 14:49:28.519 [info] CURSOR LOG: restFunc initiated c50970cf-3b61-46e2-b842-0a9d2e2dc6b6
2024-09-18 14:49:29.372 [info] CURSOR LOG: Done streaming cpp with id 198ba1c9-8bfe-47d8-a90c-06b0c7ae1fe0
2024-09-18 14:49:29.372 [info] CPP RT LOG: Time taken for streaming cpp 1339.430419921875 with request 198ba1c9-8bfe-47d8-a90c-06b0c7ae1fe0
2024-09-18 14:49:29.372 [info] CPP Request Log with id 198ba1c9-8bfe-47d8-a90c-06b0c7ae1fe0
2024-09-18 14:49:29.372 [info] =======>Model input 
2024-09-18 14:49:29.372 [info] =======>Model output 

    public void completedcourses(){
        completedCourses.put(1, new ArrayList<>());
        completedCourses.put(2, new ArrayList<>());
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
2024-09-18 14:49:29.372 [info] =======>Debug stream time 627.5248409993947
2024-09-18 14:49:29.372 [info] =======>Debug ttft time 176.0485590007156
2024-09-18 14:49:29.375 [info] Average of latest 20 ttft time 100.1339610000141
2024-09-18 14:49:29.375 [info] Average of latest 20 stream time 350.6120192500763
2024-09-18 14:49:29.375 [info] Average of latest 20 total time NaN
2024-09-18 14:49:29.375 [info] Average of latest 20 client time 721.7897338867188
2024-09-18 14:49:29.375 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:49:29.375 [info] CPP RT LOG: All stats {"streamingtime":1339.430419921875,"actualTtftFromStart":942.260009765625,"timeTillServerRequest":52.882080078125,"requestToTtft":889.3779296875,"totalTime":1392.286865234375}
2024-09-18 14:49:29.375 [info] CURSOR LOG: restFunc done 198ba1c9-8bfe-47d8-a90c-06b0c7ae1fe0
2024-09-18 14:49:29.406 [info] CURSOR LOG: Done streaming cpp with id 7ecd3a42-0bd0-4dbe-8fb5-5b05f901ae1c
2024-09-18 14:49:29.406 [info] CPP RT LOG: Time taken for streaming cpp 1025.224365234375 with request 7ecd3a42-0bd0-4dbe-8fb5-5b05f901ae1c
2024-09-18 14:49:29.406 [info] CPP Request Log with id 7ecd3a42-0bd0-4dbe-8fb5-5b05f901ae1c
2024-09-18 14:49:29.406 [info] =======>Model input 
2024-09-18 14:49:29.406 [info] =======>Model output 

    public void completedcourses(){
        completedCourses.put(1, new ArrayList<>());
        completedCourses.put(2, new ArrayList<>());
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
2024-09-18 14:49:29.406 [info] =======>Debug stream time 627.1141359992325
2024-09-18 14:49:29.406 [info] =======>Debug ttft time 171.0020070001483
2024-09-18 14:49:29.414 [info] Average of latest 20 ttft time 104.84775539999828
2024-09-18 14:49:29.414 [info] Average of latest 20 stream time 359.2385453500785
2024-09-18 14:49:29.414 [info] Average of latest 20 total time NaN
2024-09-18 14:49:29.414 [info] Average of latest 20 client time 734.062548828125
2024-09-18 14:49:29.414 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:49:29.414 [info] CPP RT LOG: All stats {"streamingtime":1025.224365234375,"actualTtftFromStart":624.17919921875,"timeTillServerRequest":56.703125,"requestToTtft":567.47607421875,"totalTime":1081.872802734375}
2024-09-18 14:49:29.414 [info] CURSOR LOG: restFunc done 7ecd3a42-0bd0-4dbe-8fb5-5b05f901ae1c
2024-09-18 14:49:29.508 [info] CURSOR LOG: Done streaming cpp with id c50970cf-3b61-46e2-b842-0a9d2e2dc6b6
2024-09-18 14:49:29.508 [info] CPP RT LOG: Time taken for streaming cpp 990.027587890625 with request c50970cf-3b61-46e2-b842-0a9d2e2dc6b6
2024-09-18 14:49:29.508 [info] CPP Request Log with id c50970cf-3b61-46e2-b842-0a9d2e2dc6b6
2024-09-18 14:49:29.508 [info] =======>Model input 
2024-09-18 14:49:29.508 [info] =======>Model output 

    public void completedcourses(){
        completedCourses.put(1, new ArrayList<>());
        completedCourses.put(2, new ArrayList<>());
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
        completedCourses.put(5, new ArrayList<>());
        completedCourses.put(6, new ArrayList<>());
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
2024-09-18 14:49:29.508 [info] =======>Debug stream time 724.7884769998491
2024-09-18 14:49:29.508 [info] =======>Debug ttft time 189.36947599984705
2024-09-18 14:49:29.513 [info] Average of latest 20 ttft time 110.53913324996829
2024-09-18 14:49:29.513 [info] Average of latest 20 stream time 370.8311173000373
2024-09-18 14:49:29.513 [info] Average of latest 20 total time NaN
2024-09-18 14:49:29.513 [info] Average of latest 20 client time 740.9228271484375
2024-09-18 14:49:29.513 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:49:29.513 [info] CPP RT LOG: All stats {"streamingtime":990.027587890625,"actualTtftFromStart":510.994873046875,"timeTillServerRequest":55.711181640625,"requestToTtft":455.28369140625,"totalTime":1045.709716796875}
2024-09-18 14:49:29.513 [info] CURSOR LOG: restFunc done c50970cf-3b61-46e2-b842-0a9d2e2dc6b6
2024-09-18 14:49:38.488 [info] CURSOR LOG: restFunc initiated e93c6fa9-dfdb-45e5-8751-14efa868c3fb
2024-09-18 14:49:38.957 [info] CURSOR LOG: Done streaming cpp with id e93c6fa9-dfdb-45e5-8751-14efa868c3fb
2024-09-18 14:49:38.958 [info] CPP RT LOG: Time taken for streaming cpp 468.778076171875 with request e93c6fa9-dfdb-45e5-8751-14efa868c3fb
2024-09-18 14:49:38.958 [info] CPP Request Log with id e93c6fa9-dfdb-45e5-8751-14efa868c3fb
2024-09-18 14:49:38.958 [info] =======>Model input 
2024-09-18 14:49:38.958 [info] =======>Model output 
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
    }

2024-09-18 14:49:38.958 [info] =======>Debug stream time 76.2791130002588
2024-09-18 14:49:38.958 [info] =======>Debug ttft time 71.37704199925065
2024-09-18 14:49:38.958 [info] Average of latest 20 ttft time 107.18751714993269
2024-09-18 14:49:38.958 [info] Average of latest 20 stream time 348.2101722500287
2024-09-18 14:49:38.958 [info] Average of latest 20 total time NaN
2024-09-18 14:49:38.958 [info] Average of latest 20 client time 725.9926147460938
2024-09-18 14:49:38.958 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:49:38.958 [info] CPP RT LOG: All stats {"streamingtime":468.778076171875,"actualTtftFromStart":520.177734375,"timeTillServerRequest":51.91943359375,"requestToTtft":468.25830078125,"totalTime":520.6728515625}
2024-09-18 14:49:38.958 [info] CURSOR LOG: restFunc done e93c6fa9-dfdb-45e5-8751-14efa868c3fb
2024-09-18 14:50:04.972 [info] CURSOR LOG: restFunc initiated dc86c22b-50f5-4c29-8ac2-a2818ff9c362
2024-09-18 14:50:05.477 [info] CURSOR LOG: Done streaming cpp with id dc86c22b-50f5-4c29-8ac2-a2818ff9c362
2024-09-18 14:50:05.477 [info] CPP RT LOG: Time taken for streaming cpp 505.3359375 with request dc86c22b-50f5-4c29-8ac2-a2818ff9c362
2024-09-18 14:50:05.477 [info] CPP Request Log with id dc86c22b-50f5-4c29-8ac2-a2818ff9c362
2024-09-18 14:50:05.477 [info] =======>Model input 
2024-09-18 14:50:05.477 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:05.477 [info] =======>Debug stream time 116.52028499916196
2024-09-18 14:50:05.477 [info] =======>Debug ttft time 109.5707859992981
2024-09-18 14:50:05.478 [info] Average of latest 20 ttft time 108.56715809991583
2024-09-18 14:50:05.478 [info] Average of latest 20 stream time 331.0528083499521
2024-09-18 14:50:05.478 [info] Average of latest 20 total time NaN
2024-09-18 14:50:05.478 [info] Average of latest 20 client time 719.5115112304687
2024-09-18 14:50:05.478 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:05.478 [info] CPP RT LOG: All stats {"streamingtime":505.3359375,"actualTtftFromStart":557.81298828125,"timeTillServerRequest":52.701904296875,"requestToTtft":505.111083984375,"totalTime":558.005126953125}
2024-09-18 14:50:05.478 [info] CURSOR LOG: restFunc done dc86c22b-50f5-4c29-8ac2-a2818ff9c362
2024-09-18 14:50:06.670 [info] CURSOR LOG: restFunc initiated bf1be971-4054-4c77-afc8-8981ae8cabb6
2024-09-18 14:50:06.951 [info] CURSOR LOG: restFunc initiated 243a1f51-a37a-482a-b21a-b8c5deeeaea8
2024-09-18 14:50:07.072 [info] CURSOR LOG: restFunc initiated ac0c9edf-c98d-4473-903a-08e24774695f
2024-09-18 14:50:07.177 [info] CURSOR LOG: restFunc initiated 331551b9-b9e3-4a41-ae49-634e17f573df
2024-09-18 14:50:07.212 [info] CURSOR LOG: Done streaming cpp with id bf1be971-4054-4c77-afc8-8981ae8cabb6
2024-09-18 14:50:07.212 [info] CPP RT LOG: Time taken for streaming cpp 542.727294921875 with request bf1be971-4054-4c77-afc8-8981ae8cabb6
2024-09-18 14:50:07.212 [info] CPP Request Log with id bf1be971-4054-4c77-afc8-8981ae8cabb6
2024-09-18 14:50:07.212 [info] =======>Model input 
2024-09-18 14:50:07.212 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:07.212 [info] =======>Debug stream time 215.22066699899733
2024-09-18 14:50:07.212 [info] =======>Debug ttft time 94.56631999835372
2024-09-18 14:50:07.213 [info] Average of latest 20 ttft time 109.33936314983293
2024-09-18 14:50:07.213 [info] Average of latest 20 stream time 325.1675995498896
2024-09-18 14:50:07.213 [info] Average of latest 20 total time NaN
2024-09-18 14:50:07.213 [info] Average of latest 20 client time 720.603125
2024-09-18 14:50:07.213 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:07.213 [info] CPP RT LOG: All stats {"streamingtime":542.727294921875,"actualTtftFromStart":476.439453125,"timeTillServerRequest":52.48388671875,"requestToTtft":423.95556640625,"totalTime":595.1845703125}
2024-09-18 14:50:07.213 [info] CURSOR LOG: restFunc done bf1be971-4054-4c77-afc8-8981ae8cabb6
2024-09-18 14:50:07.273 [info] CURSOR LOG: restFunc initiated a227230a-5fd5-4b73-a070-242fcaedfdab
2024-09-18 14:50:07.361 [info] CURSOR LOG: Done streaming cpp with id 243a1f51-a37a-482a-b21a-b8c5deeeaea8
2024-09-18 14:50:07.361 [info] CPP RT LOG: Time taken for streaming cpp 410.298583984375 with request 243a1f51-a37a-482a-b21a-b8c5deeeaea8
2024-09-18 14:50:07.361 [info] CPP Request Log with id 243a1f51-a37a-482a-b21a-b8c5deeeaea8
2024-09-18 14:50:07.361 [info] =======>Model input 
2024-09-18 14:50:07.361 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:07.361 [info] =======>Debug stream time 207.32580799981952
2024-09-18 14:50:07.361 [info] =======>Debug ttft time 94.87008200027049
2024-09-18 14:50:07.361 [info] Average of latest 20 ttft time 108.752326749824
2024-09-18 14:50:07.361 [info] Average of latest 20 stream time 315.32965694991873
2024-09-18 14:50:07.361 [info] Average of latest 20 total time NaN
2024-09-18 14:50:07.361 [info] Average of latest 20 client time 677.9737670898437
2024-09-18 14:50:07.361 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:07.361 [info] CPP RT LOG: All stats {"streamingtime":410.298583984375,"actualTtftFromStart":348.47021484375,"timeTillServerRequest":51.944580078125,"requestToTtft":296.525634765625,"totalTime":462.210693359375}
2024-09-18 14:50:07.361 [info] CURSOR LOG: restFunc done 243a1f51-a37a-482a-b21a-b8c5deeeaea8
2024-09-18 14:50:07.500 [info] CURSOR LOG: Done streaming cpp with id ac0c9edf-c98d-4473-903a-08e24774695f
2024-09-18 14:50:07.500 [info] CPP RT LOG: Time taken for streaming cpp 428.526123046875 with request ac0c9edf-c98d-4473-903a-08e24774695f
2024-09-18 14:50:07.500 [info] CPP Request Log with id ac0c9edf-c98d-4473-903a-08e24774695f
2024-09-18 14:50:07.500 [info] =======>Model input 
2024-09-18 14:50:07.500 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:07.500 [info] =======>Debug stream time 226.57471099868417
2024-09-18 14:50:07.500 [info] =======>Debug ttft time 94.12673199921846
2024-09-18 14:50:07.500 [info] Average of latest 20 ttft time 109.59601224977523
2024-09-18 14:50:07.500 [info] Average of latest 20 stream time 306.2645543998107
2024-09-18 14:50:07.500 [info] Average of latest 20 total time NaN
2024-09-18 14:50:07.500 [info] Average of latest 20 client time 663.1340942382812
2024-09-18 14:50:07.500 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:07.500 [info] CPP RT LOG: All stats {"streamingtime":428.526123046875,"actualTtftFromStart":348.199951171875,"timeTillServerRequest":52.6240234375,"requestToTtft":295.575927734375,"totalTime":481.11279296875}
2024-09-18 14:50:07.500 [info] CURSOR LOG: restFunc done ac0c9edf-c98d-4473-903a-08e24774695f
2024-09-18 14:50:07.600 [info] CURSOR LOG: Done streaming cpp with id 331551b9-b9e3-4a41-ae49-634e17f573df
2024-09-18 14:50:07.600 [info] CPP RT LOG: Time taken for streaming cpp 423.779052734375 with request 331551b9-b9e3-4a41-ae49-634e17f573df
2024-09-18 14:50:07.600 [info] CPP Request Log with id 331551b9-b9e3-4a41-ae49-634e17f573df
2024-09-18 14:50:07.600 [info] =======>Model input 
2024-09-18 14:50:07.600 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:07.600 [info] =======>Debug stream time 240.20536799915135
2024-09-18 14:50:07.600 [info] =======>Debug ttft time 105.36834399960935
2024-09-18 14:50:07.601 [info] Average of latest 20 ttft time 110.62698419969529
2024-09-18 14:50:07.601 [info] Average of latest 20 stream time 297.46270604971795
2024-09-18 14:50:07.601 [info] Average of latest 20 total time NaN
2024-09-18 14:50:07.601 [info] Average of latest 20 client time 645.70654296875
2024-09-18 14:50:07.601 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:07.601 [info] CPP RT LOG: All stats {"streamingtime":423.779052734375,"actualTtftFromStart":341.10791015625,"timeTillServerRequest":54.523681640625,"requestToTtft":286.584228515625,"totalTime":478.279296875}
2024-09-18 14:50:07.601 [info] CURSOR LOG: restFunc done 331551b9-b9e3-4a41-ae49-634e17f573df
2024-09-18 14:50:07.703 [info] CURSOR LOG: Done streaming cpp with id a227230a-5fd5-4b73-a070-242fcaedfdab
2024-09-18 14:50:07.703 [info] CPP RT LOG: Time taken for streaming cpp 431.30712890625 with request a227230a-5fd5-4b73-a070-242fcaedfdab
2024-09-18 14:50:07.703 [info] CPP Request Log with id a227230a-5fd5-4b73-a070-242fcaedfdab
2024-09-18 14:50:07.703 [info] =======>Model input 
2024-09-18 14:50:07.703 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:50:07.703 [info] =======>Debug stream time 235.38089700043201
2024-09-18 14:50:07.703 [info] =======>Debug ttft time 110.19279200024903
2024-09-18 14:50:07.704 [info] Average of latest 20 ttft time 111.35557124968618
2024-09-18 14:50:07.704 [info] Average of latest 20 stream time 288.9581177997403
2024-09-18 14:50:07.704 [info] Average of latest 20 total time NaN
2024-09-18 14:50:07.704 [info] Average of latest 20 client time 632.4862548828125
2024-09-18 14:50:07.704 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:07.704 [info] CPP RT LOG: All stats {"streamingtime":431.30712890625,"actualTtftFromStart":354.28857421875,"timeTillServerRequest":55.6669921875,"requestToTtft":298.62158203125,"totalTime":486.93310546875}
2024-09-18 14:50:07.704 [info] CURSOR LOG: restFunc done a227230a-5fd5-4b73-a070-242fcaedfdab
2024-09-18 14:50:09.436 [info] CURSOR LOG: restFunc initiated 442fad8b-98e4-47ac-9f9a-e6dcdfdb90b2
2024-09-18 14:50:09.881 [info] CURSOR LOG: Done streaming cpp with id 442fad8b-98e4-47ac-9f9a-e6dcdfdb90b2
2024-09-18 14:50:09.881 [info] CPP RT LOG: Time taken for streaming cpp 444.568359375 with request 442fad8b-98e4-47ac-9f9a-e6dcdfdb90b2
2024-09-18 14:50:09.881 [info] CPP Request Log with id 442fad8b-98e4-47ac-9f9a-e6dcdfdb90b2
2024-09-18 14:50:09.881 [info] =======>Model input 
2024-09-18 14:50:09.881 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses();
    }

2024-09-18 14:50:09.881 [info] =======>Debug stream time 98.6936130002141
2024-09-18 14:50:09.881 [info] =======>Debug ttft time 89.17844300158322
2024-09-18 14:50:09.881 [info] Average of latest 20 ttft time 111.15454669976607
2024-09-18 14:50:09.881 [info] Average of latest 20 stream time 273.96553684966636
2024-09-18 14:50:09.881 [info] Average of latest 20 total time NaN
2024-09-18 14:50:09.881 [info] Average of latest 20 client time 624.3139038085938
2024-09-18 14:50:09.881 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:09.881 [info] CPP RT LOG: All stats {"streamingtime":444.568359375,"actualTtftFromStart":496.89599609375,"timeTillServerRequest":52.504150390625,"requestToTtft":444.391845703125,"totalTime":497.041015625}
2024-09-18 14:50:09.881 [info] CURSOR LOG: restFunc done 442fad8b-98e4-47ac-9f9a-e6dcdfdb90b2
2024-09-18 14:50:10.909 [info] CURSOR LOG: restFunc initiated 44c4558a-d60c-4b47-9a72-3cb058a77bc3
2024-09-18 14:50:11.418 [info] CURSOR LOG: Done streaming cpp with id 44c4558a-d60c-4b47-9a72-3cb058a77bc3
2024-09-18 14:50:11.418 [info] CPP RT LOG: Time taken for streaming cpp 509.30615234375 with request 44c4558a-d60c-4b47-9a72-3cb058a77bc3
2024-09-18 14:50:11.418 [info] CPP Request Log with id 44c4558a-d60c-4b47-9a72-3cb058a77bc3
2024-09-18 14:50:11.418 [info] =======>Model input 
2024-09-18 14:50:11.418 [info] =======>Model output 
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
    }

2024-09-18 14:50:11.418 [info] =======>Debug stream time 141.67549699917436
2024-09-18 14:50:11.418 [info] =======>Debug ttft time 134.5842509996146
2024-09-18 14:50:11.418 [info] Average of latest 20 ttft time 113.84605699973181
2024-09-18 14:50:11.418 [info] Average of latest 20 stream time 261.8655261996202
2024-09-18 14:50:11.418 [info] Average of latest 20 total time NaN
2024-09-18 14:50:11.418 [info] Average of latest 20 client time 621.3261352539063
2024-09-18 14:50:11.418 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:11.418 [info] CPP RT LOG: All stats {"streamingtime":509.30615234375,"actualTtftFromStart":562.039306640625,"timeTillServerRequest":52.846923828125,"requestToTtft":509.1923828125,"totalTime":562.122802734375}
2024-09-18 14:50:11.418 [info] CURSOR LOG: restFunc done 44c4558a-d60c-4b47-9a72-3cb058a77bc3
2024-09-18 14:50:12.754 [info] CURSOR LOG: restFunc initiated 62f7c354-580e-4520-84c8-e3732ff1b560
2024-09-18 14:50:13.433 [info] CURSOR LOG: Done streaming cpp with id 62f7c354-580e-4520-84c8-e3732ff1b560
2024-09-18 14:50:13.433 [info] CPP RT LOG: Time taken for streaming cpp 678.869873046875 with request 62f7c354-580e-4520-84c8-e3732ff1b560
2024-09-18 14:50:13.434 [info] CPP Request Log with id 62f7c354-580e-4520-84c8-e3732ff1b560
2024-09-18 14:50:13.434 [info] =======>Model input 
2024-09-18 14:50:13.434 [info] =======>Model output 

    public void completedcourses(){
        completedCourses.put(1, new ArrayList<>());
        completedCourses.put(2, new ArrayList<>());
        completedCourses.put(3, new ArrayList<>());
        completedCourses.put(4, new ArrayList<>());
    }

2024-09-18 14:50:13.434 [info] =======>Debug stream time 342.6498540006578
2024-09-18 14:50:13.434 [info] =======>Debug ttft time 99.81734100170434
2024-09-18 14:50:13.434 [info] Average of latest 20 ttft time 115.13773739989847
2024-09-18 14:50:13.434 [info] Average of latest 20 stream time 256.41743969973174
2024-09-18 14:50:13.434 [info] Average of latest 20 total time NaN
2024-09-18 14:50:13.434 [info] Average of latest 20 client time 623.4236450195312
2024-09-18 14:50:13.434 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:13.434 [info] CPP RT LOG: All stats {"streamingtime":678.869873046875,"actualTtftFromStart":557.65283203125,"timeTillServerRequest":52.0087890625,"requestToTtft":505.64404296875,"totalTime":730.83837890625}
2024-09-18 14:50:13.434 [info] CURSOR LOG: restFunc done 62f7c354-580e-4520-84c8-e3732ff1b560
2024-09-18 14:50:14.722 [info] CURSOR LOG: restFunc initiated 729c14f4-c565-498e-8570-865afa39508a
2024-09-18 14:50:15.516 [info] CURSOR LOG: Done streaming cpp with id 729c14f4-c565-498e-8570-865afa39508a
2024-09-18 14:50:15.516 [info] CPP RT LOG: Time taken for streaming cpp 793.67578125 with request 729c14f4-c565-498e-8570-865afa39508a
2024-09-18 14:50:15.516 [info] CPP Request Log with id 729c14f4-c565-498e-8570-865afa39508a
2024-09-18 14:50:15.516 [info] =======>Model input 
2024-09-18 14:50:15.516 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses();
    }

2024-09-18 14:50:15.516 [info] =======>Debug stream time 272.4221880007535
2024-09-18 14:50:15.516 [info] =======>Debug ttft time 270.14285999909043
2024-09-18 14:50:15.517 [info] Average of latest 20 ttft time 122.43437914988026
2024-09-18 14:50:15.517 [info] Average of latest 20 stream time 246.74270534971728
2024-09-18 14:50:15.517 [info] Average of latest 20 total time NaN
2024-09-18 14:50:15.517 [info] Average of latest 20 client time 602.0707275390625
2024-09-18 14:50:15.517 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:15.517 [info] CPP RT LOG: All stats {"streamingtime":793.67578125,"actualTtftFromStart":846.05712890625,"timeTillServerRequest":52.673828125,"requestToTtft":793.38330078125,"totalTime":846.31640625}
2024-09-18 14:50:15.517 [info] CURSOR LOG: restFunc done 729c14f4-c565-498e-8570-865afa39508a
2024-09-18 14:50:20.398 [info] CURSOR LOG: restFunc initiated b2fc46a5-b8f5-4717-baf8-cc6a288821bf
2024-09-18 14:50:20.518 [info] CURSOR LOG: restFunc initiated bb4ed11f-d445-4409-96eb-1327dc718b3f
2024-09-18 14:50:20.634 [info] CURSOR LOG: restFunc initiated fe704112-0490-4adb-90e5-7343ef265463
2024-09-18 14:50:20.741 [info] CURSOR LOG: restFunc initiated 3a0d68dd-61ae-4ab9-8ac2-7d7e6561b5df
2024-09-18 14:50:20.856 [info] CURSOR LOG: Done streaming cpp with id b2fc46a5-b8f5-4717-baf8-cc6a288821bf
2024-09-18 14:50:20.856 [info] CPP RT LOG: Time taken for streaming cpp 457.750244140625 with request b2fc46a5-b8f5-4717-baf8-cc6a288821bf
2024-09-18 14:50:20.866 [info] CPP Request Log with id b2fc46a5-b8f5-4717-baf8-cc6a288821bf
2024-09-18 14:50:20.866 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.

Here are some snippets of code I've recently looked at, roughly from oldest to newest. It's possible these aren't entirely relevant to my code change.
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>


Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
</diff_history>



<area_around_code_to_rewrite>
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;

<code_to_rewrite>
        this.completedCourses= new HashMap<>();
        completedcourses(n);
    }

</code_to_rewrite>
    public void completedcourses(){
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline

</area_around_code_to_rewrite>


<diff_history>
Student.java
26-|        completedcourses();
26+|        completedcourses(n);
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:50:20.866 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses(null);
    }

2024-09-18 14:50:20.866 [info] =======>Debug stream time 134.90842700004578
2024-09-18 14:50:20.866 [info] =======>Debug ttft time 66.16295400075614
2024-09-18 14:50:20.869 [info] Average of latest 20 ttft time 121.74500794988126
2024-09-18 14:50:20.869 [info] Average of latest 20 stream time 248.11244269963353
2024-09-18 14:50:20.869 [info] Average of latest 20 total time NaN
2024-09-18 14:50:20.869 [info] Average of latest 20 client time 602.0204345703125
2024-09-18 14:50:20.869 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:20.869 [info] CPP RT LOG: All stats {"streamingtime":457.750244140625,"actualTtftFromStart":449.829345703125,"timeTillServerRequest":54.172607421875,"requestToTtft":395.65673828125,"totalTime":511.906494140625}
2024-09-18 14:50:20.869 [info] CURSOR LOG: restFunc done b2fc46a5-b8f5-4717-baf8-cc6a288821bf
2024-09-18 14:50:20.974 [info] CURSOR LOG: Done streaming cpp with id fe704112-0490-4adb-90e5-7343ef265463
2024-09-18 14:50:20.974 [info] CPP RT LOG: Time taken for streaming cpp 340.776611328125 with request fe704112-0490-4adb-90e5-7343ef265463
2024-09-18 14:50:20.974 [info] CPP Request Log with id fe704112-0490-4adb-90e5-7343ef265463
2024-09-18 14:50:20.974 [info] =======>Model input 
2024-09-18 14:50:20.974 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses(name);
    }

2024-09-18 14:50:20.974 [info] =======>Debug stream time 113.59344800002873
2024-09-18 14:50:20.974 [info] =======>Debug ttft time 71.37039699964225
2024-09-18 14:50:20.974 [info] Average of latest 20 ttft time 121.19830729980022
2024-09-18 14:50:20.974 [info] Average of latest 20 stream time 249.3455463996157
2024-09-18 14:50:20.974 [info] Average of latest 20 total time NaN
2024-09-18 14:50:20.974 [info] Average of latest 20 client time 598.7466186523437
2024-09-18 14:50:20.974 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:20.974 [info] CPP RT LOG: All stats {"streamingtime":340.776611328125,"actualTtftFromStart":353.701904296875,"timeTillServerRequest":55.064208984375,"requestToTtft":298.6376953125,"totalTime":395.80615234375}
2024-09-18 14:50:20.974 [info] CURSOR LOG: restFunc done fe704112-0490-4adb-90e5-7343ef265463
2024-09-18 14:50:21.019 [info] CURSOR LOG: Done streaming cpp with id bb4ed11f-d445-4409-96eb-1327dc718b3f
2024-09-18 14:50:21.019 [info] CPP RT LOG: Time taken for streaming cpp 501.803466796875 with request bb4ed11f-d445-4409-96eb-1327dc718b3f
2024-09-18 14:50:21.019 [info] CPP Request Log with id bb4ed11f-d445-4409-96eb-1327dc718b3f
2024-09-18 14:50:21.019 [info] =======>Model input 
2024-09-18 14:50:21.020 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses(name);
    }

2024-09-18 14:50:21.020 [info] =======>Debug stream time 144.4342760015279
2024-09-18 14:50:21.020 [info] =======>Debug ttft time 101.1545630004257
2024-09-18 14:50:21.020 [info] Average of latest 20 ttft time 120.47732544988393
2024-09-18 14:50:21.020 [info] Average of latest 20 stream time 250.49532309975476
2024-09-18 14:50:21.020 [info] Average of latest 20 total time NaN
2024-09-18 14:50:21.020 [info] Average of latest 20 client time 596.5580322265625
2024-09-18 14:50:21.020 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:21.020 [info] CPP RT LOG: All stats {"streamingtime":501.803466796875,"actualTtftFromStart":501.39990234375,"timeTillServerRequest":54.243896484375,"requestToTtft":447.156005859375,"totalTime":556.007080078125}
2024-09-18 14:50:21.020 [info] CURSOR LOG: restFunc done bb4ed11f-d445-4409-96eb-1327dc718b3f
2024-09-18 14:50:21.100 [info] CURSOR LOG: Done streaming cpp with id 3a0d68dd-61ae-4ab9-8ac2-7d7e6561b5df
2024-09-18 14:50:21.100 [info] CPP RT LOG: Time taken for streaming cpp 359.583740234375 with request 3a0d68dd-61ae-4ab9-8ac2-7d7e6561b5df
2024-09-18 14:50:21.100 [info] CPP Request Log with id 3a0d68dd-61ae-4ab9-8ac2-7d7e6561b5df
2024-09-18 14:50:21.100 [info] =======>Model input 
2024-09-18 14:50:21.100 [info] =======>Model output 
        this.completedCourses= new HashMap<>();
        completedcourses(name);
    }

2024-09-18 14:50:21.100 [info] =======>Debug stream time 82.2202960010618
2024-09-18 14:50:21.100 [info] =======>Debug ttft time 79.92603399977088
2024-09-18 14:50:21.100 [info] Average of latest 20 ttft time 117.31824739994481
2024-09-18 14:50:21.100 [info] Average of latest 20 stream time 247.20324844988062
2024-09-18 14:50:21.100 [info] Average of latest 20 total time NaN
2024-09-18 14:50:21.100 [info] Average of latest 20 client time 587.2011474609375
2024-09-18 14:50:21.101 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:21.101 [info] CPP RT LOG: All stats {"streamingtime":359.583740234375,"actualTtftFromStart":408.892822265625,"timeTillServerRequest":54.51025390625,"requestToTtft":354.382568359375,"totalTime":414.073486328125}
2024-09-18 14:50:21.101 [info] CURSOR LOG: restFunc done 3a0d68dd-61ae-4ab9-8ac2-7d7e6561b5df
2024-09-18 14:50:22.053 [info] CURSOR LOG: restFunc initiated 0c037cd4-afc3-402c-947b-888a574d799d
2024-09-18 14:50:22.682 [info] CURSOR LOG: Done streaming cpp with id 0c037cd4-afc3-402c-947b-888a574d799d
2024-09-18 14:50:22.682 [info] CPP RT LOG: Time taken for streaming cpp 629.1201171875 with request 0c037cd4-afc3-402c-947b-888a574d799d
2024-09-18 14:50:22.682 [info] CPP Request Log with id 0c037cd4-afc3-402c-947b-888a574d799d
2024-09-18 14:50:22.682 [info] =======>Model input 
2024-09-18 14:50:22.682 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.put(name, new ArrayList<>());
    }

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
2024-09-18 14:50:22.682 [info] =======>Debug stream time 304.28544300049543
2024-09-18 14:50:22.682 [info] =======>Debug ttft time 67.14848900027573
2024-09-18 14:50:22.684 [info] Average of latest 20 ttft time 116.36770439995453
2024-09-18 14:50:22.684 [info] Average of latest 20 stream time 253.43312659990042
2024-09-18 14:50:22.684 [info] Average of latest 20 total time NaN
2024-09-18 14:50:22.684 [info] Average of latest 20 client time 589.8561279296875
2024-09-18 14:50:22.684 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:22.684 [info] CPP RT LOG: All stats {"streamingtime":629.1201171875,"actualTtftFromStart":446.673095703125,"timeTillServerRequest":52.78076171875,"requestToTtft":393.892333984375,"totalTime":681.870849609375}
2024-09-18 14:50:22.684 [info] CURSOR LOG: restFunc done 0c037cd4-afc3-402c-947b-888a574d799d
2024-09-18 14:50:28.738 [info] CURSOR LOG: restFunc initiated b73fba91-b482-4b1b-929c-95e0345448cd
2024-09-18 14:50:29.220 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:50:29.220 [info] CURSOR LOG: restFunc done b73fba91-b482-4b1b-929c-95e0345448cd
2024-09-18 14:50:29.258 [info] CURSOR LOG: restFunc initiated a47612d7-d390-4d9b-a866-b862d921f1ca
2024-09-18 14:50:29.787 [info] CURSOR LOG: Done streaming cpp with id a47612d7-d390-4d9b-a866-b862d921f1ca
2024-09-18 14:50:29.787 [info] CPP RT LOG: Time taken for streaming cpp 528.626708984375 with request a47612d7-d390-4d9b-a866-b862d921f1ca
2024-09-18 14:50:29.787 [info] CPP Request Log with id a47612d7-d390-4d9b-a866-b862d921f1ca
2024-09-18 14:50:29.788 [info] =======>Model input 
2024-09-18 14:50:29.788 [info] =======>Model output 
        completedCourses.put(name, new ArrayList<>());
        completedCourses.get(name).add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
    }

2024-09-18 14:50:29.788 [info] =======>Debug stream time 333.1140100006014
2024-09-18 14:50:29.788 [info] =======>Debug ttft time 102.54446299932897
2024-09-18 14:50:29.788 [info] Average of latest 20 ttft time 114.92609674995765
2024-09-18 14:50:29.788 [info] Average of latest 20 stream time 263.2465677499771
2024-09-18 14:50:29.788 [info] Average of latest 20 total time NaN
2024-09-18 14:50:29.788 [info] Average of latest 20 client time 590.47578125
2024-09-18 14:50:29.788 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:29.788 [info] CPP RT LOG: All stats {"streamingtime":528.626708984375,"actualTtftFromStart":351.25732421875,"timeTillServerRequest":51.098388671875,"requestToTtft":300.158935546875,"totalTime":579.689697265625}
2024-09-18 14:50:29.788 [info] CURSOR LOG: restFunc done a47612d7-d390-4d9b-a866-b862d921f1ca
2024-09-18 14:50:29.951 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:50:29.952 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:50:42.220 [info] CURSOR LOG: restFunc initiated 8d388f7d-a128-453d-bde1-1c5d163684c1
2024-09-18 14:50:43.337 [info] CURSOR LOG: Done streaming cpp with id 8d388f7d-a128-453d-bde1-1c5d163684c1
2024-09-18 14:50:43.337 [info] CPP RT LOG: Time taken for streaming cpp 1117.41162109375 with request 8d388f7d-a128-453d-bde1-1c5d163684c1
2024-09-18 14:50:43.337 [info] CPP Request Log with id 8d388f7d-a128-453d-bde1-1c5d163684c1
2024-09-18 14:50:43.337 [info] =======>Model input 
2024-09-18 14:50:43.337 [info] =======>Model output 
        completedCourses.get(name).add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.get(name).add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.get(name).add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        completedCourses.get(name).add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        completedCourses.get(name).add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
    }

2024-09-18 14:50:43.337 [info] =======>Debug stream time 797.9301420003176
2024-09-18 14:50:43.337 [info] =======>Debug ttft time 107.52522700093687
2024-09-18 14:50:43.338 [info] Average of latest 20 ttft time 111.49993014996872
2024-09-18 14:50:43.338 [info] Average of latest 20 stream time 271.7668328000233
2024-09-18 14:50:43.338 [info] Average of latest 20 total time NaN
2024-09-18 14:50:43.338 [info] Average of latest 20 client time 579.3748413085938
2024-09-18 14:50:43.338 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:50:43.338 [info] CPP RT LOG: All stats {"streamingtime":1117.41162109375,"actualTtftFromStart":585.83251953125,"timeTillServerRequest":52.095703125,"requestToTtft":533.73681640625,"totalTime":1169.466796875}
2024-09-18 14:50:43.338 [info] CURSOR LOG: restFunc done 8d388f7d-a128-453d-bde1-1c5d163684c1
2024-09-18 14:50:46.780 [info] CURSOR LOG: restFunc initiated 5754e856-0118-46e2-b398-edeccad58da8
2024-09-18 14:50:48.484 [info] CURSOR LOG: Done streaming cpp with id 5754e856-0118-46e2-b398-edeccad58da8
2024-09-18 14:50:48.484 [info] CPP RT LOG: Time taken for streaming cpp 1704.250244140625 with request 5754e856-0118-46e2-b398-edeccad58da8
2024-09-18 14:50:48.485 [info] CPP Request Log with id 5754e856-0118-46e2-b398-edeccad58da8
2024-09-18 14:50:48.485 [info] =======>Model input 
2024-09-18 14:50:48.485 [info] =======>Model output 

2024-09-18 14:50:48.485 [info] =======>Debug stream time 1372.8487030006945
2024-09-18 14:50:48.485 [info] =======>Debug ttft time 105.87952100113034
2024-09-18 14:50:48.486 [info] CURSOR LOG: Error in streaming cpp [resource_exhausted] Max tokens used
2024-09-18 14:50:48.486 [info] CURSOR LOG: restFunc done 5754e856-0118-46e2-b398-edeccad58da8
2024-09-18 14:51:08.311 [info] CURSOR LOG: restFunc initiated 77490f85-1ea5-471c-89e6-d9638d24bac0
2024-09-18 14:51:08.762 [info] CURSOR LOG: Done streaming cpp with id 77490f85-1ea5-471c-89e6-d9638d24bac0
2024-09-18 14:51:08.762 [info] CPP RT LOG: Time taken for streaming cpp 451.807861328125 with request 77490f85-1ea5-471c-89e6-d9638d24bac0
2024-09-18 14:51:08.763 [info] CPP Request Log with id 77490f85-1ea5-471c-89e6-d9638d24bac0
2024-09-18 14:51:08.763 [info] =======>Model input 
2024-09-18 14:51:08.763 [info] =======>Model output 
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:51:08.763 [info] =======>Debug stream time 98.98011999949813
2024-09-18 14:51:08.763 [info] =======>Debug ttft time 95.00353600084782
2024-09-18 14:51:08.763 [info] Average of latest 20 ttft time 103.52550885006785
2024-09-18 14:51:08.763 [info] Average of latest 20 stream time 277.7631433000788
2024-09-18 14:51:08.763 [info] Average of latest 20 total time NaN
2024-09-18 14:51:08.763 [info] Average of latest 20 client time 550.7040161132812
2024-09-18 14:51:08.763 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:51:08.763 [info] CPP RT LOG: All stats {"streamingtime":451.807861328125,"actualTtftFromStart":504.274169921875,"timeTillServerRequest":52.674560546875,"requestToTtft":451.599609375,"totalTime":504.438232421875}
2024-09-18 14:51:08.763 [info] CURSOR LOG: restFunc done 77490f85-1ea5-471c-89e6-d9638d24bac0
2024-09-18 14:51:54.201 [info] CURSOR LOG: restFunc initiated 5f11905e-0eab-49d8-b6d9-b16c70084cc0
2024-09-18 14:51:54.734 [info] CURSOR LOG: Done streaming cpp with id 5f11905e-0eab-49d8-b6d9-b16c70084cc0
2024-09-18 14:51:54.734 [info] CPP RT LOG: Time taken for streaming cpp 532.91259765625 with request 5f11905e-0eab-49d8-b6d9-b16c70084cc0
2024-09-18 14:51:54.734 [info] CPP Request Log with id 5f11905e-0eab-49d8-b6d9-b16c70084cc0
2024-09-18 14:51:54.734 [info] =======>Model input 
2024-09-18 14:51:54.734 [info] =======>Model output 
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:51:54.734 [info] =======>Debug stream time 212.25788499973714
2024-09-18 14:51:54.734 [info] =======>Debug ttft time 111.95808999985456
2024-09-18 14:51:54.736 [info] Average of latest 20 ttft time 105.55456125009805
2024-09-18 14:51:54.736 [info] Average of latest 20 stream time 284.5620819000527
2024-09-18 14:51:54.736 [info] Average of latest 20 total time NaN
2024-09-18 14:51:54.736 [info] Average of latest 20 client time 527.8482666015625
2024-09-18 14:51:54.736 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:51:54.736 [info] CPP RT LOG: All stats {"streamingtime":532.91259765625,"actualTtftFromStart":487.31884765625,"timeTillServerRequest":53.1318359375,"requestToTtft":434.18701171875,"totalTime":586.016845703125}
2024-09-18 14:51:54.736 [info] CURSOR LOG: restFunc done 5f11905e-0eab-49d8-b6d9-b16c70084cc0
2024-09-18 14:51:56.277 [info] CURSOR LOG: restFunc initiated 22471279-054d-4563-959d-4896af0c2ed7
2024-09-18 14:51:56.757 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:51:56.757 [info] CURSOR LOG: restFunc done 22471279-054d-4563-959d-4896af0c2ed7
2024-09-18 14:51:56.763 [info] CURSOR LOG: restFunc initiated 2c31e623-37c2-4972-b4d1-f4587fb7d65d
2024-09-18 14:51:56.963 [info] CURSOR LOG: restFunc initiated a664ac80-9d15-42bf-bf58-c0bdb93109ea
2024-09-18 14:51:57.322 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:51:57.322 [info] CURSOR LOG: restFunc done 2c31e623-37c2-4972-b4d1-f4587fb7d65d
2024-09-18 14:51:57.322 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:51:57.322 [info] CURSOR LOG: restFunc done a664ac80-9d15-42bf-bf58-c0bdb93109ea
2024-09-18 14:51:57.373 [info] CURSOR LOG: restFunc initiated e9427bc6-9cd0-4e69-9b4a-0b4a79aa36f3
2024-09-18 14:51:57.690 [info] CURSOR LOG: restFunc initiated 358d87b2-75af-4707-a288-b3d6b802a6da
2024-09-18 14:51:57.701 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:51:57.701 [info] CURSOR LOG: restFunc done e9427bc6-9cd0-4e69-9b4a-0b4a79aa36f3
2024-09-18 14:51:58.090 [info] CURSOR LOG: Done streaming cpp with id 358d87b2-75af-4707-a288-b3d6b802a6da
2024-09-18 14:51:58.090 [info] CPP RT LOG: Time taken for streaming cpp 400.520751953125 with request 358d87b2-75af-4707-a288-b3d6b802a6da
2024-09-18 14:51:58.091 [info] CPP Request Log with id 358d87b2-75af-4707-a288-b3d6b802a6da
2024-09-18 14:51:58.091 [info] =======>Model input 
2024-09-18 14:51:58.091 [info] =======>Model output 
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:51:58.091 [info] =======>Debug stream time 209.39517999999225
2024-09-18 14:51:58.091 [info] =======>Debug ttft time 91.47463499940932
2024-09-18 14:51:58.091 [info] Average of latest 20 ttft time 104.64975370010362
2024-09-18 14:51:58.091 [info] Average of latest 20 stream time 289.20582665009425
2024-09-18 14:51:58.091 [info] Average of latest 20 total time NaN
2024-09-18 14:51:58.091 [info] Average of latest 20 client time 524.435400390625
2024-09-18 14:51:58.091 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:51:58.091 [info] CPP RT LOG: All stats {"streamingtime":400.520751953125,"actualTtftFromStart":329.128173828125,"timeTillServerRequest":51.499755859375,"requestToTtft":277.62841796875,"totalTime":451.99658203125}
2024-09-18 14:51:58.091 [info] CURSOR LOG: restFunc done 358d87b2-75af-4707-a288-b3d6b802a6da
2024-09-18 14:52:00.607 [info] CURSOR LOG: restFunc initiated 7c756854-5e46-427e-b41c-82b7819af62e
2024-09-18 14:52:01.169 [info] CURSOR LOG: Done streaming cpp with id 7c756854-5e46-427e-b41c-82b7819af62e
2024-09-18 14:52:01.169 [info] CPP RT LOG: Time taken for streaming cpp 560.99658203125 with request 7c756854-5e46-427e-b41c-82b7819af62e
2024-09-18 14:52:01.169 [info] CPP Request Log with id 7c756854-5e46-427e-b41c-82b7819af62e
2024-09-18 14:52:01.169 [info] =======>Model input 
2024-09-18 14:52:01.169 [info] =======>Model output 
    private List<Course> registeredCourses;
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
2024-09-18 14:52:01.169 [info] =======>Debug stream time 242.75701500102878
2024-09-18 14:52:01.169 [info] =======>Debug ttft time 240.2256560008973
2024-09-18 14:52:01.170 [info] Average of latest 20 ttft time 111.93272050023079
2024-09-18 14:52:01.170 [info] Average of latest 20 stream time 290.5826440501958
2024-09-18 14:52:01.170 [info] Average of latest 20 total time NaN
2024-09-18 14:52:01.170 [info] Average of latest 20 client time 527.2184326171875
2024-09-18 14:52:01.170 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:01.170 [info] CPP RT LOG: All stats {"streamingtime":560.99658203125,"actualTtftFromStart":557.906982421875,"timeTillServerRequest":1.540283203125,"requestToTtft":556.36669921875,"totalTime":562.51953125}
2024-09-18 14:52:01.170 [info] CURSOR LOG: restFunc done 7c756854-5e46-427e-b41c-82b7819af62e
2024-09-18 14:52:03.310 [info] CURSOR LOG: restFunc initiated 5507f0dc-8a37-49d0-bc60-b7615589a1e6
2024-09-18 14:52:03.749 [info] CURSOR LOG: Done streaming cpp with id 5507f0dc-8a37-49d0-bc60-b7615589a1e6
2024-09-18 14:52:03.749 [info] CPP RT LOG: Time taken for streaming cpp 439.09130859375 with request 5507f0dc-8a37-49d0-bc60-b7615589a1e6
2024-09-18 14:52:03.749 [info] CPP Request Log with id 5507f0dc-8a37-49d0-bc60-b7615589a1e6
2024-09-18 14:52:03.749 [info] =======>Model input 
2024-09-18 14:52:03.749 [info] =======>Model output 
        completedCourses.get(name).add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

    }

2024-09-18 14:52:03.749 [info] =======>Debug stream time 85.84020499885082
2024-09-18 14:52:03.749 [info] =======>Debug ttft time 80.27894299849868
2024-09-18 14:52:03.749 [info] Average of latest 20 ttft time 111.2031635501422
2024-09-18 14:52:03.749 [info] Average of latest 20 stream time 284.5083639001474
2024-09-18 14:52:03.749 [info] Average of latest 20 total time NaN
2024-09-18 14:52:03.749 [info] Average of latest 20 client time 522.0366333007812
2024-09-18 14:52:03.749 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:03.749 [info] CPP RT LOG: All stats {"streamingtime":439.09130859375,"actualTtftFromStart":490.773681640625,"timeTillServerRequest":51.7822265625,"requestToTtft":438.991455078125,"totalTime":490.850341796875}
2024-09-18 14:52:03.749 [info] CURSOR LOG: restFunc done 5507f0dc-8a37-49d0-bc60-b7615589a1e6
2024-09-18 14:52:05.753 [info] CURSOR LOG: restFunc initiated d7bba9bb-4e55-4da3-ba7e-5976a082b119
2024-09-18 14:52:06.062 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:06.062 [info] CURSOR LOG: restFunc done d7bba9bb-4e55-4da3-ba7e-5976a082b119
2024-09-18 14:52:06.101 [info] CURSOR LOG: restFunc initiated e707b46d-78fc-407d-82c9-a5f50f05d651
2024-09-18 14:52:06.387 [info] CURSOR LOG: Done streaming cpp with id e707b46d-78fc-407d-82c9-a5f50f05d651
2024-09-18 14:52:06.387 [info] CPP RT LOG: Time taken for streaming cpp 286.629150390625 with request e707b46d-78fc-407d-82c9-a5f50f05d651
2024-09-18 14:52:06.388 [info] CPP Request Log with id e707b46d-78fc-407d-82c9-a5f50f05d651
2024-09-18 14:52:06.390 [info] =======>Model input 
2024-09-18 14:52:06.390 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.put(name, new ArrayList<>());
    }

2024-09-18 14:52:06.390 [info] =======>Debug stream time 93.33093899860978
2024-09-18 14:52:06.390 [info] =======>Debug ttft time 85.87870999984443
2024-09-18 14:52:06.390 [info] Average of latest 20 ttft time 110.7907624501735
2024-09-18 14:52:06.390 [info] Average of latest 20 stream time 277.84617530014367
2024-09-18 14:52:06.390 [info] Average of latest 20 total time NaN
2024-09-18 14:52:06.390 [info] Average of latest 20 client time 515.8531616210937
2024-09-18 14:52:06.390 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:06.390 [info] CPP RT LOG: All stats {"streamingtime":286.629150390625,"actualTtftFromStart":332.23974609375,"timeTillServerRequest":51.889404296875,"requestToTtft":280.350341796875,"totalTime":338.471435546875}
2024-09-18 14:52:06.390 [info] CURSOR LOG: restFunc done e707b46d-78fc-407d-82c9-a5f50f05d651
2024-09-18 14:52:06.926 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:06.927 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:08.080 [info] CURSOR LOG: restFunc initiated 35ba6ed7-aec7-4aa1-8e23-58faa8fe5817
2024-09-18 14:52:08.565 [info] CURSOR LOG: Done streaming cpp with id 35ba6ed7-aec7-4aa1-8e23-58faa8fe5817
2024-09-18 14:52:08.565 [info] CPP RT LOG: Time taken for streaming cpp 484.650146484375 with request 35ba6ed7-aec7-4aa1-8e23-58faa8fe5817
2024-09-18 14:52:08.565 [info] CPP Request Log with id 35ba6ed7-aec7-4aa1-8e23-58faa8fe5817
2024-09-18 14:52:08.565 [info] =======>Model input 
2024-09-18 14:52:08.565 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.put(name, new ArrayList<>());
    }

2024-09-18 14:52:08.565 [info] =======>Debug stream time 112.67180299945176
2024-09-18 14:52:08.565 [info] =======>Debug ttft time 88.66273799911141
2024-09-18 14:52:08.566 [info] Average of latest 20 ttft time 109.9554821501486
2024-09-18 14:52:08.566 [info] Average of latest 20 stream time 271.4694970501587
2024-09-18 14:52:08.566 [info] Average of latest 20 total time NaN
2024-09-18 14:52:08.566 [info] Average of latest 20 client time 518.6593627929688
2024-09-18 14:52:08.566 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:08.566 [info] CPP RT LOG: All stats {"streamingtime":484.650146484375,"actualTtftFromStart":537.756103515625,"timeTillServerRequest":53.2978515625,"requestToTtft":484.458251953125,"totalTime":537.912353515625}
2024-09-18 14:52:08.566 [info] CURSOR LOG: restFunc done 35ba6ed7-aec7-4aa1-8e23-58faa8fe5817
2024-09-18 14:52:09.787 [info] CURSOR LOG: restFunc initiated 5c8bbf2f-e910-41bf-8440-7516a56b8668
2024-09-18 14:52:09.987 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:09.987 [info] CURSOR LOG: restFunc done 5c8bbf2f-e910-41bf-8440-7516a56b8668
2024-09-18 14:52:10.040 [info] CURSOR LOG: restFunc initiated 883f9ad2-77fb-4130-aa90-fb26af66b909
2024-09-18 14:52:10.214 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:10.214 [info] CURSOR LOG: restFunc done 883f9ad2-77fb-4130-aa90-fb26af66b909
2024-09-18 14:52:10.267 [info] CURSOR LOG: restFunc initiated 97ecb22a-be94-47cd-98e6-acc97571bb5d
2024-09-18 14:52:10.595 [info] CURSOR LOG: Done streaming cpp with id 97ecb22a-be94-47cd-98e6-acc97571bb5d
2024-09-18 14:52:10.595 [info] CPP RT LOG: Time taken for streaming cpp 328.720947265625 with request 97ecb22a-be94-47cd-98e6-acc97571bb5d
2024-09-18 14:52:10.595 [info] CPP Request Log with id 97ecb22a-be94-47cd-98e6-acc97571bb5d
2024-09-18 14:52:10.595 [info] =======>Model input 
2024-09-18 14:52:10.595 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.put(name, new ArrayList<>());
    }

2024-09-18 14:52:10.595 [info] =======>Debug stream time 139.62075000070035
2024-09-18 14:52:10.595 [info] =======>Debug ttft time 86.7065820004791
2024-09-18 14:52:10.597 [info] Average of latest 20 ttft time 108.7811716501601
2024-09-18 14:52:10.597 [info] Average of latest 20 stream time 266.6814897001721
2024-09-18 14:52:10.597 [info] Average of latest 20 total time NaN
2024-09-18 14:52:10.597 [info] Average of latest 20 client time 513.9064575195313
2024-09-18 14:52:10.597 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:10.597 [info] CPP RT LOG: All stats {"streamingtime":328.720947265625,"actualTtftFromStart":326.53759765625,"timeTillServerRequest":51.870849609375,"requestToTtft":274.666748046875,"totalTime":380.545166015625}
2024-09-18 14:52:10.597 [info] CURSOR LOG: restFunc done 97ecb22a-be94-47cd-98e6-acc97571bb5d
2024-09-18 14:52:16.850 [info] CURSOR LOG: restFunc initiated 3f22a3cb-ffa9-4987-a573-69feb04c0128
2024-09-18 14:52:17.334 [info] CURSOR LOG: Done streaming cpp with id 3f22a3cb-ffa9-4987-a573-69feb04c0128
2024-09-18 14:52:17.334 [info] CPP RT LOG: Time taken for streaming cpp 484.78173828125 with request 3f22a3cb-ffa9-4987-a573-69feb04c0128
2024-09-18 14:52:17.335 [info] CPP Request Log with id 3f22a3cb-ffa9-4987-a573-69feb04c0128
2024-09-18 14:52:17.335 [info] =======>Model input 
2024-09-18 14:52:17.335 [info] =======>Model output 
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:17.335 [info] =======>Debug stream time 88.83710700087249
2024-09-18 14:52:17.335 [info] =======>Debug ttft time 84.38244800083339
2024-09-18 14:52:17.335 [info] Average of latest 20 ttft time 108.54137190012261
2024-09-18 14:52:17.335 [info] Average of latest 20 stream time 266.188664400205
2024-09-18 14:52:17.335 [info] Average of latest 20 total time NaN
2024-09-18 14:52:17.335 [info] Average of latest 20 client time 516.5801879882813
2024-09-18 14:52:17.335 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:17.335 [info] CPP RT LOG: All stats {"streamingtime":484.78173828125,"actualTtftFromStart":537.5751953125,"timeTillServerRequest":52.967041015625,"requestToTtft":484.608154296875,"totalTime":537.697509765625}
2024-09-18 14:52:17.335 [info] CURSOR LOG: restFunc done 3f22a3cb-ffa9-4987-a573-69feb04c0128
2024-09-18 14:52:19.223 [info] CURSOR LOG: restFunc initiated 51b0a033-a18d-4b7e-bc2e-7672d82b5c7d
2024-09-18 14:52:19.306 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:19.306 [info] CURSOR LOG: restFunc done 51b0a033-a18d-4b7e-bc2e-7672d82b5c7d
2024-09-18 14:52:19.340 [info] CURSOR LOG: restFunc initiated fb04bfb7-f716-4628-8bbd-9bf3fbe888b4
2024-09-18 14:52:19.593 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:19.594 [info] CURSOR LOG: restFunc done fb04bfb7-f716-4628-8bbd-9bf3fbe888b4
2024-09-18 14:52:19.627 [info] CURSOR LOG: restFunc initiated 35c2183b-4502-42de-acde-edd7c9f22076
2024-09-18 14:52:20.206 [info] CURSOR LOG: Done streaming cpp with id 35c2183b-4502-42de-acde-edd7c9f22076
2024-09-18 14:52:20.206 [info] CPP RT LOG: Time taken for streaming cpp 579.3857421875 with request 35c2183b-4502-42de-acde-edd7c9f22076
2024-09-18 14:52:20.206 [info] CPP Request Log with id 35c2183b-4502-42de-acde-edd7c9f22076
2024-09-18 14:52:20.206 [info] =======>Model input 
2024-09-18 14:52:20.206 [info] =======>Model output 
    private double cgpa;
    private Map<String, List<Course>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:20.206 [info] =======>Debug stream time 388.9650279991329
2024-09-18 14:52:20.206 [info] =======>Debug ttft time 270.3249459993094
2024-09-18 14:52:20.206 [info] Average of latest 20 ttft time 115.32840665010735
2024-09-18 14:52:20.206 [info] Average of latest 20 stream time 278.55314095020293
2024-09-18 14:52:20.206 [info] Average of latest 20 total time NaN
2024-09-18 14:52:20.206 [info] Average of latest 20 client time 523.3210571289062
2024-09-18 14:52:20.206 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:20.206 [info] CPP RT LOG: All stats {"streamingtime":579.3857421875,"actualTtftFromStart":509.775146484375,"timeTillServerRequest":52.1953125,"requestToTtft":457.579833984375,"totalTime":631.544921875}
2024-09-18 14:52:20.206 [info] CURSOR LOG: restFunc done 35c2183b-4502-42de-acde-edd7c9f22076
2024-09-18 14:52:20.226 [info] CURSOR LOG: restFunc initiated 120dc870-927b-45a2-818d-26cd2af02f1f
2024-09-18 14:52:20.296 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:20.297 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:20.298 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:20.568 [info] CURSOR LOG: restFunc initiated 3c27b034-5ca8-44e0-b89f-8059b9087004
2024-09-18 14:52:20.606 [info] CURSOR LOG: Done streaming cpp with id 120dc870-927b-45a2-818d-26cd2af02f1f
2024-09-18 14:52:20.606 [info] CPP RT LOG: Time taken for streaming cpp 380.17919921875 with request 120dc870-927b-45a2-818d-26cd2af02f1f
2024-09-18 14:52:20.606 [info] CPP Request Log with id 120dc870-927b-45a2-818d-26cd2af02f1f
2024-09-18 14:52:20.606 [info] =======>Model input 
2024-09-18 14:52:20.606 [info] =======>Model output 
    private double cgpa;
    private List<Course> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:20.606 [info] =======>Debug stream time 163.4301149994135
2024-09-18 14:52:20.606 [info] =======>Debug ttft time 69.48742299899459
2024-09-18 14:52:20.606 [info] Average of latest 20 ttft time 113.81191074997187
2024-09-18 14:52:20.606 [info] Average of latest 20 stream time 269.59215400014074
2024-09-18 14:52:20.606 [info] Average of latest 20 total time NaN
2024-09-18 14:52:20.606 [info] Average of latest 20 client time 516.8647094726563
2024-09-18 14:52:20.606 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:20.607 [info] CPP RT LOG: All stats {"streamingtime":380.17919921875,"actualTtftFromStart":340.16845703125,"timeTillServerRequest":51.18896484375,"requestToTtft":288.9794921875,"totalTime":431.350341796875}
2024-09-18 14:52:20.607 [info] CURSOR LOG: restFunc done 120dc870-927b-45a2-818d-26cd2af02f1f
2024-09-18 14:52:20.762 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:20.900 [info] CURSOR LOG: Done streaming cpp with id 3c27b034-5ca8-44e0-b89f-8059b9087004
2024-09-18 14:52:20.900 [info] CPP RT LOG: Time taken for streaming cpp 332.31884765625 with request 3c27b034-5ca8-44e0-b89f-8059b9087004
2024-09-18 14:52:20.900 [info] CPP Request Log with id 3c27b034-5ca8-44e0-b89f-8059b9087004
2024-09-18 14:52:20.900 [info] =======>Model input 
2024-09-18 14:52:20.900 [info] =======>Model output 
    private double cgpa;
    private List<Course> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:20.900 [info] =======>Debug stream time 149.82707799971104
2024-09-18 14:52:20.900 [info] =======>Debug ttft time 62.28025100007653
2024-09-18 14:52:20.901 [info] Average of latest 20 ttft time 103.41878030002117
2024-09-18 14:52:20.901 [info] Average of latest 20 stream time 263.4623985000886
2024-09-18 14:52:20.901 [info] Average of latest 20 total time NaN
2024-09-18 14:52:20.901 [info] Average of latest 20 client time 499.537158203125
2024-09-18 14:52:20.901 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:20.901 [info] CPP RT LOG: All stats {"streamingtime":332.31884765625,"actualTtftFromStart":295.475830078125,"timeTillServerRequest":51.142578125,"requestToTtft":244.333251953125,"totalTime":383.434814453125}
2024-09-18 14:52:20.901 [info] CURSOR LOG: restFunc done 3c27b034-5ca8-44e0-b89f-8059b9087004
2024-09-18 14:52:22.907 [info] CURSOR LOG: restFunc initiated 04b4c5bb-27b4-46a2-8ed2-1b3764ff961d
2024-09-18 14:52:23.351 [info] CURSOR LOG: Done streaming cpp with id 04b4c5bb-27b4-46a2-8ed2-1b3764ff961d
2024-09-18 14:52:23.351 [info] CPP RT LOG: Time taken for streaming cpp 444.588623046875 with request 04b4c5bb-27b4-46a2-8ed2-1b3764ff961d
2024-09-18 14:52:23.351 [info] CPP Request Log with id 04b4c5bb-27b4-46a2-8ed2-1b3764ff961d
2024-09-18 14:52:23.351 [info] =======>Model input 
2024-09-18 14:52:23.351 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }
2024-09-18 14:52:23.351 [info] =======>Debug stream time 122.43234599940479
2024-09-18 14:52:23.351 [info] =======>Debug ttft time 81.906662998721
2024-09-18 14:52:23.351 [info] Average of latest 20 ttft time 104.20596574991941
2024-09-18 14:52:23.351 [info] Average of latest 20 stream time 262.8385944500566
2024-09-18 14:52:23.352 [info] Average of latest 20 total time NaN
2024-09-18 14:52:23.352 [info] Average of latest 20 client time 482.0828002929687
2024-09-18 14:52:23.352 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:23.352 [info] CPP RT LOG: All stats {"streamingtime":444.588623046875,"actualTtftFromStart":407.94873046875,"timeTillServerRequest":2.167724609375,"requestToTtft":405.781005859375,"totalTime":446.718505859375}
2024-09-18 14:52:23.352 [info] CURSOR LOG: restFunc done 04b4c5bb-27b4-46a2-8ed2-1b3764ff961d
2024-09-18 14:52:27.970 [info] CURSOR LOG: restFunc initiated 96425967-e3bc-4146-bcbd-82c363e59fd2
2024-09-18 14:52:28.048 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:28.048 [info] CURSOR LOG: restFunc done 96425967-e3bc-4146-bcbd-82c363e59fd2
2024-09-18 14:52:28.082 [info] CURSOR LOG: restFunc initiated 992d935a-946b-4e26-8381-190d63b37e23
2024-09-18 14:52:28.570 [info] CURSOR LOG: Done streaming cpp with id 992d935a-946b-4e26-8381-190d63b37e23
2024-09-18 14:52:28.570 [info] CPP RT LOG: Time taken for streaming cpp 488.20166015625 with request 992d935a-946b-4e26-8381-190d63b37e23
2024-09-18 14:52:28.570 [info] CPP Request Log with id 992d935a-946b-4e26-8381-190d63b37e23
2024-09-18 14:52:28.570 [info] =======>Model input 
2024-09-18 14:52:28.570 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }
2024-09-18 14:52:28.570 [info] =======>Debug stream time 142.0921019986272
2024-09-18 14:52:28.570 [info] =======>Debug ttft time 92.99957799911499
2024-09-18 14:52:28.571 [info] Average of latest 20 ttft time 105.28742479989305
2024-09-18 14:52:28.571 [info] Average of latest 20 stream time 264.2635271499865
2024-09-18 14:52:28.571 [info] Average of latest 20 total time NaN
2024-09-18 14:52:28.571 [info] Average of latest 20 client time 483.60537109375
2024-09-18 14:52:28.571 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:28.571 [info] CPP RT LOG: All stats {"streamingtime":488.20166015625,"actualTtftFromStart":489.385498046875,"timeTillServerRequest":51.8330078125,"requestToTtft":437.552490234375,"totalTime":539.9873046875}
2024-09-18 14:52:28.571 [info] CURSOR LOG: restFunc done 992d935a-946b-4e26-8381-190d63b37e23
2024-09-18 14:52:28.743 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:28.745 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:29.572 [info] CURSOR LOG: restFunc initiated 6663c35f-f9f2-4e0a-b08e-c69fb4f708dc
2024-09-18 14:52:31.110 [info] CURSOR LOG: Done streaming cpp with id 6663c35f-f9f2-4e0a-b08e-c69fb4f708dc
2024-09-18 14:52:31.110 [info] CPP RT LOG: Time taken for streaming cpp 1538.241943359375 with request 6663c35f-f9f2-4e0a-b08e-c69fb4f708dc
2024-09-18 14:52:31.110 [info] CPP Request Log with id 6663c35f-f9f2-4e0a-b08e-c69fb4f708dc
2024-09-18 14:52:31.110 [info] =======>Model input 
2024-09-18 14:52:31.110 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
    }

2024-09-18 14:52:31.110 [info] =======>Debug stream time 1218.6755559984595
2024-09-18 14:52:31.110 [info] =======>Debug ttft time 124.50256299972534
2024-09-18 14:52:31.112 [info] Average of latest 20 ttft time 106.45482479985803
2024-09-18 14:52:31.112 [info] Average of latest 20 stream time 317.97559114983306
2024-09-18 14:52:31.112 [info] Average of latest 20 total time NaN
2024-09-18 14:52:31.112 [info] Average of latest 20 client time 543.4786376953125
2024-09-18 14:52:31.112 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:31.112 [info] CPP RT LOG: All stats {"streamingtime":1538.241943359375,"actualTtftFromStart":457.67724609375,"timeTillServerRequest":1.639404296875,"requestToTtft":456.037841796875,"totalTime":1539.854736328125}
2024-09-18 14:52:31.112 [info] CURSOR LOG: restFunc done 6663c35f-f9f2-4e0a-b08e-c69fb4f708dc
2024-09-18 14:52:33.224 [info] CURSOR LOG: restFunc initiated 925eab8e-100f-4b9a-9cf4-887498ad8952
2024-09-18 14:52:33.659 [info] CURSOR LOG: Done streaming cpp with id 925eab8e-100f-4b9a-9cf4-887498ad8952
2024-09-18 14:52:33.659 [info] CPP RT LOG: Time taken for streaming cpp 434.422119140625 with request 925eab8e-100f-4b9a-9cf4-887498ad8952
2024-09-18 14:52:33.659 [info] CPP Request Log with id 925eab8e-100f-4b9a-9cf4-887498ad8952
2024-09-18 14:52:33.659 [info] =======>Model input 
2024-09-18 14:52:33.659 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
2024-09-18 14:52:33.659 [info] =======>Debug stream time 115.16339899972081
2024-09-18 14:52:33.659 [info] =======>Debug ttft time 111.70118799991906
2024-09-18 14:52:33.662 [info] Average of latest 20 ttft time 108.04358249986544
2024-09-18 14:52:33.662 [info] Average of latest 20 stream time 319.622746299766
2024-09-18 14:52:33.662 [info] Average of latest 20 total time NaN
2024-09-18 14:52:33.662 [info] Average of latest 20 client time 540.1095703125
2024-09-18 14:52:33.662 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:33.662 [info] CPP RT LOG: All stats {"streamingtime":434.422119140625,"actualTtftFromStart":483.4892578125,"timeTillServerRequest":51.4248046875,"requestToTtft":432.064453125,"totalTime":485.81787109375}
2024-09-18 14:52:33.662 [info] CURSOR LOG: restFunc done 925eab8e-100f-4b9a-9cf4-887498ad8952
2024-09-18 14:52:45.848 [info] CURSOR LOG: restFunc initiated b8c160cd-f0ab-44fa-ad73-84cf96721061
2024-09-18 14:52:46.760 [info] CURSOR LOG: Done streaming cpp with id b8c160cd-f0ab-44fa-ad73-84cf96721061
2024-09-18 14:52:46.760 [info] CPP RT LOG: Time taken for streaming cpp 912.52685546875 with request b8c160cd-f0ab-44fa-ad73-84cf96721061
2024-09-18 14:52:46.760 [info] CPP Request Log with id b8c160cd-f0ab-44fa-ad73-84cf96721061
2024-09-18 14:52:46.760 [info] =======>Model input 
2024-09-18 14:52:46.760 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:46.760 [info] =======>Debug stream time 147.9484410006553
2024-09-18 14:52:46.760 [info] =======>Debug ttft time 96.31156000122428
2024-09-18 14:52:46.761 [info] Average of latest 20 ttft time 109.50173604991286
2024-09-18 14:52:46.761 [info] Average of latest 20 stream time 311.805896199774
2024-09-18 14:52:46.761 [info] Average of latest 20 total time NaN
2024-09-18 14:52:46.761 [info] Average of latest 20 client time 567.7567260742187
2024-09-18 14:52:46.761 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:46.761 [info] CPP RT LOG: All stats {"streamingtime":912.52685546875,"actualTtftFromStart":965.095458984375,"timeTillServerRequest":52.6875,"requestToTtft":912.407958984375,"totalTime":965.177490234375}
2024-09-18 14:52:46.761 [info] CURSOR LOG: restFunc done b8c160cd-f0ab-44fa-ad73-84cf96721061
2024-09-18 14:52:49.531 [info] CURSOR LOG: restFunc initiated 837b527e-a6db-4397-84dc-0d0fa39e5177
2024-09-18 14:52:50.348 [info] CURSOR LOG: Done streaming cpp with id 837b527e-a6db-4397-84dc-0d0fa39e5177
2024-09-18 14:52:50.348 [info] CPP RT LOG: Time taken for streaming cpp 815.921142578125 with request 837b527e-a6db-4397-84dc-0d0fa39e5177
2024-09-18 14:52:50.348 [info] CPP Request Log with id 837b527e-a6db-4397-84dc-0d0fa39e5177
2024-09-18 14:52:50.348 [info] =======>Model input 
2024-09-18 14:52:50.348 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:50.348 [info] =======>Debug stream time 161.21949799917638
2024-09-18 14:52:50.348 [info] =======>Debug ttft time 87.17510600015521
2024-09-18 14:52:50.349 [info] Average of latest 20 ttft time 108.73326819995418
2024-09-18 14:52:50.349 [info] Average of latest 20 stream time 303.21117059970277
2024-09-18 14:52:50.349 [info] Average of latest 20 total time NaN
2024-09-18 14:52:50.349 [info] Average of latest 20 client time 577.09677734375
2024-09-18 14:52:50.349 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:50.349 [info] CPP RT LOG: All stats {"streamingtime":815.921142578125,"actualTtftFromStart":461.88330078125,"timeTillServerRequest":51.4697265625,"requestToTtft":410.41357421875,"totalTime":867.37646484375}
2024-09-18 14:52:50.349 [info] CURSOR LOG: restFunc done 837b527e-a6db-4397-84dc-0d0fa39e5177
2024-09-18 14:52:52.047 [info] CURSOR LOG: restFunc initiated 6491c471-26a3-4123-a10c-ea1e71567bb4
2024-09-18 14:52:52.136 [info] CURSOR LOG: restFunc initiated 4e12fbcc-6f59-4c3b-919a-74c2a5d8f011
2024-09-18 14:52:52.431 [info] CURSOR LOG: restFunc initiated a592e511-a28d-47aa-bf54-a524af8beb80
2024-09-18 14:52:52.527 [info] CURSOR LOG: Done streaming cpp with id 6491c471-26a3-4123-a10c-ea1e71567bb4
2024-09-18 14:52:52.527 [info] CPP RT LOG: Time taken for streaming cpp 479.358642578125 with request 6491c471-26a3-4123-a10c-ea1e71567bb4
2024-09-18 14:52:52.527 [info] CPP Request Log with id 6491c471-26a3-4123-a10c-ea1e71567bb4
2024-09-18 14:52:52.527 [info] =======>Model input 
2024-09-18 14:52:52.527 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:52.527 [info] =======>Debug stream time 158.0165489986539
2024-09-18 14:52:52.527 [info] =======>Debug ttft time 87.55291299894452
2024-09-18 14:52:52.528 [info] Average of latest 20 ttft time 107.73465249985456
2024-09-18 14:52:52.528 [info] Average of latest 20 stream time 271.21549094961955
2024-09-18 14:52:52.528 [info] Average of latest 20 total time NaN
2024-09-18 14:52:52.528 [info] Average of latest 20 client time 574.6333740234375
2024-09-18 14:52:52.528 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:52.528 [info] CPP RT LOG: All stats {"streamingtime":479.358642578125,"actualTtftFromStart":469.409912109375,"timeTillServerRequest":54.252685546875,"requestToTtft":415.1572265625,"totalTime":533.580078125}
2024-09-18 14:52:52.528 [info] CURSOR LOG: restFunc done 6491c471-26a3-4123-a10c-ea1e71567bb4
2024-09-18 14:52:52.680 [info] CURSOR LOG: Done streaming cpp with id 4e12fbcc-6f59-4c3b-919a-74c2a5d8f011
2024-09-18 14:52:52.680 [info] CPP RT LOG: Time taken for streaming cpp 545.1201171875 with request 4e12fbcc-6f59-4c3b-919a-74c2a5d8f011
2024-09-18 14:52:52.680 [info] CPP Request Log with id 4e12fbcc-6f59-4c3b-919a-74c2a5d8f011
2024-09-18 14:52:52.680 [info] =======>Model input 
2024-09-18 14:52:52.680 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:52.680 [info] =======>Debug stream time 174.59203399904072
2024-09-18 14:52:52.680 [info] =======>Debug ttft time 106.65606799907982
2024-09-18 14:52:52.682 [info] Average of latest 20 ttft time 107.77347984975204
2024-09-18 14:52:52.682 [info] Average of latest 20 stream time 211.30265749953688
2024-09-18 14:52:52.682 [info] Average of latest 20 total time NaN
2024-09-18 14:52:52.682 [info] Average of latest 20 client time 546.018798828125
2024-09-18 14:52:52.682 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:52.682 [info] CPP RT LOG: All stats {"streamingtime":545.1201171875,"actualTtftFromStart":529.542724609375,"timeTillServerRequest":52.044921875,"requestToTtft":477.497802734375,"totalTime":597.12353515625}
2024-09-18 14:52:52.682 [info] CURSOR LOG: restFunc done 4e12fbcc-6f59-4c3b-919a-74c2a5d8f011
2024-09-18 14:52:52.799 [info] CURSOR LOG: Done streaming cpp with id a592e511-a28d-47aa-bf54-a524af8beb80
2024-09-18 14:52:52.799 [info] CPP RT LOG: Time taken for streaming cpp 369.407470703125 with request a592e511-a28d-47aa-bf54-a524af8beb80
2024-09-18 14:52:52.800 [info] CPP Request Log with id a592e511-a28d-47aa-bf54-a524af8beb80
2024-09-18 14:52:52.800 [info] =======>Model input 
2024-09-18 14:52:52.800 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:52.800 [info] =======>Debug stream time 155.93313100002706
2024-09-18 14:52:52.800 [info] =======>Debug ttft time 84.88541200011969
2024-09-18 14:52:52.800 [info] Average of latest 20 ttft time 107.26757364971563
2024-09-18 14:52:52.800 [info] Average of latest 20 stream time 214.1503080495633
2024-09-18 14:52:52.800 [info] Average of latest 20 total time NaN
2024-09-18 14:52:52.800 [info] Average of latest 20 client time 541.898779296875
2024-09-18 14:52:52.800 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:52.800 [info] CPP RT LOG: All stats {"streamingtime":369.407470703125,"actualTtftFromStart":355.431396484375,"timeTillServerRequest":55.812255859375,"requestToTtft":299.619140625,"totalTime":425.193603515625}
2024-09-18 14:52:52.800 [info] CURSOR LOG: restFunc done a592e511-a28d-47aa-bf54-a524af8beb80
2024-09-18 14:52:52.928 [info] CURSOR LOG: restFunc initiated f98e8c32-a492-4139-9cb3-8f79765d4f69
2024-09-18 14:52:53.022 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:53.022 [info] CURSOR LOG: restFunc done f98e8c32-a492-4139-9cb3-8f79765d4f69
2024-09-18 14:52:53.057 [info] CURSOR LOG: restFunc initiated a8c8035f-1d2d-4762-9cc0-523a35a111e5
2024-09-18 14:52:53.407 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:52:53.407 [info] CURSOR LOG: restFunc done a8c8035f-1d2d-4762-9cc0-523a35a111e5
2024-09-18 14:52:53.459 [info] CURSOR LOG: restFunc initiated 07770319-c5b2-4329-8d0e-5d8e091f50c0
2024-09-18 14:52:53.704 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:53.736 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:52:53.785 [info] CURSOR LOG: Done streaming cpp with id 07770319-c5b2-4329-8d0e-5d8e091f50c0
2024-09-18 14:52:53.785 [info] CPP RT LOG: Time taken for streaming cpp 325.901123046875 with request 07770319-c5b2-4329-8d0e-5d8e091f50c0
2024-09-18 14:52:53.785 [info] CPP Request Log with id 07770319-c5b2-4329-8d0e-5d8e091f50c0
2024-09-18 14:52:53.785 [info] =======>Model input 
2024-09-18 14:52:53.785 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:53.785 [info] =======>Debug stream time 137.52791300043464
2024-09-18 14:52:53.785 [info] =======>Debug ttft time 74.61831500008702
2024-09-18 14:52:53.786 [info] Average of latest 20 ttft time 105.40058489972725
2024-09-18 14:52:53.786 [info] Average of latest 20 stream time 210.4138094495982
2024-09-18 14:52:53.786 [info] Average of latest 20 total time NaN
2024-09-18 14:52:53.786 [info] Average of latest 20 client time 531.5482055664063
2024-09-18 14:52:53.786 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:53.786 [info] CPP RT LOG: All stats {"streamingtime":325.901123046875,"actualTtftFromStart":311.949951171875,"timeTillServerRequest":51.64697265625,"requestToTtft":260.302978515625,"totalTime":377.496337890625}
2024-09-18 14:52:53.786 [info] CURSOR LOG: restFunc done 07770319-c5b2-4329-8d0e-5d8e091f50c0
2024-09-18 14:52:53.922 [info] CURSOR LOG: restFunc initiated 123fc05f-0377-4398-a2c7-2a451dedc29d
2024-09-18 14:52:54.014 [info] CURSOR LOG: restFunc initiated d2769b5c-23a5-4f03-8c07-43284231e714
2024-09-18 14:52:54.204 [info] CURSOR LOG: restFunc initiated cfcde063-269d-4180-a9d3-0866b0e7001a
2024-09-18 14:52:54.338 [info] CURSOR LOG: Done streaming cpp with id 123fc05f-0377-4398-a2c7-2a451dedc29d
2024-09-18 14:52:54.338 [info] CPP RT LOG: Time taken for streaming cpp 417.383056640625 with request 123fc05f-0377-4398-a2c7-2a451dedc29d
2024-09-18 14:52:54.344 [info] CPP Request Log with id 123fc05f-0377-4398-a2c7-2a451dedc29d
2024-09-18 14:52:54.344 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.

Here are some snippets of code I've recently looked at, roughly from oldest to newest. It's possible these aren't entirely relevant to my code change.
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>


Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
29-|    public void completedcourses(){
29+|    public void completedcourses(String name){
30+|        completedCourses.put(name, new ArrayList<>());
then
31+|        completedCourses.get(name).add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
32+|        completedCourses.get(name).add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
33+|        completedCourses.get(name).add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
34+|        completedCourses.get(name).add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
35+|        completedCourses.get(name).add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
then
36-|        
36+|
37 |    }
38 |
39 |    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
40 |        System.out.println("#=---- View Available Courses ----=#");
41 |        System.out.print("Enter the semester to view courses for: ");
42 |        int semester = scanner.nextInt();
43 |        scanner.nextLine(); // Consume newline
44 |        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
45 |        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
46 |        CourseTable.printCourseTable(availableCourses);
47 |    }
48 |
49 |    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
50 |        System.out.println("#=---- Register for Course ----=#");
51 |        viewAvailableCourses(scanner, courseCatalog);
52 |        System.out.print("Enter the course code to register: ");
53 |        String courseCode = scanner.nextLine();
54 |        Course course = courseCatalog.getCourse(courseCode);
55 |        
56 |        if (course == null) {
57 |            System.out.println("Invalid course code.");
58 |            return;
59 |        }
60 |
61-|        if (course.getSemester() != currentSemester) {
61+|        if (course.getSemester() != currentSemester) {
62+|            System.out.println("This course is not available for your current semester.");
then
15-|    private Map<String, List<Course>> completedCourses;
15+|    private List<Course> completedCourses;
then
25-|        this.completedCourses= new HashMap<>();
25+|        this.completedCourses= new ArrayList<>();
</diff_history>



<area_around_code_to_rewrite>
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;

<code_to_rewrite>
    private double cgpa;
    private List<Li

    public Student(String name, String email, String id, String branch) {
</code_to_rewrite>
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }

    public void completedcourses(String name){
        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
    }

</area_around_code_to_rewrite>


<diff_history>
Student.java
30-|        completedCourses
30+|        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
31+|        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
32+|        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
33+|        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
34+|        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:52:54.344 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:54.344 [info] =======>Debug stream time 213.2384789995849
2024-09-18 14:52:54.344 [info] =======>Debug ttft time 92.61097799986601
2024-09-18 14:52:54.344 [info] Average of latest 20 ttft time 105.45740204975009
2024-09-18 14:52:54.345 [info] Average of latest 20 stream time 210.60597439957783
2024-09-18 14:52:54.345 [info] Average of latest 20 total time NaN
2024-09-18 14:52:54.345 [info] Average of latest 20 client time 532.3913208007813
2024-09-18 14:52:54.345 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:54.345 [info] CPP RT LOG: All stats {"streamingtime":417.383056640625,"actualTtftFromStart":377.341796875,"timeTillServerRequest":51.351806640625,"requestToTtft":325.989990234375,"totalTime":468.70849609375}
2024-09-18 14:52:54.345 [info] CURSOR LOG: restFunc done 123fc05f-0377-4398-a2c7-2a451dedc29d
2024-09-18 14:52:54.416 [info] CURSOR LOG: Done streaming cpp with id d2769b5c-23a5-4f03-8c07-43284231e714
2024-09-18 14:52:54.416 [info] CPP RT LOG: Time taken for streaming cpp 403.5947265625 with request d2769b5c-23a5-4f03-8c07-43284231e714
2024-09-18 14:52:54.416 [info] CPP Request Log with id d2769b5c-23a5-4f03-8c07-43284231e714
2024-09-18 14:52:54.416 [info] =======>Model input 
2024-09-18 14:52:54.416 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:54.416 [info] =======>Debug stream time 172.12918299995363
2024-09-18 14:52:54.417 [info] =======>Debug ttft time 94.56780499964952
2024-09-18 14:52:54.417 [info] Average of latest 20 ttft time 98.1745094996877
2024-09-18 14:52:54.417 [info] Average of latest 20 stream time 207.07458279952408
2024-09-18 14:52:54.417 [info] Average of latest 20 total time NaN
2024-09-18 14:52:54.417 [info] Average of latest 20 client time 524.5212280273438
2024-09-18 14:52:54.417 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:54.417 [info] CPP RT LOG: All stats {"streamingtime":403.5947265625,"actualTtftFromStart":380.2958984375,"timeTillServerRequest":56.151611328125,"requestToTtft":324.144287109375,"totalTime":459.697509765625}
2024-09-18 14:52:54.417 [info] CURSOR LOG: restFunc done d2769b5c-23a5-4f03-8c07-43284231e714
2024-09-18 14:52:54.571 [info] CURSOR LOG: Done streaming cpp with id cfcde063-269d-4180-a9d3-0866b0e7001a
2024-09-18 14:52:54.572 [info] CPP RT LOG: Time taken for streaming cpp 367.5283203125 with request cfcde063-269d-4180-a9d3-0866b0e7001a
2024-09-18 14:52:54.572 [info] CPP Request Log with id cfcde063-269d-4180-a9d3-0866b0e7001a
2024-09-18 14:52:54.572 [info] =======>Model input 
2024-09-18 14:52:54.572 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:54.572 [info] =======>Debug stream time 185.97570600174367
2024-09-18 14:52:54.572 [info] =======>Debug ttft time 95.49394100159407
2024-09-18 14:52:54.573 [info] Average of latest 20 ttft time 98.93525939984247
2024-09-18 14:52:54.573 [info] Average of latest 20 stream time 212.0813578496687
2024-09-18 14:52:54.573 [info] Average of latest 20 total time NaN
2024-09-18 14:52:54.573 [info] Average of latest 20 client time 520.9430786132813
2024-09-18 14:52:54.573 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:54.573 [info] CPP RT LOG: All stats {"streamingtime":367.5283203125,"actualTtftFromStart":331.34619140625,"timeTillServerRequest":52.596923828125,"requestToTtft":278.749267578125,"totalTime":420.10107421875}
2024-09-18 14:52:54.573 [info] CURSOR LOG: restFunc done cfcde063-269d-4180-a9d3-0866b0e7001a
2024-09-18 14:52:57.263 [info] CURSOR LOG: restFunc initiated 0253c180-f0c4-4ac8-bbcf-c255d92cd199
2024-09-18 14:52:57.782 [info] CURSOR LOG: Done streaming cpp with id 0253c180-f0c4-4ac8-bbcf-c255d92cd199
2024-09-18 14:52:57.782 [info] CPP RT LOG: Time taken for streaming cpp 518.990478515625 with request 0253c180-f0c4-4ac8-bbcf-c255d92cd199
2024-09-18 14:52:57.782 [info] CPP Request Log with id 0253c180-f0c4-4ac8-bbcf-c255d92cd199
2024-09-18 14:52:57.782 [info] =======>Model input 
2024-09-18 14:52:57.782 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:57.782 [info] =======>Debug stream time 194.5013459995389
2024-09-18 14:52:57.782 [info] =======>Debug ttft time 118.01012699864805
2024-09-18 14:52:57.783 [info] Average of latest 20 ttft time 100.54183024978265
2024-09-18 14:52:57.783 [info] Average of latest 20 stream time 217.13987819971516
2024-09-18 14:52:57.783 [info] Average of latest 20 total time NaN
2024-09-18 14:52:57.783 [info] Average of latest 20 client time 532.5611450195313
2024-09-18 14:52:57.783 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:57.783 [info] CPP RT LOG: All stats {"streamingtime":518.990478515625,"actualTtftFromStart":510.254150390625,"timeTillServerRequest":51.887939453125,"requestToTtft":458.3662109375,"totalTime":570.86474609375}
2024-09-18 14:52:57.783 [info] CURSOR LOG: restFunc done 0253c180-f0c4-4ac8-bbcf-c255d92cd199
2024-09-18 14:52:59.202 [info] CURSOR LOG: restFunc initiated 306deb77-718f-4d0c-9b9c-814699a1e470
2024-09-18 14:52:59.724 [info] CURSOR LOG: Done streaming cpp with id 306deb77-718f-4d0c-9b9c-814699a1e470
2024-09-18 14:52:59.724 [info] CPP RT LOG: Time taken for streaming cpp 522.19775390625 with request 306deb77-718f-4d0c-9b9c-814699a1e470
2024-09-18 14:52:59.724 [info] CPP Request Log with id 306deb77-718f-4d0c-9b9c-814699a1e470
2024-09-18 14:52:59.724 [info] =======>Model input 
2024-09-18 14:52:59.724 [info] =======>Model output 
    private double cgpa;
    private List<List<String>> completedCourses;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:52:59.724 [info] =======>Debug stream time 199.57138700038195
2024-09-18 14:52:59.724 [info] =======>Debug ttft time 97.01577800139785
2024-09-18 14:52:59.725 [info] Average of latest 20 ttft time 100.95948224989698
2024-09-18 14:52:59.725 [info] Average of latest 20 stream time 221.48485739976167
2024-09-18 14:52:59.725 [info] Average of latest 20 total time NaN
2024-09-18 14:52:59.725 [info] Average of latest 20 client time 534.438525390625
2024-09-18 14:52:59.725 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:52:59.725 [info] CPP RT LOG: All stats {"streamingtime":522.19775390625,"actualTtftFromStart":474.605224609375,"timeTillServerRequest":52.566650390625,"requestToTtft":422.03857421875,"totalTime":574.74365234375}
2024-09-18 14:52:59.725 [info] CURSOR LOG: restFunc done 306deb77-718f-4d0c-9b9c-814699a1e470
2024-09-18 14:53:00.174 [info] CURSOR LOG: restFunc initiated 05ef5ab9-8e94-4d0e-a040-0de9d56418c2
2024-09-18 14:53:00.342 [info] CURSOR LOG: restFunc initiated b28829a3-c16f-4711-aa90-8453a96630f0
2024-09-18 14:53:00.666 [info] CURSOR LOG: Done streaming cpp with id 05ef5ab9-8e94-4d0e-a040-0de9d56418c2
2024-09-18 14:53:00.666 [info] CPP RT LOG: Time taken for streaming cpp 493.279296875 with request 05ef5ab9-8e94-4d0e-a040-0de9d56418c2
2024-09-18 14:53:00.666 [info] CPP Request Log with id 05ef5ab9-8e94-4d0e-a040-0de9d56418c2
2024-09-18 14:53:00.666 [info] =======>Model input 
2024-09-18 14:53:00.666 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:00.666 [info] =======>Debug stream time 173.4630820006132
2024-09-18 14:53:00.666 [info] =======>Debug ttft time 86.96340999938548
2024-09-18 14:53:00.666 [info] Average of latest 20 ttft time 100.9723236498423
2024-09-18 14:53:00.666 [info] Average of latest 20 stream time 223.1769739997573
2024-09-18 14:53:00.666 [info] Average of latest 20 total time NaN
2024-09-18 14:53:00.666 [info] Average of latest 20 client time 542.6664428710938
2024-09-18 14:53:00.666 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:00.666 [info] CPP RT LOG: All stats {"streamingtime":493.279296875,"actualTtftFromStart":458.384521484375,"timeTillServerRequest":52.224609375,"requestToTtft":406.159912109375,"totalTime":545.4521484375}
2024-09-18 14:53:00.666 [info] CURSOR LOG: restFunc done 05ef5ab9-8e94-4d0e-a040-0de9d56418c2
2024-09-18 14:53:00.808 [info] CURSOR LOG: Done streaming cpp with id b28829a3-c16f-4711-aa90-8453a96630f0
2024-09-18 14:53:00.808 [info] CPP RT LOG: Time taken for streaming cpp 465.848388671875 with request b28829a3-c16f-4711-aa90-8453a96630f0
2024-09-18 14:53:00.809 [info] CPP Request Log with id b28829a3-c16f-4711-aa90-8453a96630f0
2024-09-18 14:53:00.809 [info] =======>Model input 
2024-09-18 14:53:00.809 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:00.809 [info] =======>Debug stream time 178.4128469992429
2024-09-18 14:53:00.809 [info] =======>Debug ttft time 107.63867199979722
2024-09-18 14:53:00.810 [info] Average of latest 20 ttft time 102.13513484979049
2024-09-18 14:53:00.810 [info] Average of latest 20 stream time 227.65576099967583
2024-09-18 14:53:00.810 [info] Average of latest 20 total time NaN
2024-09-18 14:53:00.810 [info] Average of latest 20 client time 541.719775390625
2024-09-18 14:53:00.810 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:00.810 [info] CPP RT LOG: All stats {"streamingtime":465.848388671875,"actualTtftFromStart":445.722900390625,"timeTillServerRequest":50.808349609375,"requestToTtft":394.91455078125,"totalTime":516.639892578125}
2024-09-18 14:53:00.810 [info] CURSOR LOG: restFunc done b28829a3-c16f-4711-aa90-8453a96630f0
2024-09-18 14:53:02.539 [info] CURSOR LOG: restFunc initiated 8a142f1e-6bd1-4c7d-b3a9-f49f8794bcd3
2024-09-18 14:53:03.018 [info] CURSOR LOG: Done streaming cpp with id 8a142f1e-6bd1-4c7d-b3a9-f49f8794bcd3
2024-09-18 14:53:03.018 [info] CPP RT LOG: Time taken for streaming cpp 477.50439453125 with request 8a142f1e-6bd1-4c7d-b3a9-f49f8794bcd3
2024-09-18 14:53:03.018 [info] CPP Request Log with id 8a142f1e-6bd1-4c7d-b3a9-f49f8794bcd3
2024-09-18 14:53:03.018 [info] =======>Model input 
2024-09-18 14:53:03.018 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:03.018 [info] =======>Debug stream time 157.88518800027668
2024-09-18 14:53:03.018 [info] =======>Debug ttft time 96.6812469996512
2024-09-18 14:53:03.021 [info] Average of latest 20 ttft time 93.45294989980758
2024-09-18 14:53:03.021 [info] Average of latest 20 stream time 216.10176899973303
2024-09-18 14:53:03.021 [info] Average of latest 20 total time NaN
2024-09-18 14:53:03.021 [info] Average of latest 20 client time 536.6257080078125
2024-09-18 14:53:03.021 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:03.021 [info] CPP RT LOG: All stats {"streamingtime":477.50439453125,"actualTtftFromStart":468.685546875,"timeTillServerRequest":51.85888671875,"requestToTtft":416.82666015625,"totalTime":529.3447265625}
2024-09-18 14:53:03.021 [info] CURSOR LOG: restFunc done 8a142f1e-6bd1-4c7d-b3a9-f49f8794bcd3
2024-09-18 14:53:09.513 [info] CURSOR LOG: restFunc initiated 0baa4ea7-1637-416e-ba2f-ccb210f1e3ba
2024-09-18 14:53:10.426 [info] CURSOR LOG: Done streaming cpp with id 0baa4ea7-1637-416e-ba2f-ccb210f1e3ba
2024-09-18 14:53:10.426 [info] CPP RT LOG: Time taken for streaming cpp 912.83447265625 with request 0baa4ea7-1637-416e-ba2f-ccb210f1e3ba
2024-09-18 14:53:10.426 [info] CPP Request Log with id 0baa4ea7-1637-416e-ba2f-ccb210f1e3ba
2024-09-18 14:53:10.426 [info] =======>Model input 
2024-09-18 14:53:10.426 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:10.426 [info] =======>Debug stream time 203.98022400029004
2024-09-18 14:53:10.426 [info] =======>Debug ttft time 131.80263500101864
2024-09-18 14:53:10.427 [info] Average of latest 20 ttft time 96.56871049990878
2024-09-18 14:53:10.427 [info] Average of latest 20 stream time 218.12927444977686
2024-09-18 14:53:10.427 [info] Average of latest 20 total time NaN
2024-09-18 14:53:10.427 [info] Average of latest 20 client time 563.2584716796875
2024-09-18 14:53:10.427 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:10.427 [info] CPP RT LOG: All stats {"streamingtime":912.83447265625,"actualTtftFromStart":890.74169921875,"timeTillServerRequest":52.775390625,"requestToTtft":837.96630859375,"totalTime":965.583984375}
2024-09-18 14:53:10.427 [info] CURSOR LOG: restFunc done 0baa4ea7-1637-416e-ba2f-ccb210f1e3ba
2024-09-18 14:53:10.544 [info] CURSOR LOG: restFunc initiated 18a7be55-0454-4ff8-8e98-c2f6f609e141
2024-09-18 14:53:11.008 [info] CURSOR LOG: Done streaming cpp with id 18a7be55-0454-4ff8-8e98-c2f6f609e141
2024-09-18 14:53:11.008 [info] CPP RT LOG: Time taken for streaming cpp 465.009765625 with request 18a7be55-0454-4ff8-8e98-c2f6f609e141
2024-09-18 14:53:11.009 [info] CPP Request Log with id 18a7be55-0454-4ff8-8e98-c2f6f609e141
2024-09-18 14:53:11.009 [info] =======>Model input 
2024-09-18 14:53:11.009 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:11.009 [info] =======>Debug stream time 142.8555050007999
2024-09-18 14:53:11.009 [info] =======>Debug ttft time 87.26143000088632
2024-09-18 14:53:11.009 [info] Average of latest 20 ttft time 97.81776944994927
2024-09-18 14:53:11.009 [info] Average of latest 20 stream time 217.7806957998313
2024-09-18 14:53:11.009 [info] Average of latest 20 total time NaN
2024-09-18 14:53:11.009 [info] Average of latest 20 client time 569.893017578125
2024-09-18 14:53:11.009 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:11.009 [info] CPP RT LOG: All stats {"streamingtime":465.009765625,"actualTtftFromStart":464.935302734375,"timeTillServerRequest":54.4296875,"requestToTtft":410.505615234375,"totalTime":519.425048828125}
2024-09-18 14:53:11.009 [info] CURSOR LOG: restFunc done 18a7be55-0454-4ff8-8e98-c2f6f609e141
2024-09-18 14:53:11.327 [info] CURSOR LOG: restFunc initiated 2199e4c2-1539-4714-a0ce-938285f7108d
2024-09-18 14:53:11.810 [info] CURSOR LOG: Done streaming cpp with id 2199e4c2-1539-4714-a0ce-938285f7108d
2024-09-18 14:53:11.810 [info] CPP RT LOG: Time taken for streaming cpp 483.27001953125 with request 2199e4c2-1539-4714-a0ce-938285f7108d
2024-09-18 14:53:11.810 [info] CPP Request Log with id 2199e4c2-1539-4714-a0ce-938285f7108d
2024-09-18 14:53:11.811 [info] =======>Model input 
2024-09-18 14:53:11.811 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:11.811 [info] =======>Debug stream time 158.87879900075495
2024-09-18 14:53:11.811 [info] =======>Debug ttft time 93.28524000011384
2024-09-18 14:53:11.811 [info] Average of latest 20 ttft time 98.3866983000189
2024-09-18 14:53:11.811 [info] Average of latest 20 stream time 219.6030184498988
2024-09-18 14:53:11.811 [info] Average of latest 20 total time NaN
2024-09-18 14:53:11.811 [info] Average of latest 20 client time 571.8270874023438
2024-09-18 14:53:11.811 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:11.811 [info] CPP RT LOG: All stats {"streamingtime":483.27001953125,"actualTtftFromStart":471.359375,"timeTillServerRequest":52.1748046875,"requestToTtft":419.1845703125,"totalTime":535.3955078125}
2024-09-18 14:53:11.811 [info] CURSOR LOG: restFunc done 2199e4c2-1539-4714-a0ce-938285f7108d
2024-09-18 14:53:14.371 [info] CURSOR LOG: restFunc initiated 38ae2478-8edc-4f25-9441-87ac1d6a5861
2024-09-18 14:53:14.531 [info] CURSOR LOG: restFunc initiated aea26949-3d03-4fe0-aebd-ff36a11ca8a4
2024-09-18 14:53:14.838 [info] CURSOR LOG: Done streaming cpp with id 38ae2478-8edc-4f25-9441-87ac1d6a5861
2024-09-18 14:53:14.838 [info] CPP RT LOG: Time taken for streaming cpp 466.106689453125 with request 38ae2478-8edc-4f25-9441-87ac1d6a5861
2024-09-18 14:53:14.838 [info] CPP Request Log with id 38ae2478-8edc-4f25-9441-87ac1d6a5861
2024-09-18 14:53:14.838 [info] =======>Model input 
2024-09-18 14:53:14.838 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:14.838 [info] =======>Debug stream time 142.0122740007937
2024-09-18 14:53:14.838 [info] =======>Debug ttft time 86.43401299975812
2024-09-18 14:53:14.838 [info] Average of latest 20 ttft time 98.05842005005107
2024-09-18 14:53:14.838 [info] Average of latest 20 stream time 219.59902705000712
2024-09-18 14:53:14.838 [info] Average of latest 20 total time NaN
2024-09-18 14:53:14.838 [info] Average of latest 20 client time 570.7223388671875
2024-09-18 14:53:14.838 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:14.838 [info] CPP RT LOG: All stats {"streamingtime":466.106689453125,"actualTtftFromStart":463.0888671875,"timeTillServerRequest":52.396240234375,"requestToTtft":410.692626953125,"totalTime":518.483154296875}
2024-09-18 14:53:14.838 [info] CURSOR LOG: restFunc done 38ae2478-8edc-4f25-9441-87ac1d6a5861
2024-09-18 14:53:14.985 [info] CURSOR LOG: Done streaming cpp with id aea26949-3d03-4fe0-aebd-ff36a11ca8a4
2024-09-18 14:53:14.985 [info] CPP RT LOG: Time taken for streaming cpp 455.950927734375 with request aea26949-3d03-4fe0-aebd-ff36a11ca8a4
2024-09-18 14:53:14.985 [info] CPP Request Log with id aea26949-3d03-4fe0-aebd-ff36a11ca8a4
2024-09-18 14:53:14.985 [info] =======>Model input 
2024-09-18 14:53:14.985 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:14.985 [info] =======>Debug stream time 156.94973300024867
2024-09-18 14:53:14.985 [info] =======>Debug ttft time 101.8629280012101
2024-09-18 14:53:14.986 [info] Average of latest 20 ttft time 96.9264383001253
2024-09-18 14:53:14.986 [info] Average of latest 20 stream time 166.5127359000966
2024-09-18 14:53:14.986 [info] Average of latest 20 total time NaN
2024-09-18 14:53:14.986 [info] Average of latest 20 client time 516.6077880859375
2024-09-18 14:53:14.986 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:14.986 [info] CPP RT LOG: All stats {"streamingtime":455.950927734375,"actualTtftFromStart":457.88720703125,"timeTillServerRequest":56.386474609375,"requestToTtft":401.500732421875,"totalTime":512.245361328125}
2024-09-18 14:53:14.986 [info] CURSOR LOG: restFunc done aea26949-3d03-4fe0-aebd-ff36a11ca8a4
2024-09-18 14:53:15.005 [info] CURSOR LOG: restFunc initiated 9dabe5a5-da51-4581-bcd1-4a134734b0a3
2024-09-18 14:53:15.224 [info] CURSOR LOG: restFunc initiated 83cbb39b-410e-462e-81c9-9bf9bf69e906
2024-09-18 14:53:15.332 [info] CURSOR LOG: Done streaming cpp with id 9dabe5a5-da51-4581-bcd1-4a134734b0a3
2024-09-18 14:53:15.332 [info] CPP RT LOG: Time taken for streaming cpp 327.581787109375 with request 9dabe5a5-da51-4581-bcd1-4a134734b0a3
2024-09-18 14:53:15.332 [info] CPP Request Log with id 9dabe5a5-da51-4581-bcd1-4a134734b0a3
2024-09-18 14:53:15.332 [info] =======>Model input 
2024-09-18 14:53:15.332 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:15.332 [info] =======>Debug stream time 140.22263199836016
2024-09-18 14:53:15.332 [info] =======>Debug ttft time 83.74999799951911
2024-09-18 14:53:15.337 [info] Average of latest 20 ttft time 95.5288788001053
2024-09-18 14:53:15.337 [info] Average of latest 20 stream time 167.76569755002856
2024-09-18 14:53:15.337 [info] Average of latest 20 total time NaN
2024-09-18 14:53:15.337 [info] Average of latest 20 client time 511.265771484375
2024-09-18 14:53:15.337 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:15.337 [info] CPP RT LOG: All stats {"streamingtime":327.581787109375,"actualTtftFromStart":317.663818359375,"timeTillServerRequest":51.806396484375,"requestToTtft":265.857421875,"totalTime":379.3486328125}
2024-09-18 14:53:15.337 [info] CURSOR LOG: restFunc done 9dabe5a5-da51-4581-bcd1-4a134734b0a3
2024-09-18 14:53:15.558 [info] CURSOR LOG: Done streaming cpp with id 83cbb39b-410e-462e-81c9-9bf9bf69e906
2024-09-18 14:53:15.558 [info] CPP RT LOG: Time taken for streaming cpp 334.798828125 with request 83cbb39b-410e-462e-81c9-9bf9bf69e906
2024-09-18 14:53:15.558 [info] CPP Request Log with id 83cbb39b-410e-462e-81c9-9bf9bf69e906
2024-09-18 14:53:15.558 [info] =======>Model input 
2024-09-18 14:53:15.558 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:15.558 [info] =======>Debug stream time 147.8929169997573
2024-09-18 14:53:15.558 [info] =======>Debug ttft time 89.67577699944377
2024-09-18 14:53:15.559 [info] Average of latest 20 ttft time 95.19708965001628
2024-09-18 14:53:15.559 [info] Average of latest 20 stream time 167.76292134998366
2024-09-18 14:53:15.559 [info] Average of latest 20 total time NaN
2024-09-18 14:53:15.559 [info] Average of latest 20 client time 482.3793701171875
2024-09-18 14:53:15.559 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:15.559 [info] CPP RT LOG: All stats {"streamingtime":334.798828125,"actualTtftFromStart":363.8994140625,"timeTillServerRequest":52.797607421875,"requestToTtft":311.101806640625,"totalTime":387.55908203125}
2024-09-18 14:53:15.559 [info] CURSOR LOG: restFunc done 83cbb39b-410e-462e-81c9-9bf9bf69e906
2024-09-18 14:53:16.978 [info] CURSOR LOG: restFunc initiated b8c787f5-5fe8-4bc4-a266-f6042d9389c6
2024-09-18 14:53:17.243 [info] CURSOR LOG: restFunc initiated e8ffd22b-bf59-4bfe-8a9d-d7e242e12ff0
2024-09-18 14:53:17.460 [info] CURSOR LOG: Done streaming cpp with id b8c787f5-5fe8-4bc4-a266-f6042d9389c6
2024-09-18 14:53:17.460 [info] CPP RT LOG: Time taken for streaming cpp 481.695556640625 with request b8c787f5-5fe8-4bc4-a266-f6042d9389c6
2024-09-18 14:53:17.461 [info] CPP Request Log with id b8c787f5-5fe8-4bc4-a266-f6042d9389c6
2024-09-18 14:53:17.461 [info] =======>Model input 
2024-09-18 14:53:17.461 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:17.461 [info] =======>Debug stream time 150.25957199931145
2024-09-18 14:53:17.461 [info] =======>Debug ttft time 90.7818889990449
2024-09-18 14:53:17.461 [info] Average of latest 20 ttft time 95.37742879996077
2024-09-18 14:53:17.461 [info] Average of latest 20 stream time 167.21492504999043
2024-09-18 14:53:17.461 [info] Average of latest 20 total time NaN
2024-09-18 14:53:17.461 [info] Average of latest 20 client time 465.6680908203125
2024-09-18 14:53:17.461 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:17.461 [info] CPP RT LOG: All stats {"streamingtime":481.695556640625,"actualTtftFromStart":477.581787109375,"timeTillServerRequest":51.572509765625,"requestToTtft":426.00927734375,"totalTime":533.250244140625}
2024-09-18 14:53:17.461 [info] CURSOR LOG: restFunc done b8c787f5-5fe8-4bc4-a266-f6042d9389c6
2024-09-18 14:53:17.596 [info] CURSOR LOG: Done streaming cpp with id e8ffd22b-bf59-4bfe-8a9d-d7e242e12ff0
2024-09-18 14:53:17.596 [info] CPP RT LOG: Time taken for streaming cpp 353.931640625 with request e8ffd22b-bf59-4bfe-8a9d-d7e242e12ff0
2024-09-18 14:53:17.596 [info] CPP Request Log with id e8ffd22b-bf59-4bfe-8a9d-d7e242e12ff0
2024-09-18 14:53:17.596 [info] =======>Model input 
2024-09-18 14:53:17.596 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:17.596 [info] =======>Debug stream time 154.02683099918067
2024-09-18 14:53:17.596 [info] =======>Debug ttft time 83.84698699973524
2024-09-18 14:53:17.597 [info] Average of latest 20 ttft time 95.1921325000003
2024-09-18 14:53:17.597 [info] Average of latest 20 stream time 167.01543915001676
2024-09-18 14:53:17.597 [info] Average of latest 20 total time NaN
2024-09-18 14:53:17.597 [info] Average of latest 20 client time 459.39674072265626
2024-09-18 14:53:17.597 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:17.597 [info] CPP RT LOG: All stats {"streamingtime":353.931640625,"actualTtftFromStart":334.867431640625,"timeTillServerRequest":51.279296875,"requestToTtft":283.588134765625,"totalTime":405.178466796875}
2024-09-18 14:53:17.597 [info] CURSOR LOG: restFunc done e8ffd22b-bf59-4bfe-8a9d-d7e242e12ff0
2024-09-18 14:53:17.641 [info] CURSOR LOG: restFunc initiated 4625a6d0-2db7-4262-a71f-737773e77c85
2024-09-18 14:53:17.819 [info] CURSOR LOG: restFunc initiated 38dc0ae7-e0b7-4fce-88d1-4bd7f043f794
2024-09-18 14:53:17.915 [info] CURSOR LOG: restFunc initiated d8820c39-52a5-4135-b0f8-1b2d6972d635
2024-09-18 14:53:18.031 [info] CURSOR LOG: Done streaming cpp with id 4625a6d0-2db7-4262-a71f-737773e77c85
2024-09-18 14:53:18.031 [info] CPP RT LOG: Time taken for streaming cpp 390.0107421875 with request 4625a6d0-2db7-4262-a71f-737773e77c85
2024-09-18 14:53:18.038 [info] CPP Request Log with id 4625a6d0-2db7-4262-a71f-737773e77c85
2024-09-18 14:53:18.038 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.

Here are some snippets of code I've recently looked at, roughly from oldest to newest. It's possible these aren't entirely relevant to my code change.
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>


Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
29-|    public void completedcourses(){
29+|    public void completedcourses(String name){
30+|        completedCourses.put(name, new ArrayList<>());
then
31+|        completedCourses.get(name).add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
32+|        completedCourses.get(name).add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
33+|        completedCourses.get(name).add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
34+|        completedCourses.get(name).add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
35+|        completedCourses.get(name).add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
then
36-|        
36+|
37 |    }
38 |
39 |    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
40 |        System.out.println("#=---- View Available Courses ----=#");
41 |        System.out.print("Enter the semester to view courses for: ");
42 |        int semester = scanner.nextInt();
43 |        scanner.nextLine(); // Consume newline
44 |        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
45 |        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
46 |        CourseTable.printCourseTable(availableCourses);
47 |    }
48 |
49 |    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
50 |        System.out.println("#=---- Register for Course ----=#");
51 |        viewAvailableCourses(scanner, courseCatalog);
52 |        System.out.print("Enter the course code to register: ");
53 |        String courseCode = scanner.nextLine();
54 |        Course course = courseCatalog.getCourse(courseCode);
55 |        
56 |        if (course == null) {
57 |            System.out.println("Invalid course code.");
58 |            return;
59 |        }
60 |
61-|        if (course.getSemester() != currentSemester) {
61+|        if (course.getSemester() != currentSemester) {
62+|            System.out.println("This course is not available for your current semester.");
then
15-|    private Map<String, List<Course>> completedCourses;
15+|    private List<Course> completedCourses;
then
25-|        this.completedCourses= new HashMap<>();
25+|        this.completedCourses= new ArrayList<>();
</diff_history>



<area_around_code_to_rewrite>
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;

<code_to_rewrite>
    private double cgpa;
    private List<List<String>> complet

    public Student(String name, String email, String id, String branch) {
</code_to_rewrite>
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }

    public void completedcourses(String name){
        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
    }

</area_around_code_to_rewrite>


<diff_history>
Student.java
30-|        completedCourses
30+|        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
31+|        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
32+|        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
33+|        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
34+|        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:53:18.038 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:18.038 [info] =======>Debug stream time 209.1202170010656
2024-09-18 14:53:18.038 [info] =======>Debug ttft time 111.61002000048757
2024-09-18 14:53:18.039 [info] Average of latest 20 ttft time 95.43983010007068
2024-09-18 14:53:18.039 [info] Average of latest 20 stream time 168.741848300118
2024-09-18 14:53:18.039 [info] Average of latest 20 total time NaN
2024-09-18 14:53:18.039 [info] Average of latest 20 client time 451.6412719726562
2024-09-18 14:53:18.039 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:18.039 [info] CPP RT LOG: All stats {"streamingtime":390.0107421875,"actualTtftFromStart":344.33203125,"timeTillServerRequest":51.4794921875,"requestToTtft":292.8525390625,"totalTime":441.453857421875}
2024-09-18 14:53:18.039 [info] CURSOR LOG: restFunc done 4625a6d0-2db7-4262-a71f-737773e77c85
2024-09-18 14:53:18.160 [info] CURSOR LOG: Done streaming cpp with id 38dc0ae7-e0b7-4fce-88d1-4bd7f043f794
2024-09-18 14:53:18.160 [info] CPP RT LOG: Time taken for streaming cpp 342.935546875 with request 38dc0ae7-e0b7-4fce-88d1-4bd7f043f794
2024-09-18 14:53:18.160 [info] CPP Request Log with id 38dc0ae7-e0b7-4fce-88d1-4bd7f043f794
2024-09-18 14:53:18.160 [info] =======>Model input 
2024-09-18 14:53:18.160 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:18.160 [info] =======>Debug stream time 160.5820789989084
2024-09-18 14:53:18.160 [info] =======>Debug ttft time 91.0776649992913
2024-09-18 14:53:18.164 [info] Average of latest 20 ttft time 95.74944275002926
2024-09-18 14:53:18.164 [info] Average of latest 20 stream time 168.97429570006207
2024-09-18 14:53:18.164 [info] Average of latest 20 total time NaN
2024-09-18 14:53:18.164 [info] Average of latest 20 client time 450.31767578125
2024-09-18 14:53:18.164 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:18.164 [info] CPP RT LOG: All stats {"streamingtime":342.935546875,"actualTtftFromStart":332.46533203125,"timeTillServerRequest":56.75732421875,"requestToTtft":275.7080078125,"totalTime":399.641845703125}
2024-09-18 14:53:18.164 [info] CURSOR LOG: restFunc done 38dc0ae7-e0b7-4fce-88d1-4bd7f043f794
2024-09-18 14:53:18.286 [info] CURSOR LOG: Done streaming cpp with id d8820c39-52a5-4135-b0f8-1b2d6972d635
2024-09-18 14:53:18.286 [info] CPP RT LOG: Time taken for streaming cpp 371.909912109375 with request d8820c39-52a5-4135-b0f8-1b2d6972d635
2024-09-18 14:53:18.286 [info] CPP Request Log with id d8820c39-52a5-4135-b0f8-1b2d6972d635
2024-09-18 14:53:18.286 [info] =======>Model input 
2024-09-18 14:53:18.286 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:18.286 [info] =======>Debug stream time 151.4906059987843
2024-09-18 14:53:18.286 [info] =======>Debug ttft time 86.28952099941671
2024-09-18 14:53:18.287 [info] Average of latest 20 ttft time 96.33300304999575
2024-09-18 14:53:18.287 [info] Average of latest 20 stream time 169.67243034997955
2024-09-18 14:53:18.287 [info] Average of latest 20 total time NaN
2024-09-18 14:53:18.287 [info] Average of latest 20 client time 452.618115234375
2024-09-18 14:53:18.287 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:18.287 [info] CPP RT LOG: All stats {"streamingtime":371.909912109375,"actualTtftFromStart":363.9228515625,"timeTillServerRequest":55.413818359375,"requestToTtft":308.509033203125,"totalTime":427.28466796875}
2024-09-18 14:53:18.287 [info] CURSOR LOG: restFunc done d8820c39-52a5-4135-b0f8-1b2d6972d635
2024-09-18 14:53:20.099 [info] CURSOR LOG: restFunc initiated 90d98fa2-0d2f-48bd-9b80-b5b38fffa8dd
2024-09-18 14:53:20.583 [info] CURSOR LOG: Done streaming cpp with id 90d98fa2-0d2f-48bd-9b80-b5b38fffa8dd
2024-09-18 14:53:20.583 [info] CPP RT LOG: Time taken for streaming cpp 483.3525390625 with request 90d98fa2-0d2f-48bd-9b80-b5b38fffa8dd
2024-09-18 14:53:20.583 [info] CPP Request Log with id 90d98fa2-0d2f-48bd-9b80-b5b38fffa8dd
2024-09-18 14:53:20.583 [info] =======>Model input 
2024-09-18 14:53:20.583 [info] =======>Model output 
    private double cgpa;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:20.583 [info] =======>Debug stream time 156.32301899977028
2024-09-18 14:53:20.583 [info] =======>Debug ttft time 85.36624099873006
2024-09-18 14:53:20.584 [info] Average of latest 20 ttft time 95.97076619993895
2024-09-18 14:53:20.584 [info] Average of latest 20 stream time 166.8266573499888
2024-09-18 14:53:20.584 [info] Average of latest 20 total time NaN
2024-09-18 14:53:20.584 [info] Average of latest 20 client time 455.9165893554688
2024-09-18 14:53:20.584 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:20.584 [info] CPP RT LOG: All stats {"streamingtime":483.3525390625,"actualTtftFromStart":504.9013671875,"timeTillServerRequest":52.716552734375,"requestToTtft":452.184814453125,"totalTime":536.03466796875}
2024-09-18 14:53:20.584 [info] CURSOR LOG: restFunc done 90d98fa2-0d2f-48bd-9b80-b5b38fffa8dd
2024-09-18 14:53:23.312 [info] CURSOR LOG: restFunc initiated ae52adc6-950d-4905-bdf8-e9a81e2c1175
2024-09-18 14:53:23.844 [info] CURSOR LOG: Done streaming cpp with id ae52adc6-950d-4905-bdf8-e9a81e2c1175
2024-09-18 14:53:23.844 [info] CPP RT LOG: Time taken for streaming cpp 531.537353515625 with request ae52adc6-950d-4905-bdf8-e9a81e2c1175
2024-09-18 14:53:23.844 [info] CPP Request Log with id ae52adc6-950d-4905-bdf8-e9a81e2c1175
2024-09-18 14:53:23.844 [info] =======>Model input 
2024-09-18 14:53:23.844 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }
2024-09-18 14:53:23.844 [info] =======>Debug stream time 140.11442199908197
2024-09-18 14:53:23.844 [info] =======>Debug ttft time 127.02494600042701
2024-09-18 14:53:23.844 [info] Average of latest 20 ttft time 97.59362324997782
2024-09-18 14:53:23.844 [info] Average of latest 20 stream time 165.22591929994525
2024-09-18 14:53:23.844 [info] Average of latest 20 total time NaN
2024-09-18 14:53:23.844 [info] Average of latest 20 client time 462.313720703125
2024-09-18 14:53:23.844 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:23.844 [info] CPP RT LOG: All stats {"streamingtime":531.537353515625,"actualTtftFromStart":533.586669921875,"timeTillServerRequest":2.243408203125,"requestToTtft":531.34326171875,"totalTime":533.741943359375}
2024-09-18 14:53:23.844 [info] CURSOR LOG: restFunc done ae52adc6-950d-4905-bdf8-e9a81e2c1175
2024-09-18 14:53:24.968 [info] CURSOR LOG: restFunc initiated 5c1ba67d-ecb9-46dc-b249-6bd923d0e6a1
2024-09-18 14:53:25.559 [info] CURSOR LOG: Done streaming cpp with id 5c1ba67d-ecb9-46dc-b249-6bd923d0e6a1
2024-09-18 14:53:25.559 [info] CPP RT LOG: Time taken for streaming cpp 591.5078125 with request 5c1ba67d-ecb9-46dc-b249-6bd923d0e6a1
2024-09-18 14:53:25.560 [info] CPP Request Log with id 5c1ba67d-ecb9-46dc-b249-6bd923d0e6a1
2024-09-18 14:53:25.560 [info] =======>Model input 
2024-09-18 14:53:25.560 [info] =======>Model output 
    private double cgpa;
    
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:25.560 [info] =======>Debug stream time 143.92631800100207
2024-09-18 14:53:25.560 [info] =======>Debug ttft time 139.44168099947274
2024-09-18 14:53:25.560 [info] Average of latest 20 ttft time 99.79101024987176
2024-09-18 14:53:25.560 [info] Average of latest 20 stream time 163.12344989990817
2024-09-18 14:53:25.560 [info] Average of latest 20 total time NaN
2024-09-18 14:53:25.560 [info] Average of latest 20 client time 473.5126953125
2024-09-18 14:53:25.560 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:25.560 [info] CPP RT LOG: All stats {"streamingtime":591.5078125,"actualTtftFromStart":625.14599609375,"timeTillServerRequest":53.197998046875,"requestToTtft":571.947998046875,"totalTime":644.669189453125}
2024-09-18 14:53:25.560 [info] CURSOR LOG: restFunc done 5c1ba67d-ecb9-46dc-b249-6bd923d0e6a1
2024-09-18 14:53:26.051 [info] CURSOR LOG: restFunc initiated 29de98f8-2f52-4031-87da-5d4ca1373fab
2024-09-18 14:53:26.466 [info] CURSOR LOG: Done streaming cpp with id 29de98f8-2f52-4031-87da-5d4ca1373fab
2024-09-18 14:53:26.467 [info] CPP RT LOG: Time taken for streaming cpp 416.327392578125 with request 29de98f8-2f52-4031-87da-5d4ca1373fab
2024-09-18 14:53:26.467 [info] CPP Request Log with id 29de98f8-2f52-4031-87da-5d4ca1373fab
2024-09-18 14:53:26.467 [info] =======>Model input 
2024-09-18 14:53:26.467 [info] =======>Model output 
    private double cgpa;
        
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:26.467 [info] =======>Debug stream time 93.29100600071251
2024-09-18 14:53:26.467 [info] =======>Debug ttft time 86.75414200127125
2024-09-18 14:53:26.467 [info] Average of latest 20 ttft time 98.22821100000291
2024-09-18 14:53:26.467 [info] Average of latest 20 stream time 158.06293289996682
2024-09-18 14:53:26.467 [info] Average of latest 20 total time NaN
2024-09-18 14:53:26.467 [info] Average of latest 20 client time 468.379541015625
2024-09-18 14:53:26.467 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:26.467 [info] CPP RT LOG: All stats {"streamingtime":416.327392578125,"actualTtftFromStart":463.586669921875,"timeTillServerRequest":52.8544921875,"requestToTtft":410.732177734375,"totalTime":469.150634765625}
2024-09-18 14:53:26.467 [info] CURSOR LOG: restFunc done 29de98f8-2f52-4031-87da-5d4ca1373fab
2024-09-18 14:53:27.067 [info] CURSOR LOG: restFunc initiated e261fac7-dff4-4915-86f6-887d5e84f69e
2024-09-18 14:53:27.517 [info] CURSOR LOG: Done streaming cpp with id e261fac7-dff4-4915-86f6-887d5e84f69e
2024-09-18 14:53:27.517 [info] CPP RT LOG: Time taken for streaming cpp 449.99365234375 with request e261fac7-dff4-4915-86f6-887d5e84f69e
2024-09-18 14:53:27.518 [info] CPP Request Log with id e261fac7-dff4-4915-86f6-887d5e84f69e
2024-09-18 14:53:27.518 [info] =======>Model input 
2024-09-18 14:53:27.518 [info] =======>Model output 
    private double cgpa;
    
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:27.518 [info] =======>Debug stream time 111.93564300052822
2024-09-18 14:53:27.518 [info] =======>Debug ttft time 98.11914100125432
2024-09-18 14:53:27.518 [info] Average of latest 20 ttft time 98.28337914999574
2024-09-18 14:53:27.518 [info] Average of latest 20 stream time 153.68114569997414
2024-09-18 14:53:27.518 [info] Average of latest 20 total time NaN
2024-09-18 14:53:27.518 [info] Average of latest 20 client time 464.7693359375
2024-09-18 14:53:27.518 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:27.518 [info] CPP RT LOG: All stats {"streamingtime":449.99365234375,"actualTtftFromStart":501.734130859375,"timeTillServerRequest":52.063720703125,"requestToTtft":449.67041015625,"totalTime":502.0263671875}
2024-09-18 14:53:27.518 [info] CURSOR LOG: restFunc done e261fac7-dff4-4915-86f6-887d5e84f69e
2024-09-18 14:53:27.618 [info] CURSOR LOG: restFunc initiated 943bba1b-2395-436d-b1b0-d3cb9a593b92
2024-09-18 14:53:28.230 [info] CURSOR LOG: Done streaming cpp with id 943bba1b-2395-436d-b1b0-d3cb9a593b92
2024-09-18 14:53:28.230 [info] CPP RT LOG: Time taken for streaming cpp 612.43505859375 with request 943bba1b-2395-436d-b1b0-d3cb9a593b92
2024-09-18 14:53:28.230 [info] CPP Request Log with id 943bba1b-2395-436d-b1b0-d3cb9a593b92
2024-09-18 14:53:28.230 [info] =======>Model input 
2024-09-18 14:53:28.230 [info] =======>Model output 
    
    
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:28.230 [info] =======>Debug stream time 86.49248499982059
2024-09-18 14:53:28.230 [info] =======>Debug ttft time 81.2113379985094
2024-09-18 14:53:28.230 [info] Average of latest 20 ttft time 97.99577554995194
2024-09-18 14:53:28.230 [info] Average of latest 20 stream time 149.3326158499345
2024-09-18 14:53:28.230 [info] Average of latest 20 total time NaN
2024-09-18 14:53:28.230 [info] Average of latest 20 client time 470.7271240234375
2024-09-18 14:53:28.230 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:28.230 [info] CPP RT LOG: All stats {"streamingtime":612.43505859375,"actualTtftFromStart":663.748046875,"timeTillServerRequest":51.628173828125,"requestToTtft":612.119873046875,"totalTime":664.0185546875}
2024-09-18 14:53:28.230 [info] CURSOR LOG: restFunc done 943bba1b-2395-436d-b1b0-d3cb9a593b92
2024-09-18 14:53:28.534 [info] CURSOR LOG: restFunc initiated 996753c0-b78e-414b-9cb0-afde0b5f181a
2024-09-18 14:53:29.033 [info] CURSOR LOG: Done streaming cpp with id 996753c0-b78e-414b-9cb0-afde0b5f181a
2024-09-18 14:53:29.033 [info] CPP RT LOG: Time taken for streaming cpp 499.283447265625 with request 996753c0-b78e-414b-9cb0-afde0b5f181a
2024-09-18 14:53:29.036 [info] CPP Request Log with id 996753c0-b78e-414b-9cb0-afde0b5f181a
2024-09-18 14:53:29.036 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.

Here are some snippets of code I've recently looked at, roughly from oldest to newest. It's possible these aren't entirely relevant to my code change.
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>


Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>

    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
31+|        completedCourses.get(name).add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
32+|        completedCourses.get(name).add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
33+|        completedCourses.get(name).add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
34+|        completedCourses.get(name).add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
35+|        completedCourses.get(name).add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
then
36-|        
36+|
37 |    }
38 |
39 |    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
40 |        System.out.println("#=---- View Available Courses ----=#");
41 |        System.out.print("Enter the semester to view courses for: ");
42 |        int semester = scanner.nextInt();
43 |        scanner.nextLine(); // Consume newline
44 |        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
45 |        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
46 |        CourseTable.printCourseTable(availableCourses);
47 |    }
48 |
49 |    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
50 |        System.out.println("#=---- Register for Course ----=#");
51 |        viewAvailableCourses(scanner, courseCatalog);
52 |        System.out.print("Enter the course code to register: ");
53 |        String courseCode = scanner.nextLine();
54 |        Course course = courseCatalog.getCourse(courseCode);
55 |        
56 |        if (course == null) {
57 |            System.out.println("Invalid course code.");
58 |            return;
59 |        }
60 |
61-|        if (course.getSemester() != currentSemester) {
61+|        if (course.getSemester() != currentSemester) {
62+|            System.out.println("This course is not available for your current semester.");
then
15-|    private Map<String, List<Course>> completedCourses;
15+|    private List<Course> completedCourses;
then
25-|        this.completedCourses= new HashMap<>();
25+|        this.completedCourses= new ArrayList<>();
then
30-|        completedCourses
30+|        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
31+|        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
32+|        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
33+|        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
34+|        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
</diff_history>



<area_around_code_to_rewrite>
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;

<code_to_rewrite>
    private double cgpa;
    
    
    public Student(String name, String email, String id, String branch) {
</code_to_rewrite>
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }

    public void completedcourses(String name){
        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
    }

</area_around_code_to_rewrite>


<diff_history>
Student.java
15-|    private List<List<String>> completedCourse
16-|
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:53:29.036 [info] =======>Model output 
    private double cgpa;
    
    
    public Student(String name, String email, String id, String branch) {
2024-09-18 14:53:29.036 [info] =======>Debug stream time 156.2966710012406
2024-09-18 14:53:29.036 [info] =======>Debug ttft time 115.70785799995065
2024-09-18 14:53:29.037 [info] Average of latest 20 ttft time 98.39923484995961
2024-09-18 14:53:29.037 [info] Average of latest 20 stream time 148.2268070500344
2024-09-18 14:53:29.037 [info] Average of latest 20 total time NaN
2024-09-18 14:53:29.037 [info] Average of latest 20 client time 472.398876953125
2024-09-18 14:53:29.037 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:29.037 [info] CPP RT LOG: All stats {"streamingtime":499.283447265625,"actualTtftFromStart":513.924560546875,"timeTillServerRequest":51.802734375,"requestToTtft":462.121826171875,"totalTime":551.036376953125}
2024-09-18 14:53:29.037 [info] CURSOR LOG: restFunc done 996753c0-b78e-414b-9cb0-afde0b5f181a
2024-09-18 14:53:29.346 [info] CURSOR LOG: restFunc initiated c03ec8e5-a3b5-480d-96f5-24e5aa011170
2024-09-18 14:53:29.700 [info] CURSOR LOG: restFunc initiated 837dadb6-4962-4ff8-a0b5-2b9e5cb26ace
2024-09-18 14:53:29.771 [info] CURSOR LOG: Done streaming cpp with id c03ec8e5-a3b5-480d-96f5-24e5aa011170
2024-09-18 14:53:29.771 [info] CPP RT LOG: Time taken for streaming cpp 425.495849609375 with request c03ec8e5-a3b5-480d-96f5-24e5aa011170
2024-09-18 14:53:29.771 [info] CPP Request Log with id c03ec8e5-a3b5-480d-96f5-24e5aa011170
2024-09-18 14:53:29.771 [info] =======>Model input 
2024-09-18 14:53:29.771 [info] =======>Model output 
    private double cgpa;
    
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:29.771 [info] =======>Debug stream time 92.76308199949563
2024-09-18 14:53:29.771 [info] =======>Debug ttft time 85.94997199997306
2024-09-18 14:53:29.772 [info] Average of latest 20 ttft time 97.8626710999757
2024-09-18 14:53:29.772 [info] Average of latest 20 stream time 144.97070174999536
2024-09-18 14:53:29.772 [info] Average of latest 20 total time NaN
2024-09-18 14:53:29.772 [info] Average of latest 20 client time 469.79844970703124
2024-09-18 14:53:29.772 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:29.772 [info] CPP RT LOG: All stats {"streamingtime":425.495849609375,"actualTtftFromStart":473.274169921875,"timeTillServerRequest":52.846435546875,"requestToTtft":420.427734375,"totalTime":478.310546875}
2024-09-18 14:53:29.772 [info] CURSOR LOG: restFunc done c03ec8e5-a3b5-480d-96f5-24e5aa011170
2024-09-18 14:53:30.017 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:53:30.017 [info] CURSOR LOG: restFunc done 837dadb6-4962-4ff8-a0b5-2b9e5cb26ace
2024-09-18 14:53:30.054 [info] CURSOR LOG: restFunc initiated d2ec3ebb-1080-4367-9b69-87d1a4669eb6
2024-09-18 14:53:30.320 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:53:30.320 [info] CURSOR LOG: restFunc done d2ec3ebb-1080-4367-9b69-87d1a4669eb6
2024-09-18 14:53:30.355 [info] CURSOR LOG: restFunc initiated c1a51e97-9d51-4133-b3b8-d79c031914fa
2024-09-18 14:53:30.682 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:53:30.682 [info] CURSOR LOG: restFunc done c1a51e97-9d51-4133-b3b8-d79c031914fa
2024-09-18 14:53:30.717 [info] CURSOR LOG: restFunc initiated 418e8385-55fd-4bd9-b0b0-fca264208088
2024-09-18 14:53:30.973 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:31.009 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:31.019 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:31.059 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:31.178 [info] CURSOR LOG: Done streaming cpp with id 418e8385-55fd-4bd9-b0b0-fca264208088
2024-09-18 14:53:31.178 [info] CPP RT LOG: Time taken for streaming cpp 461.45556640625 with request 418e8385-55fd-4bd9-b0b0-fca264208088
2024-09-18 14:53:31.178 [info] CPP Request Log with id 418e8385-55fd-4bd9-b0b0-fca264208088
2024-09-18 14:53:31.178 [info] =======>Model input 
2024-09-18 14:53:31.178 [info] =======>Model output 

    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
2024-09-18 14:53:31.178 [info] =======>Debug stream time 268.823775999248
2024-09-18 14:53:31.178 [info] =======>Debug ttft time 168.99699999950826
2024-09-18 14:53:31.179 [info] Average of latest 20 ttft time 99.72238934990018
2024-09-18 14:53:31.179 [info] Average of latest 20 stream time 148.21287934994325
2024-09-18 14:53:31.179 [info] Average of latest 20 total time NaN
2024-09-18 14:53:31.179 [info] Average of latest 20 client time 447.22950439453126
2024-09-18 14:53:31.179 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:31.179 [info] CPP RT LOG: All stats {"streamingtime":461.45556640625,"actualTtftFromStart":410.685791015625,"timeTillServerRequest":50.384521484375,"requestToTtft":360.30126953125,"totalTime":511.81396484375}
2024-09-18 14:53:31.179 [info] CURSOR LOG: restFunc done 418e8385-55fd-4bd9-b0b0-fca264208088
2024-09-18 14:53:31.344 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:31.417 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:53:32.611 [info] CURSOR LOG: restFunc initiated be7bb5bb-0de2-41d9-8df9-443c027ca168
2024-09-18 14:53:33.019 [info] CURSOR LOG: Done streaming cpp with id be7bb5bb-0de2-41d9-8df9-443c027ca168
2024-09-18 14:53:33.019 [info] CPP RT LOG: Time taken for streaming cpp 408.55908203125 with request be7bb5bb-0de2-41d9-8df9-443c027ca168
2024-09-18 14:53:33.019 [info] CPP Request Log with id be7bb5bb-0de2-41d9-8df9-443c027ca168
2024-09-18 14:53:33.019 [info] =======>Model input 
2024-09-18 14:53:33.019 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new ArrayList<>();
        completedcourses(name);
    }
2024-09-18 14:53:33.019 [info] =======>Debug stream time 88.42944100126624
2024-09-18 14:53:33.019 [info] =======>Debug ttft time 82.96895200014114
2024-09-18 14:53:33.020 [info] Average of latest 20 ttft time 99.50776544986293
2024-09-18 14:53:33.020 [info] Average of latest 20 stream time 145.49157614996656
2024-09-18 14:53:33.020 [info] Average of latest 20 total time NaN
2024-09-18 14:53:33.020 [info] Average of latest 20 client time 444.40697021484374
2024-09-18 14:53:33.020 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:33.020 [info] CPP RT LOG: All stats {"streamingtime":408.55908203125,"actualTtftFromStart":457.87158203125,"timeTillServerRequest":53.016845703125,"requestToTtft":404.854736328125,"totalTime":461.5341796875}
2024-09-18 14:53:33.020 [info] CURSOR LOG: restFunc done be7bb5bb-0de2-41d9-8df9-443c027ca168
2024-09-18 14:53:36.778 [info] CURSOR LOG: restFunc initiated e363854c-372b-4770-8512-c25c9653a805
2024-09-18 14:53:37.242 [info] CURSOR LOG: Done streaming cpp with id e363854c-372b-4770-8512-c25c9653a805
2024-09-18 14:53:37.242 [info] CPP RT LOG: Time taken for streaming cpp 464.773681640625 with request e363854c-372b-4770-8512-c25c9653a805
2024-09-18 14:53:37.243 [info] CPP Request Log with id e363854c-372b-4770-8512-c25c9653a805
2024-09-18 14:53:37.243 [info] =======>Model input 
2024-09-18 14:53:37.243 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:37.243 [info] =======>Debug stream time 109.20615300163627
2024-09-18 14:53:37.243 [info] =======>Debug ttft time 78.57867200113833
2024-09-18 14:53:37.243 [info] Average of latest 20 ttft time 98.77243704991415
2024-09-18 14:53:37.243 [info] Average of latest 20 stream time 143.00794385001063
2024-09-18 14:53:37.243 [info] Average of latest 20 total time NaN
2024-09-18 14:53:37.243 [info] Average of latest 20 client time 443.4821533203125
2024-09-18 14:53:37.243 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:37.243 [info] CPP RT LOG: All stats {"streamingtime":464.773681640625,"actualTtftFromStart":517.75,"timeTillServerRequest":53.15625,"requestToTtft":464.59375,"totalTime":517.887939453125}
2024-09-18 14:53:37.243 [info] CURSOR LOG: restFunc done e363854c-372b-4770-8512-c25c9653a805
2024-09-18 14:53:40.616 [info] CURSOR LOG: restFunc initiated 69355cfd-6568-4e26-bd79-8ac40f036aff
2024-09-18 14:53:40.801 [info] CURSOR LOG: restFunc initiated 2e72eb86-f59f-4ba9-b2fc-4f191880dec7
2024-09-18 14:53:40.955 [info] CURSOR LOG: restFunc initiated fb38192f-3cee-4374-b917-4b1cd6e5b4f4
2024-09-18 14:53:41.093 [info] CURSOR LOG: Done streaming cpp with id 69355cfd-6568-4e26-bd79-8ac40f036aff
2024-09-18 14:53:41.093 [info] CPP RT LOG: Time taken for streaming cpp 476.582275390625 with request 69355cfd-6568-4e26-bd79-8ac40f036aff
2024-09-18 14:53:41.093 [info] CPP Request Log with id 69355cfd-6568-4e26-bd79-8ac40f036aff
2024-09-18 14:53:41.093 [info] =======>Model input 
2024-09-18 14:53:41.093 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:41.093 [info] =======>Debug stream time 129.05965900048614
2024-09-18 14:53:41.093 [info] =======>Debug ttft time 90.13887500017881
2024-09-18 14:53:41.094 [info] Average of latest 20 ttft time 98.95768014993519
2024-09-18 14:53:41.094 [info] Average of latest 20 stream time 142.36031309999527
2024-09-18 14:53:41.094 [info] Average of latest 20 total time NaN
2024-09-18 14:53:41.094 [info] Average of latest 20 client time 444.0059326171875
2024-09-18 14:53:41.094 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:41.094 [info] CPP RT LOG: All stats {"streamingtime":476.582275390625,"actualTtftFromStart":486.278076171875,"timeTillServerRequest":51.831787109375,"requestToTtft":434.4462890625,"totalTime":528.379150390625}
2024-09-18 14:53:41.094 [info] CURSOR LOG: restFunc done 69355cfd-6568-4e26-bd79-8ac40f036aff
2024-09-18 14:53:41.160 [info] CURSOR LOG: restFunc initiated 27abf7a6-a83d-4df0-9e50-7924c9192925
2024-09-18 14:53:41.251 [info] CURSOR LOG: Done streaming cpp with id 2e72eb86-f59f-4ba9-b2fc-4f191880dec7
2024-09-18 14:53:41.251 [info] CPP RT LOG: Time taken for streaming cpp 451.487548828125 with request 2e72eb86-f59f-4ba9-b2fc-4f191880dec7
2024-09-18 14:53:41.251 [info] CPP Request Log with id 2e72eb86-f59f-4ba9-b2fc-4f191880dec7
2024-09-18 14:53:41.251 [info] =======>Model input 
2024-09-18 14:53:41.251 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:41.251 [info] =======>Debug stream time 120.24430599994957
2024-09-18 14:53:41.251 [info] =======>Debug ttft time 89.670979000628
2024-09-18 14:53:41.251 [info] Average of latest 20 ttft time 98.34808269990609
2024-09-18 14:53:41.251 [info] Average of latest 20 stream time 140.5250417499803
2024-09-18 14:53:41.251 [info] Average of latest 20 total time NaN
2024-09-18 14:53:41.251 [info] Average of latest 20 client time 443.782763671875
2024-09-18 14:53:41.251 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:41.251 [info] CPP RT LOG: All stats {"streamingtime":451.487548828125,"actualTtftFromStart":451.185791015625,"timeTillServerRequest":52.402099609375,"requestToTtft":398.78369140625,"totalTime":503.832763671875}
2024-09-18 14:53:41.251 [info] CURSOR LOG: restFunc done 2e72eb86-f59f-4ba9-b2fc-4f191880dec7
2024-09-18 14:53:41.334 [info] CURSOR LOG: Done streaming cpp with id fb38192f-3cee-4374-b917-4b1cd6e5b4f4
2024-09-18 14:53:41.334 [info] CPP RT LOG: Time taken for streaming cpp 381.88818359375 with request fb38192f-3cee-4374-b917-4b1cd6e5b4f4
2024-09-18 14:53:41.334 [info] CPP Request Log with id fb38192f-3cee-4374-b917-4b1cd6e5b4f4
2024-09-18 14:53:41.334 [info] =======>Model input 
2024-09-18 14:53:41.334 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:41.334 [info] =======>Debug stream time 99.47297600097954
2024-09-18 14:53:41.334 [info] =======>Debug ttft time 68.34064299985766
2024-09-18 14:53:41.335 [info] Average of latest 20 ttft time 97.577614949923
2024-09-18 14:53:41.335 [info] Average of latest 20 stream time 138.48755895011126
2024-09-18 14:53:41.335 [info] Average of latest 20 total time NaN
2024-09-18 14:53:41.335 [info] Average of latest 20 client time 446.4980834960937
2024-09-18 14:53:41.335 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:41.335 [info] CPP RT LOG: All stats {"streamingtime":381.88818359375,"actualTtftFromStart":406.285888671875,"timeTillServerRequest":55.506103515625,"requestToTtft":350.77978515625,"totalTime":437.338623046875}
2024-09-18 14:53:41.335 [info] CURSOR LOG: restFunc done fb38192f-3cee-4374-b917-4b1cd6e5b4f4
2024-09-18 14:53:41.519 [info] CURSOR LOG: Done streaming cpp with id 27abf7a6-a83d-4df0-9e50-7924c9192925
2024-09-18 14:53:41.519 [info] CPP RT LOG: Time taken for streaming cpp 360.3193359375 with request 27abf7a6-a83d-4df0-9e50-7924c9192925
2024-09-18 14:53:41.519 [info] CPP Request Log with id 27abf7a6-a83d-4df0-9e50-7924c9192925
2024-09-18 14:53:41.519 [info] =======>Model input 
2024-09-18 14:53:41.519 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:41.519 [info] =======>Debug stream time 180.86892000027
2024-09-18 14:53:41.519 [info] =======>Debug ttft time 150.00463399849832
2024-09-18 14:53:41.520 [info] Average of latest 20 ttft time 100.59405779987574
2024-09-18 14:53:41.520 [info] Average of latest 20 stream time 140.1363591001369
2024-09-18 14:53:41.520 [info] Average of latest 20 total time NaN
2024-09-18 14:53:41.520 [info] Average of latest 20 client time 447.77410888671875
2024-09-18 14:53:41.520 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:41.520 [info] CPP RT LOG: All stats {"streamingtime":360.3193359375,"actualTtftFromStart":383.260498046875,"timeTillServerRequest":54.59912109375,"requestToTtft":328.661376953125,"totalTime":414.88623046875}
2024-09-18 14:53:41.520 [info] CURSOR LOG: restFunc done 27abf7a6-a83d-4df0-9e50-7924c9192925
2024-09-18 14:53:42.494 [info] CURSOR LOG: restFunc initiated 5ec8c828-7cda-43c9-9d92-ec2bdd46ef7c
2024-09-18 14:53:42.747 [info] CURSOR LOG: restFunc initiated 77bf4933-fc8b-45dd-a5d6-646f951a80c3
2024-09-18 14:53:43.006 [info] CURSOR LOG: Done streaming cpp with id 5ec8c828-7cda-43c9-9d92-ec2bdd46ef7c
2024-09-18 14:53:43.007 [info] CPP RT LOG: Time taken for streaming cpp 512.53564453125 with request 5ec8c828-7cda-43c9-9d92-ec2bdd46ef7c
2024-09-18 14:53:43.007 [info] CPP Request Log with id 5ec8c828-7cda-43c9-9d92-ec2bdd46ef7c
2024-09-18 14:53:43.007 [info] =======>Model input 
2024-09-18 14:53:43.007 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourseCodes = new ArrayList<>();
        completedcourses(name);
    }
2024-09-18 14:53:43.007 [info] =======>Debug stream time 191.77852699905634
2024-09-18 14:53:43.007 [info] =======>Debug ttft time 85.54264600016177
2024-09-18 14:53:43.007 [info] Average of latest 20 ttft time 100.33209564993157
2024-09-18 14:53:43.007 [info] Average of latest 20 stream time 142.21230685012415
2024-09-18 14:53:43.007 [info] Average of latest 20 total time NaN
2024-09-18 14:53:43.007 [info] Average of latest 20 client time 449.31611328125
2024-09-18 14:53:43.007 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:43.007 [info] CPP RT LOG: All stats {"streamingtime":512.53564453125,"actualTtftFromStart":454.701904296875,"timeTillServerRequest":51.67041015625,"requestToTtft":403.031494140625,"totalTime":564.189208984375}
2024-09-18 14:53:43.007 [info] CURSOR LOG: restFunc done 5ec8c828-7cda-43c9-9d92-ec2bdd46ef7c
2024-09-18 14:53:43.093 [info] CURSOR LOG: Done streaming cpp with id 77bf4933-fc8b-45dd-a5d6-646f951a80c3
2024-09-18 14:53:43.093 [info] CPP RT LOG: Time taken for streaming cpp 346.85205078125 with request 77bf4933-fc8b-45dd-a5d6-646f951a80c3
2024-09-18 14:53:43.093 [info] CPP Request Log with id 77bf4933-fc8b-45dd-a5d6-646f951a80c3
2024-09-18 14:53:43.093 [info] =======>Model input 
2024-09-18 14:53:43.093 [info] =======>Model output 
        this.currentSemester = 3;
        completedcourses(name);
    }
2024-09-18 14:53:43.093 [info] =======>Debug stream time 120.09353100135922
2024-09-18 14:53:43.093 [info] =======>Debug ttft time 88.94498400017619
2024-09-18 14:53:43.094 [info] Average of latest 20 ttft time 100.58699549995363
2024-09-18 14:53:43.094 [info] Average of latest 20 stream time 140.51564185023307
2024-09-18 14:53:43.094 [info] Average of latest 20 total time NaN
2024-09-18 14:53:43.094 [info] Average of latest 20 client time 448.9621337890625
2024-09-18 14:53:43.094 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:43.094 [info] CPP RT LOG: All stats {"streamingtime":346.85205078125,"actualTtftFromStart":352.564453125,"timeTillServerRequest":52.481689453125,"requestToTtft":300.082763671875,"totalTime":399.28662109375}
2024-09-18 14:53:43.094 [info] CURSOR LOG: restFunc done 77bf4933-fc8b-45dd-a5d6-646f951a80c3
2024-09-18 14:53:45.143 [info] CURSOR LOG: restFunc initiated 663c2945-2ad4-4617-a13c-67bd2ee7c095
2024-09-18 14:53:45.766 [info] CURSOR LOG: Done streaming cpp with id 663c2945-2ad4-4617-a13c-67bd2ee7c095
2024-09-18 14:53:45.766 [info] CPP RT LOG: Time taken for streaming cpp 622.7421875 with request 663c2945-2ad4-4617-a13c-67bd2ee7c095
2024-09-18 14:53:45.766 [info] CPP Request Log with id 663c2945-2ad4-4617-a13c-67bd2ee7c095
2024-09-18 14:53:45.766 [info] =======>Model input 
2024-09-18 14:53:45.766 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
2024-09-18 14:53:45.766 [info] =======>Debug stream time 250.79180900007486
2024-09-18 14:53:45.766 [info] =======>Debug ttft time 84.03128000162542
2024-09-18 14:53:45.766 [info] Average of latest 20 ttft time 99.20805850001052
2024-09-18 14:53:45.766 [info] Average of latest 20 stream time 142.59922145018353
2024-09-18 14:53:45.766 [info] Average of latest 20 total time NaN
2024-09-18 14:53:45.766 [info] Average of latest 20 client time 460.5987060546875
2024-09-18 14:53:45.766 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:45.766 [info] CPP RT LOG: All stats {"streamingtime":622.7421875,"actualTtftFromStart":464.180908203125,"timeTillServerRequest":2.341552734375,"requestToTtft":461.83935546875,"totalTime":625.039306640625}
2024-09-18 14:53:45.766 [info] CURSOR LOG: restFunc done 663c2945-2ad4-4617-a13c-67bd2ee7c095
2024-09-18 14:53:51.561 [info] CURSOR LOG: restFunc initiated 5daf4eee-f338-4dd2-a180-dbed9564d381
2024-09-18 14:53:52.297 [info] CURSOR LOG: Done streaming cpp with id 5daf4eee-f338-4dd2-a180-dbed9564d381
2024-09-18 14:53:52.297 [info] CPP RT LOG: Time taken for streaming cpp 736.637451171875 with request 5daf4eee-f338-4dd2-a180-dbed9564d381
2024-09-18 14:53:52.298 [info] CPP Request Log with id 5daf4eee-f338-4dd2-a180-dbed9564d381
2024-09-18 14:53:52.298 [info] =======>Model input 
2024-09-18 14:53:52.298 [info] =======>Model output 
    public void completedcourses(String name){
       completedCourseCodes.add("MTH100");
       completedCourseCodes.add("CSE101");
       completedCourseCodes.add("DES102");
       completedCourseCodes.add("ECE111");
       completedCourseCodes.add("COM101");
    }

2024-09-18 14:53:52.298 [info] =======>Debug stream time 405.83318699896336
2024-09-18 14:53:52.298 [info] =======>Debug ttft time 180.16814699955285
2024-09-18 14:53:52.298 [info] Average of latest 20 ttft time 103.6625826000236
2024-09-18 14:53:52.298 [info] Average of latest 20 stream time 154.8617768501863
2024-09-18 14:53:52.298 [info] Average of latest 20 total time NaN
2024-09-18 14:53:52.298 [info] Average of latest 20 client time 480.28380126953124
2024-09-18 14:53:52.298 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:52.298 [info] CPP RT LOG: All stats {"streamingtime":736.637451171875,"actualTtftFromStart":563.575927734375,"timeTillServerRequest":51.336181640625,"requestToTtft":512.23974609375,"totalTime":787.95849609375}
2024-09-18 14:53:52.298 [info] CURSOR LOG: restFunc done 5daf4eee-f338-4dd2-a180-dbed9564d381
2024-09-18 14:53:55.188 [info] CURSOR LOG: restFunc initiated d119fee1-3864-47bb-a195-8c786f7d34e0
2024-09-18 14:53:55.902 [info] CURSOR LOG: Done streaming cpp with id d119fee1-3864-47bb-a195-8c786f7d34e0
2024-09-18 14:53:55.902 [info] CPP RT LOG: Time taken for streaming cpp 714.983154296875 with request d119fee1-3864-47bb-a195-8c786f7d34e0
2024-09-18 14:53:55.903 [info] CPP Request Log with id d119fee1-3864-47bb-a195-8c786f7d34e0
2024-09-18 14:53:55.903 [info] =======>Model input 
2024-09-18 14:53:55.903 [info] =======>Model output 
       completedCourseCodes.add("ECE111");
       completedCourseCodes.add("COM101");
    }

2024-09-18 14:53:55.903 [info] =======>Debug stream time 118.8096689991653
2024-09-18 14:53:55.903 [info] =======>Debug ttft time 109.96246399916708
2024-09-18 14:53:55.903 [info] Average of latest 20 ttft time 104.84622975001112
2024-09-18 14:53:55.903 [info] Average of latest 20 stream time 153.22773000020533
2024-09-18 14:53:55.903 [info] Average of latest 20 total time NaN
2024-09-18 14:53:55.903 [info] Average of latest 20 client time 497.4374633789063
2024-09-18 14:53:55.903 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:55.903 [info] CPP RT LOG: All stats {"streamingtime":714.983154296875,"actualTtftFromStart":767.344482421875,"timeTillServerRequest":52.509765625,"requestToTtft":714.834716796875,"totalTime":767.4501953125}
2024-09-18 14:53:55.903 [info] CURSOR LOG: restFunc done d119fee1-3864-47bb-a195-8c786f7d34e0
2024-09-18 14:53:56.960 [info] CURSOR LOG: restFunc initiated a34bea5f-c39b-418c-bf76-89cd3fd2c54c
2024-09-18 14:53:57.766 [info] CURSOR LOG: Done streaming cpp with id a34bea5f-c39b-418c-bf76-89cd3fd2c54c
2024-09-18 14:53:57.766 [info] CPP RT LOG: Time taken for streaming cpp 805.87890625 with request a34bea5f-c39b-418c-bf76-89cd3fd2c54c
2024-09-18 14:53:57.767 [info] CPP Request Log with id a34bea5f-c39b-418c-bf76-89cd3fd2c54c
2024-09-18 14:53:57.767 [info] =======>Model input 
2024-09-18 14:53:57.767 [info] =======>Model output 

    public void completedcourses(String name){
        if(name.equals("Sohum")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:53:57.767 [info] =======>Debug stream time 434.5524589996785
2024-09-18 14:53:57.767 [info] =======>Debug ttft time 95.25250800140202
2024-09-18 14:53:57.767 [info] Average of latest 20 ttft time 105.34054310014471
2024-09-18 14:53:57.767 [info] Average of latest 20 stream time 167.13920200020075
2024-09-18 14:53:57.767 [info] Average of latest 20 total time NaN
2024-09-18 14:53:57.767 [info] Average of latest 20 client time 513.5637817382812
2024-09-18 14:53:57.767 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:53:57.767 [info] CPP RT LOG: All stats {"streamingtime":805.87890625,"actualTtftFromStart":611.435546875,"timeTillServerRequest":51.651123046875,"requestToTtft":559.784423828125,"totalTime":857.4951171875}
2024-09-18 14:53:57.767 [info] CURSOR LOG: restFunc done a34bea5f-c39b-418c-bf76-89cd3fd2c54c
2024-09-18 14:54:01.507 [info] CURSOR LOG: restFunc initiated fbbeae71-98c0-40bc-8e55-58b6b3c823f5
2024-09-18 14:54:01.991 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:01.991 [info] CURSOR LOG: restFunc done fbbeae71-98c0-40bc-8e55-58b6b3c823f5
2024-09-18 14:54:02.042 [info] CURSOR LOG: restFunc initiated e57d216a-2109-491f-9466-93397a6a3ae1
2024-09-18 14:54:02.823 [info] CURSOR LOG: Done streaming cpp with id e57d216a-2109-491f-9466-93397a6a3ae1
2024-09-18 14:54:02.823 [info] CPP RT LOG: Time taken for streaming cpp 780.532958984375 with request e57d216a-2109-491f-9466-93397a6a3ae1
2024-09-18 14:54:02.823 [info] CPP Request Log with id e57d216a-2109-491f-9466-93397a6a3ae1
2024-09-18 14:54:02.823 [info] =======>Model input 
2024-09-18 14:54:02.823 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:54:02.823 [info] =======>Debug stream time 578.2733029983938
2024-09-18 14:54:02.823 [info] =======>Debug ttft time 199.53326199948788
2024-09-18 14:54:02.823 [info] Average of latest 20 ttft time 108.96595890009776
2024-09-18 14:54:02.823 [info] Average of latest 20 stream time 189.04714605016633
2024-09-18 14:54:02.823 [info] Average of latest 20 total time NaN
2024-09-18 14:54:02.823 [info] Average of latest 20 client time 526.0135620117187
2024-09-18 14:54:02.823 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:02.823 [info] CPP RT LOG: All stats {"streamingtime":780.532958984375,"actualTtftFromStart":440.119384765625,"timeTillServerRequest":50.98828125,"requestToTtft":389.131103515625,"totalTime":831.501953125}
2024-09-18 14:54:02.823 [info] CURSOR LOG: restFunc done e57d216a-2109-491f-9466-93397a6a3ae1
2024-09-18 14:54:15.022 [info] CURSOR LOG: restFunc initiated b8529aee-680e-42ae-b0cb-f3acfa23689e
2024-09-18 14:54:15.215 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:15.215 [info] CURSOR LOG: restFunc done b8529aee-680e-42ae-b0cb-f3acfa23689e
2024-09-18 14:54:15.241 [info] CURSOR LOG: restFunc initiated 5f26e858-a846-4592-b3ad-c519b47105c3
2024-09-18 14:54:15.375 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:15.375 [info] CURSOR LOG: restFunc done 5f26e858-a846-4592-b3ad-c519b47105c3
2024-09-18 14:54:15.415 [info] CURSOR LOG: restFunc initiated 13006cdb-87e7-4750-a500-1c485bf3787c
2024-09-18 14:54:15.532 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:15.532 [info] CURSOR LOG: restFunc done 13006cdb-87e7-4750-a500-1c485bf3787c
2024-09-18 14:54:15.570 [info] CURSOR LOG: restFunc initiated ea2cc539-90ff-4a7a-92b9-5f80d56321c8
2024-09-18 14:54:15.687 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:15.688 [info] CURSOR LOG: restFunc done ea2cc539-90ff-4a7a-92b9-5f80d56321c8
2024-09-18 14:54:15.725 [info] CURSOR LOG: restFunc initiated 4e0dd81e-6922-46bf-89c5-e3526aae6cc5
2024-09-18 14:54:16.020 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.023 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:16.023 [info] CURSOR LOG: restFunc done 4e0dd81e-6922-46bf-89c5-e3526aae6cc5
2024-09-18 14:54:16.055 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.072 [info] CURSOR LOG: restFunc initiated 55221f48-109e-4a5c-b570-c91e1a1c8119
2024-09-18 14:54:16.198 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.273 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:16.273 [info] CURSOR LOG: restFunc done 55221f48-109e-4a5c-b570-c91e1a1c8119
2024-09-18 14:54:16.276 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.325 [info] CURSOR LOG: restFunc initiated 115e430e-9867-4717-9be8-b29c9ca6d720
2024-09-18 14:54:16.335 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.392 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.409 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.427 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:16.740 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:16.740 [info] CURSOR LOG: restFunc done 115e430e-9867-4717-9be8-b29c9ca6d720
2024-09-18 14:54:16.792 [info] CURSOR LOG: restFunc initiated 98985aa1-37b5-4c80-aed9-6e90de34149f
2024-09-18 14:54:17.433 [info] CURSOR LOG: Done streaming cpp with id 98985aa1-37b5-4c80-aed9-6e90de34149f
2024-09-18 14:54:17.433 [info] CPP RT LOG: Time taken for streaming cpp 640.5927734375 with request 98985aa1-37b5-4c80-aed9-6e90de34149f
2024-09-18 14:54:17.433 [info] CPP Request Log with id 98985aa1-37b5-4c80-aed9-6e90de34149f
2024-09-18 14:54:17.433 [info] =======>Model input 
2024-09-18 14:54:17.433 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:54:17.433 [info] =======>Debug stream time 454.83751600049436
2024-09-18 14:54:17.433 [info] =======>Debug ttft time 84.76110300049186
2024-09-18 14:54:17.434 [info] Average of latest 20 ttft time 106.23193000014871
2024-09-18 14:54:17.434 [info] Average of latest 20 stream time 204.59270595014095
2024-09-18 14:54:17.434 [info] Average of latest 20 total time NaN
2024-09-18 14:54:17.434 [info] Average of latest 20 client time 528.4678100585937
2024-09-18 14:54:17.434 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:17.434 [info] CPP RT LOG: All stats {"streamingtime":640.5927734375,"actualTtftFromStart":323.21923828125,"timeTillServerRequest":52.46142578125,"requestToTtft":270.7578125,"totalTime":693.02880859375}
2024-09-18 14:54:17.434 [info] CURSOR LOG: restFunc done 98985aa1-37b5-4c80-aed9-6e90de34149f
2024-09-18 14:54:19.450 [info] CURSOR LOG: restFunc initiated 26696918-4262-422e-ab4b-63278277a8f8
2024-09-18 14:54:19.674 [info] CURSOR LOG: restFunc initiated 2fba1f8e-f941-420f-95cc-804827d3a609
2024-09-18 14:54:19.866 [info] CURSOR LOG: restFunc initiated c4c994ea-8f01-44de-8fc0-470c41e86554
2024-09-18 14:54:20.055 [info] CURSOR LOG: restFunc initiated 84837307-65d1-4673-a97c-508026cba6bd
2024-09-18 14:54:20.212 [info] CURSOR LOG: Done streaming cpp with id 26696918-4262-422e-ab4b-63278277a8f8
2024-09-18 14:54:20.212 [info] CPP RT LOG: Time taken for streaming cpp 762.24609375 with request 26696918-4262-422e-ab4b-63278277a8f8
2024-09-18 14:54:20.212 [info] CPP Request Log with id 26696918-4262-422e-ab4b-63278277a8f8
2024-09-18 14:54:20.212 [info] =======>Model input 
2024-09-18 14:54:20.212 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:54:20.213 [info] =======>Debug stream time 422.29051600024104
2024-09-18 14:54:20.213 [info] =======>Debug ttft time 109.3179419990629
2024-09-18 14:54:20.213 [info] Average of latest 20 ttft time 107.3601200000383
2024-09-18 14:54:20.213 [info] Average of latest 20 stream time 221.04268145011739
2024-09-18 14:54:20.213 [info] Average of latest 20 total time NaN
2024-09-18 14:54:20.213 [info] Average of latest 20 client time 545.7637451171875
2024-09-18 14:54:20.213 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:20.213 [info] CPP RT LOG: All stats {"streamingtime":762.24609375,"actualTtftFromStart":498.8916015625,"timeTillServerRequest":51.154296875,"requestToTtft":447.7373046875,"totalTime":813.3837890625}
2024-09-18 14:54:20.213 [info] CURSOR LOG: restFunc done 26696918-4262-422e-ab4b-63278277a8f8
2024-09-18 14:54:20.298 [info] CURSOR LOG: Done streaming cpp with id 2fba1f8e-f941-420f-95cc-804827d3a609
2024-09-18 14:54:20.298 [info] CPP RT LOG: Time taken for streaming cpp 624.865478515625 with request 2fba1f8e-f941-420f-95cc-804827d3a609
2024-09-18 14:54:20.299 [info] CPP Request Log with id 2fba1f8e-f941-420f-95cc-804827d3a609
2024-09-18 14:54:20.299 [info] =======>Model input 
2024-09-18 14:54:20.299 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:54:20.299 [info] =======>Debug stream time 376.5289270002395
2024-09-18 14:54:20.299 [info] =======>Debug ttft time 85.486074000597
2024-09-18 14:54:20.301 [info] Average of latest 20 ttft time 106.72846665000543
2024-09-18 14:54:20.301 [info] Average of latest 20 stream time 234.27234565010295
2024-09-18 14:54:20.301 [info] Average of latest 20 total time NaN
2024-09-18 14:54:20.301 [info] Average of latest 20 client time 554.5073364257812
2024-09-18 14:54:20.301 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:20.301 [info] CPP RT LOG: All stats {"streamingtime":624.865478515625,"actualTtftFromStart":391.00390625,"timeTillServerRequest":56.006591796875,"requestToTtft":334.997314453125,"totalTime":680.826416015625}
2024-09-18 14:54:20.301 [info] CURSOR LOG: restFunc done 2fba1f8e-f941-420f-95cc-804827d3a609
2024-09-18 14:54:20.430 [info] CURSOR LOG: Done streaming cpp with id c4c994ea-8f01-44de-8fc0-470c41e86554
2024-09-18 14:54:20.431 [info] CPP RT LOG: Time taken for streaming cpp 565.854248046875 with request c4c994ea-8f01-44de-8fc0-470c41e86554
2024-09-18 14:54:20.431 [info] CPP Request Log with id c4c994ea-8f01-44de-8fc0-470c41e86554
2024-09-18 14:54:20.431 [info] =======>Model input 
2024-09-18 14:54:20.431 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:54:20.431 [info] =======>Debug stream time 368.83462600037456
2024-09-18 14:54:20.431 [info] =======>Debug ttft time 96.37377999909222
2024-09-18 14:54:20.433 [info] Average of latest 20 ttft time 107.48658875003457
2024-09-18 14:54:20.433 [info] Average of latest 20 stream time 248.38945270013065
2024-09-18 14:54:20.433 [info] Average of latest 20 total time NaN
2024-09-18 14:54:20.433 [info] Average of latest 20 client time 552.1782958984375
2024-09-18 14:54:20.433 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:20.433 [info] CPP RT LOG: All stats {"streamingtime":565.854248046875,"actualTtftFromStart":350.6787109375,"timeTillServerRequest":53.519775390625,"requestToTtft":297.158935546875,"totalTime":619.332275390625}
2024-09-18 14:54:20.433 [info] CURSOR LOG: restFunc done c4c994ea-8f01-44de-8fc0-470c41e86554
2024-09-18 14:54:20.581 [info] CURSOR LOG: Done streaming cpp with id 84837307-65d1-4673-a97c-508026cba6bd
2024-09-18 14:54:20.581 [info] CPP RT LOG: Time taken for streaming cpp 526.0283203125 with request 84837307-65d1-4673-a97c-508026cba6bd
2024-09-18 14:54:20.581 [info] CPP Request Log with id 84837307-65d1-4673-a97c-508026cba6bd
2024-09-18 14:54:20.581 [info] =======>Model input 
2024-09-18 14:54:20.581 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:54:20.581 [info] =======>Debug stream time 337.44109099917114
2024-09-18 14:54:20.581 [info] =======>Debug ttft time 83.18747000023723
2024-09-18 14:54:20.581 [info] Average of latest 20 ttft time 105.8605693500489
2024-09-18 14:54:20.581 [info] Average of latest 20 stream time 257.4466737000272
2024-09-18 14:54:20.581 [info] Average of latest 20 total time NaN
2024-09-18 14:54:20.581 [info] Average of latest 20 client time 553.5155395507812
2024-09-18 14:54:20.581 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:20.581 [info] CPP RT LOG: All stats {"streamingtime":526.0283203125,"actualTtftFromStart":327.76953125,"timeTillServerRequest":57.068359375,"requestToTtft":270.701171875,"totalTime":583.068359375}
2024-09-18 14:54:20.581 [info] CURSOR LOG: restFunc done 84837307-65d1-4673-a97c-508026cba6bd
2024-09-18 14:54:22.428 [info] CURSOR LOG: restFunc initiated 02567b0d-fd4f-4e48-ab43-e53160224d4f
2024-09-18 14:54:22.535 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:22.535 [info] CURSOR LOG: restFunc done 02567b0d-fd4f-4e48-ab43-e53160224d4f
2024-09-18 14:54:22.560 [info] CURSOR LOG: restFunc initiated d9199f44-2ced-421d-b32e-8e1926659321
2024-09-18 14:54:22.661 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:22.661 [info] CURSOR LOG: restFunc done d9199f44-2ced-421d-b32e-8e1926659321
2024-09-18 14:54:22.698 [info] CURSOR LOG: restFunc initiated 1e01aa66-3164-410d-bc9c-3e181ff86158
2024-09-18 14:54:22.792 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:22.792 [info] CURSOR LOG: restFunc done 1e01aa66-3164-410d-bc9c-3e181ff86158
2024-09-18 14:54:22.830 [info] CURSOR LOG: restFunc initiated 8d5c772b-c4f2-47aa-9022-fc513e1ea664
2024-09-18 14:54:22.914 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:22.914 [info] CURSOR LOG: restFunc done 8d5c772b-c4f2-47aa-9022-fc513e1ea664
2024-09-18 14:54:22.947 [info] CURSOR LOG: restFunc initiated f00f5ced-3d8d-4681-bcd7-af070a7fca0e
2024-09-18 14:54:23.031 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.031 [info] CURSOR LOG: restFunc done f00f5ced-3d8d-4681-bcd7-af070a7fca0e
2024-09-18 14:54:23.067 [info] CURSOR LOG: restFunc initiated b2eb1436-193e-45fa-b0cf-d65202ae306d
2024-09-18 14:54:23.147 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.147 [info] CURSOR LOG: restFunc done b2eb1436-193e-45fa-b0cf-d65202ae306d
2024-09-18 14:54:23.183 [info] CURSOR LOG: restFunc initiated bd48a8f6-2542-489e-b8c2-e7676fec5aa5
2024-09-18 14:54:23.231 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.263 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.264 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.264 [info] CURSOR LOG: restFunc done bd48a8f6-2542-489e-b8c2-e7676fec5aa5
2024-09-18 14:54:23.316 [info] CURSOR LOG: restFunc initiated bf7d813e-76bd-4e72-a2b6-7686d35a31ff
2024-09-18 14:54:23.397 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.397 [info] CURSOR LOG: restFunc done bf7d813e-76bd-4e72-a2b6-7686d35a31ff
2024-09-18 14:54:23.400 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.432 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.451 [info] CURSOR LOG: restFunc initiated d1139a03-3126-4dcd-940f-516fc5e14e42
2024-09-18 14:54:23.502 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.536 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.536 [info] CURSOR LOG: restFunc done d1139a03-3126-4dcd-940f-516fc5e14e42
2024-09-18 14:54:23.543 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.587 [info] CURSOR LOG: restFunc initiated 08754ae7-d720-40fd-a7e7-c95dbc0d9220
2024-09-18 14:54:23.599 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.642 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.676 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.676 [info] CURSOR LOG: restFunc done 08754ae7-d720-40fd-a7e7-c95dbc0d9220
2024-09-18 14:54:23.727 [info] CURSOR LOG: restFunc initiated 5a1be387-f3c3-4985-871e-e4d20e435583
2024-09-18 14:54:23.754 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.755 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.840 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.855 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:54:23.932 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:23.932 [info] CURSOR LOG: restFunc done 5a1be387-f3c3-4985-871e-e4d20e435583
2024-09-18 14:54:23.986 [info] CURSOR LOG: restFunc initiated ba99bd1e-21b6-4ae1-a692-2ff9343d4856
2024-09-18 14:54:24.077 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:24.077 [info] CURSOR LOG: restFunc done ba99bd1e-21b6-4ae1-a692-2ff9343d4856
2024-09-18 14:54:24.129 [info] CURSOR LOG: restFunc initiated f182ef9a-63a2-4054-9569-14afc30f413a
2024-09-18 14:54:24.218 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:54:24.218 [info] CURSOR LOG: restFunc done f182ef9a-63a2-4054-9569-14afc30f413a
2024-09-18 14:54:24.270 [info] CURSOR LOG: restFunc initiated 871c7e80-e64e-460c-b1bd-4a88cb0555f3
2024-09-18 14:54:24.724 [info] CURSOR LOG: Done streaming cpp with id 871c7e80-e64e-460c-b1bd-4a88cb0555f3
2024-09-18 14:54:24.724 [info] CPP RT LOG: Time taken for streaming cpp 453.77734375 with request 871c7e80-e64e-460c-b1bd-4a88cb0555f3
2024-09-18 14:54:24.724 [info] CPP Request Log with id 871c7e80-e64e-460c-b1bd-4a88cb0555f3
2024-09-18 14:54:24.724 [info] =======>Model input 
2024-09-18 14:54:24.724 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:54:24.724 [info] =======>Debug stream time 267.674332998693
2024-09-18 14:54:24.724 [info] =======>Debug ttft time 83.25766499899328
2024-09-18 14:54:24.725 [info] Average of latest 20 ttft time 105.72595399999992
2024-09-18 14:54:24.725 [info] Average of latest 20 stream time 266.19223624998705
2024-09-18 14:54:24.725 [info] Average of latest 20 total time NaN
2024-09-18 14:54:24.725 [info] Average of latest 20 client time 554.9296142578125
2024-09-18 14:54:24.725 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:54:24.725 [info] CPP RT LOG: All stats {"streamingtime":453.77734375,"actualTtftFromStart":445.583251953125,"timeTillServerRequest":52.1826171875,"requestToTtft":393.400634765625,"totalTime":505.904052734375}
2024-09-18 14:54:24.725 [info] CURSOR LOG: restFunc done 871c7e80-e64e-460c-b1bd-4a88cb0555f3
2024-09-18 14:55:34.681 [info] CURSOR LOG: restFunc initiated c09ecb72-5456-43bc-831f-37d9c6905bac
2024-09-18 14:55:34.987 [info] CURSOR LOG: restFunc initiated 090b4400-5051-4c67-96eb-196775dd27fc
2024-09-18 14:55:35.177 [info] CURSOR LOG: restFunc initiated 6588aaf9-3ea5-4593-9a16-54a32c34614e
2024-09-18 14:55:35.357 [info] CURSOR LOG: restFunc initiated e265f9f4-13b4-4a44-a79f-c1dd186cbc75
2024-09-18 14:55:35.521 [info] CURSOR LOG: restFunc initiated bdde7fe4-6c7e-4e27-b4d0-9a4912e3ec1e
2024-09-18 14:55:35.627 [info] CURSOR LOG: Done streaming cpp with id c09ecb72-5456-43bc-831f-37d9c6905bac
2024-09-18 14:55:35.627 [info] CPP RT LOG: Time taken for streaming cpp 945.78857421875 with request c09ecb72-5456-43bc-831f-37d9c6905bac
2024-09-18 14:55:35.627 [info] CPP Request Log with id c09ecb72-5456-43bc-831f-37d9c6905bac
2024-09-18 14:55:35.627 [info] =======>Model input 
2024-09-18 14:55:35.627 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:35.627 [info] =======>Debug stream time 321.22921799868345
2024-09-18 14:55:35.627 [info] =======>Debug ttft time 82.5044369995594
2024-09-18 14:55:35.627 [info] Average of latest 20 ttft time 101.40132585000246
2024-09-18 14:55:35.627 [info] Average of latest 20 stream time 268.8125083499588
2024-09-18 14:55:35.627 [info] Average of latest 20 total time NaN
2024-09-18 14:55:35.627 [info] Average of latest 20 client time 579.1462646484375
2024-09-18 14:55:35.627 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:35.627 [info] CPP RT LOG: All stats {"streamingtime":945.78857421875,"actualTtftFromStart":760.412841796875,"timeTillServerRequest":54.62744140625,"requestToTtft":705.785400390625,"totalTime":1000.374267578125}
2024-09-18 14:55:35.627 [info] CURSOR LOG: restFunc done c09ecb72-5456-43bc-831f-37d9c6905bac
2024-09-18 14:55:35.680 [info] CURSOR LOG: restFunc initiated d0824552-e004-41cb-8985-b1d00ba8c2cb
2024-09-18 14:55:35.804 [info] CURSOR LOG: Done streaming cpp with id 090b4400-5051-4c67-96eb-196775dd27fc
2024-09-18 14:55:35.804 [info] CPP RT LOG: Time taken for streaming cpp 818.376708984375 with request 090b4400-5051-4c67-96eb-196775dd27fc
2024-09-18 14:55:35.804 [info] CPP Request Log with id 090b4400-5051-4c67-96eb-196775dd27fc
2024-09-18 14:55:35.804 [info] =======>Model input 
2024-09-18 14:55:35.804 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:35.804 [info] =======>Debug stream time 352.1450640000403
2024-09-18 14:55:35.804 [info] =======>Debug ttft time 85.84339299984276
2024-09-18 14:55:35.805 [info] Average of latest 20 ttft time 101.54504789998755
2024-09-18 14:55:35.805 [info] Average of latest 20 stream time 281.9982894998975
2024-09-18 14:55:35.805 [info] Average of latest 20 total time NaN
2024-09-18 14:55:35.805 [info] Average of latest 20 client time 599.6371459960938
2024-09-18 14:55:35.805 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:35.805 [info] CPP RT LOG: All stats {"streamingtime":818.376708984375,"actualTtftFromStart":605.63525390625,"timeTillServerRequest":54.5302734375,"requestToTtft":551.10498046875,"totalTime":872.8623046875}
2024-09-18 14:55:35.805 [info] CURSOR LOG: restFunc done 090b4400-5051-4c67-96eb-196775dd27fc
2024-09-18 14:55:35.973 [info] CURSOR LOG: Done streaming cpp with id e265f9f4-13b4-4a44-a79f-c1dd186cbc75
2024-09-18 14:55:35.973 [info] CPP RT LOG: Time taken for streaming cpp 616.107177734375 with request e265f9f4-13b4-4a44-a79f-c1dd186cbc75
2024-09-18 14:55:35.973 [info] CPP Request Log with id e265f9f4-13b4-4a44-a79f-c1dd186cbc75
2024-09-18 14:55:35.973 [info] =======>Model input 
2024-09-18 14:55:35.973 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:35.973 [info] =======>Debug stream time 389.1084009986371
2024-09-18 14:55:35.973 [info] =======>Debug ttft time 76.1417579986155
2024-09-18 14:55:35.973 [info] Average of latest 20 ttft time 101.42320219986141
2024-09-18 14:55:35.973 [info] Average of latest 20 stream time 295.99340189974754
2024-09-18 14:55:35.973 [info] Average of latest 20 total time NaN
2024-09-18 14:55:35.973 [info] Average of latest 20 client time 607.2038208007813
2024-09-18 14:55:35.973 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:35.973 [info] CPP RT LOG: All stats {"streamingtime":616.107177734375,"actualTtftFromStart":354.902587890625,"timeTillServerRequest":56.17333984375,"requestToTtft":298.729248046875,"totalTime":672.257568359375}
2024-09-18 14:55:35.973 [info] CURSOR LOG: restFunc done e265f9f4-13b4-4a44-a79f-c1dd186cbc75
2024-09-18 14:55:36.093 [info] CURSOR LOG: Done streaming cpp with id 6588aaf9-3ea5-4593-9a16-54a32c34614e
2024-09-18 14:55:36.093 [info] CPP RT LOG: Time taken for streaming cpp 916.39599609375 with request 6588aaf9-3ea5-4593-9a16-54a32c34614e
2024-09-18 14:55:36.093 [info] CPP Request Log with id 6588aaf9-3ea5-4593-9a16-54a32c34614e
2024-09-18 14:55:36.093 [info] =======>Model input 
2024-09-18 14:55:36.093 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:36.093 [info] =======>Debug stream time 402.68091499991715
2024-09-18 14:55:36.093 [info] =======>Debug ttft time 88.68525499850512
2024-09-18 14:55:36.093 [info] Average of latest 20 ttft time 101.35052119977772
2024-09-18 14:55:36.093 [info] Average of latest 20 stream time 309.6744646997191
2024-09-18 14:55:36.093 [info] Average of latest 20 total time NaN
2024-09-18 14:55:36.093 [info] Average of latest 20 client time 629.1945068359375
2024-09-18 14:55:36.093 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:36.093 [info] CPP RT LOG: All stats {"streamingtime":916.39599609375,"actualTtftFromStart":645.076171875,"timeTillServerRequest":56.976806640625,"requestToTtft":588.099365234375,"totalTime":973.32177734375}
2024-09-18 14:55:36.093 [info] CURSOR LOG: restFunc done 6588aaf9-3ea5-4593-9a16-54a32c34614e
2024-09-18 14:55:36.093 [info] CURSOR LOG: Done streaming cpp with id bdde7fe4-6c7e-4e27-b4d0-9a4912e3ec1e
2024-09-18 14:55:36.093 [info] CPP RT LOG: Time taken for streaming cpp 573.231201171875 with request bdde7fe4-6c7e-4e27-b4d0-9a4912e3ec1e
2024-09-18 14:55:36.094 [info] CPP Request Log with id bdde7fe4-6c7e-4e27-b4d0-9a4912e3ec1e
2024-09-18 14:55:36.094 [info] =======>Model input 
2024-09-18 14:55:36.094 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:36.094 [info] =======>Debug stream time 382.72636000066996
2024-09-18 14:55:36.094 [info] =======>Debug ttft time 82.11135200038552
2024-09-18 14:55:36.094 [info] Average of latest 20 ttft time 100.9725398497656
2024-09-18 14:55:36.094 [info] Average of latest 20 stream time 322.79856739975514
2024-09-18 14:55:36.094 [info] Average of latest 20 total time NaN
2024-09-18 14:55:36.094 [info] Average of latest 20 client time 635.281689453125
2024-09-18 14:55:36.094 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:36.094 [info] CPP RT LOG: All stats {"streamingtime":573.231201171875,"actualTtftFromStart":340.891357421875,"timeTillServerRequest":60.5771484375,"requestToTtft":280.314208984375,"totalTime":633.76708984375}
2024-09-18 14:55:36.094 [info] CURSOR LOG: restFunc done bdde7fe4-6c7e-4e27-b4d0-9a4912e3ec1e
2024-09-18 14:55:36.288 [info] CURSOR LOG: Done streaming cpp with id d0824552-e004-41cb-8985-b1d00ba8c2cb
2024-09-18 14:55:36.288 [info] CPP RT LOG: Time taken for streaming cpp 608.703369140625 with request d0824552-e004-41cb-8985-b1d00ba8c2cb
2024-09-18 14:55:36.296 [info] CPP Request Log with id d0824552-e004-41cb-8985-b1d00ba8c2cb
2024-09-18 14:55:36.296 [info] =======>Model input <｜begin▁of▁sentence｜>You are an intelligent programmer named CursorBot. You are an expert at coding. Your goal is to help your colleague finish a code change.

User: Help me finish a coding change. In particular, you will see a series of snippets from files I've recently viewed, the file I am editing, then a history of my recent codebase changes, then current compiler and linter errors. You will then rewrite the <code_to_rewrite>, to match what you think I would do next in the codebase. Note: I might have stopped in the middle of typing.

Here are some snippets of code I've recently looked at, roughly from oldest to newest. It's possible these aren't entirely relevant to my code change.
<recently_viewed_snippets>
<snippet>
(`CourseCatalog.java`)


import java.util.ArrayList;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

public class CourseCatalog {
    private Map<String, Course> courses;
    private Map<String, Student> students;
    private Map<String, Professor> professors;
    private List<Complaint> complaints;
    private Map<String, List<Course>> studentRegistrations;
    private Map<String, List<Course>> professorAssignments;

    public CourseCatalog() {
        this.courses = new HashMap<>();
        this.students = new HashMap<>();
        this.professors = new HashMap<>();
        this.complaints = new ArrayList<>();
        this.studentRegistrations = new HashMap<>();
        this.professorAssignments = new HashMap<>();
        initializeCourses();
        assignCoursesToProfessors();
    }

    private void initializeCourses() {
        // Semester 1 courses (no prerequisites)
        addCourse(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
        addCourse(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
        addCourse(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
        addCourse(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
        addCourse(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));

        // Semester 2 courses (no prerequisites)
        addCourse(new Course("BIO101", "Foundations of Biology", 4, 2, "Sriram K.", null, 300, "09:00-11:00"));
        addCourse(new Course("CSE102", "Data Structures and Algorithms", 4, 2, "Ojaswa Sharma", "CSE101", 300, "11:00-13:00"));
        addCourse(new Course("CSE112", "Computer Organisation", 4, 2, "Sujay Deb", null, 300, "14:00-16:00"));
        addCourse(new Course("CSE140", "Introduction to Intelligent Systems", 4, 2, "Jainendra Shukla", "CSE101", 300, "16:00-18:00"));
        addCourse(new Course("DES101", "Design Drawing and Visualization", 4, 2, "Anoop Ratn (V)", null, 300, "09:00-12:00"));
        addCourse(new Course("DES202", "Visual Design & Communication", 4, 2, "Anoop Ratn (V)", null, 300, "13:00-15:00"));
        addCourse(new Course("ECE113", "Basic Electronics", 4, 2, "Tammam Tillo", null, 300, "15:00-17:00"));
        addCourse(new Course("MTH201", "Probability and Statistics", 4, 2, "Subhajit Ghosechowdhury", null, 300, "09:00-11:00"));
        addCourse(new Course("SOC101", "Introduction to Sociology and Anthropology", 4, 2, "Deepak Prince", null, 300, "11:00-13:00"));
        addCourse(new Course("SSH101", "Critical Thinking and Readings in Social Sciences", 4, 2, "Aasim Khan", null, 300, "14:00-16:00"));
        addCourse(new Course("SSH101 (Priyadarshi)", "Critical Thinking and Readings in Social Sciences", 4, 2, "Priyadarshi", null, 300, "16:00-18:00"));
        addCourse(new Course("ECO223", "Money and Banking", 4, 2, "Kiriti Kanjilal", null, 300, "09:00-11:00"));

        // Semester 3 courses (some with prerequisites)
        addCourse(new Course("BIO211", "Cell Biology and Biochemistry", 4, 3, "Jaspreet Kaur", "BIO101", 70, "09:00-11:00"));
</snippet>
</recently_viewed_snippets>


Here is the file that I'm looking at (`Student.java`):
<file>
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

public class Student extends User {
    private List<Course> registeredCourses;
    private List<Course> completedCourses;
    private List<Complaint> complaints;
    private int totalCredits;
    private int currentSemester;
    private String branch;
    private double cgpa;
    private List<List<String>> completedCourse

<<<AREA_AROUND_CODE_TO_REWRITE_WILL_BE_INSERTED_HERE>>>
        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
        CourseTable.printCourseTable(availableCourses);
    }

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
        System.out.print("Enter the course code to register: ");
        String courseCode = scanner.nextLine();
        Course course = courseCatalog.getCourse(courseCode);
        
        if (course == null) {
            System.out.println("Invalid course code.");
            return;
        }

        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return;
        }
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return;
        }
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return;
        }

        registeredCourses.add(course);
        totalCredits += course.getCredits();
        System.out.println("Successfully registered for " + course.getTitle());
    }

    public void viewRegisteredCourses() {
        System.out.println("#=---- View Registered Courses ----=#");
        System.out.println("#=---- Registered Courses ----=#");
        CourseTable.printCourseTable(registeredCourses);
    }

    public void viewCompletedCourses() {
        System.out.println("#=---- View Completed Courses ----=#");
        
        for (int semester : completedCoursesBySemester.keySet()) {
            System.out.println("\nSemester " + semester + " Courses:");
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("%-10s | %-50s | %-10s | %-5s%n", "Code", "Course Name", "Credits", "Grade");
            System.out.println("-------------------------------------------------------------------------------------");
            
            List<Course> semesterCourses = completedCoursesBySemester.get(semester);
            for (Course course : semesterCourses) {
                System.out.printf("%-10s | %-50s | %-10d | %-5s%n", 
                    course.getCode(), course.getTitle(), course.getCredits(), course.getGrade());
            }
            
            double sgpa = calculateSGPA(semesterCourses);
            System.out.println("-------------------------------------------------------------------------------------");
            System.out.printf("Semester GPA: %.2f%n", sgpa);
        }
        
        double cgpa = calculateCGPA();
        System.out.println("\nCumulative GPA: " + String.format("%.2f", cgpa));
    }

    private double calculateSGPA(List<Course> courses) {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : courses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    private double calculateCGPA() {
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalCredits > 0 ? totalGradePoints / totalCredits : 0;
    }

    public String getAcademicStanding() {
        double gpa = calculateGPA();
        if (gpa >= 8) return "Excellent";
        if (gpa >= 7) return "Good";
        if (gpa >= 6) return "Satisfactory";
        if (gpa >= 5) return "Fair";
        return "Poor";
    }

    private double calculateGPA() {
        if (completedCourses.isEmpty()) return 0.0;
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        return totalGradePoints / totalCredits;
    }

    public void dropCourse(Scanner scanner) {
        System.out.println("#=---- Drop Course ----=#");
        viewRegisteredCourses();
        System.out.print("Enter the course code to drop: ");
        String courseCode = scanner.nextLine();
        
        for (Course course : registeredCourses) {
            if (course.getCode().equals(courseCode)) {
                registeredCourses.remove(course);
                totalCredits -= course.getCredits();
                System.out.println("Successfully dropped " + course.getTitle());
                return;
            }
        }
        System.out.println("Course not found in your registered courses.");
    }

    public void trackProgress() {
        System.out.println("#=---- Track Progress ----=#");
        double totalGradePoints = 0;
        int totalCredits = 0;
        for (Course course : completedCourses) {
            totalGradePoints += course.getGradePoints() * course.getCredits();
            totalCredits += course.getCredits();
        }
        cgpa = totalCredits > 0 ? totalGradePoints / totalCredits : 0;
        System.out.println("CGPA: " + String.format("%.2f", cgpa));
        System.out.println("Completed Courses:");
        viewCompletedCourses();
    }
    public void updateGrade(Course course, String grade) {
        if (registeredCourses.contains(course)) {
            course.setGrade(grade);
            registeredCourses.remove(course);
            completedCourses.add(course);
        } else {
            System.out.println("Student is not registered for this course.");
        }
    }
    public void submitComplaint(Scanner scanner) {
        System.out.println("#=---- Submit Complaint ----=#");
        System.out.print("Enter the description of your complaint: ");
        String description = scanner.nextLine();
        Complaint complaint = new Complaint(description);
        complaints.add(complaint);
        System.out.println("Complaint submitted. Status: " + complaint.getStatus());
    }

    public void viewSchedule() {
        System.out.println("#=---- View Schedule ----=#");
        System.out.println("Weekly Schedule:");
        for (Course course : registeredCourses) {
            System.out.println(course.getCode() + " - " + course.getTitle());
            System.out.println("  Professor: " + course.getAssignedProfessor().getName());
            System.out.println("  Schedule: " + course.getSchedule());
            System.out.println("  Location: " + course.getLocation());
            System.out.println();
        }
    }

    private boolean hasCompletedCourse(String courseCode) {
        for (Course course : completedCourses) {
            if (course.getCode().equals(courseCode)) {
                return true;
            }
        }
        return false;
    }

    private boolean meetsPrerequisites(Course course) {
        for (String prereqCode : course.getPrerequisites()) {
            boolean hasCompleted = false;
            for (Course completedCourse : completedCourses) {
                if (completedCourse.getCode().equals(prereqCode)) {
                    hasCompleted = true;
                    break;
                }
            }
            if (!hasCompleted) {
                return false;
            }
        }
        return true;
    }

    public String getBranch() {
        return branch;
    }

    public void setBranch(String branch) {
        this.branch = branch;
    }
    @Override
    public boolean logout() {
        System.out.println("#=---- Logging Out ----=#");

        return true;
    }

    public boolean canRegisterForCourse(Course course) {
        // Check if the course is for the current semester
        if (course.getSemester() != currentSemester) {
            System.out.println("This course is not available for your current semester.");
            return false;
        }

        // Check prerequisites
        if (!meetsPrerequisites(course)) {
            System.out.println("You don't meet the prerequisites for this course.");
            return false;
        }

        // Check if registering for this course would exceed the credit limit
        int totalCredits = 0;
        for (Course registeredCourse : registeredCourses) {
            totalCredits += registeredCourse.getCredits();
        }
        if (totalCredits + course.getCredits() > 20) {
            System.out.println("Registering for this course would exceed the credit limit.");
            return false;
        }

        // Check if the student is already registered for this course
        for (Course registeredCourse : registeredCourses) {
            if (registeredCourse.getCode().equals(course.getCode())) {
                System.out.println("You are already registered for this course.");
                return false;
            }
        }

        return true;
    }

    public void registerForCourse(Course course) {
        registeredCourses.add(course);
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
    }

    public void setEmail(String email) {
        this.email = email;
    }
}
</file>


Here is my recent series of edits from oldest to newest.
<diff_history>
Student.java
15-|    private Map<String, List<Course>> completedCourses;
15+|    private List<Course> completedCourses;
then
25-|        this.completedCourses= new HashMap<>();
25+|        this.completedCourses= new ArrayList<>();
then
30-|        completedCourses
30+|        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
31+|        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
32+|        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
33+|        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
34+|        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
then
25-|        this.completedCourses= new ArrayList<>();
25+|        this.completedCourseCodes = new ArrayList<>();
then
30-|        completedCourses.add(new Course("MTH100", "Linear Algebra", 4, 1, "Samaresh Chatterjee (V)", null, 600, "09:00-11:00"));
31-|        completedCourses.add(new Course("CSE101", "Introduction to Programming", 4, 1, "B N Jain (V)", null, 600, "11:00-13:00"));
32-|        completedCourses.add(new Course("DES102", "Introduction to HCI", 4, 1, "Rajiv Ratn Shah", null, 600, "14:00-16:00"));
33-|        completedCourses.add(new Course("ECE111", "Digital Circuits", 4, 1, "Pravesh Biyani", null, 600, "16:00-18:00"));
34-|        completedCourses.add(new Course("COM101", "Communication Skills", 2, 1, "Payel C Mukherjee (V)", null, 600, "09:00-11:00"));
30+|       completedCourseCodes.add("MTH100");
31+|       completedCourseCodes.add("CSE101");
32+|       completedCourseCodes.add("DES102");
33+|       completedCourseCodes.add("ECE111");
34+|       completedCourseCodes.add("COM101");
</diff_history>



<area_around_code_to_rewrite>
    public Student(String name, String email, String id, String branch) {
        super(name, email, id);
        this.registeredCourses = new ArrayList<>();
        this.completedCourses = new ArrayList<>();
        this.complaints = new ArrayList<>();
        this.totalCredits = 0;
        this.branch = branch;
        this.currentSemester = 3;
        this.completedCourseCodes = new ArrayList<>();
        completedcourses(name);
    }


<code_to_rewrite>
    public void completedcourses(String name){
        completedCourseCodes.add("M
    }

</code_to_rewrite>
    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- View Available Courses ----=#");
        System.out.print("Enter the semester to view courses for: ");
        int semester = scanner.nextInt();
        scanner.nextLine(); // Consume newline

</area_around_code_to_rewrite>


<diff_history>
Student.java
30-|       completedCourseCodes.add("MTH100");
31-|       completedCourseCodes.add("CSE101");
32-|       completedCourseCodes.add("DES102");
33-|       completedCourseCodes.add("ECE111");
34-|       completedCourseCodes.add("COM101");
30+|        completedCourseCodes.add("M
31 |    }
32 |
33 |    public void viewAvailableCourses(Scanner scanner, CourseCatalog courseCatalog) {
34 |        System.out.println("#=---- View Available Courses ----=#");
35 |        System.out.print("Enter the semester to view courses for: ");
36 |        int semester = scanner.nextInt();
37 |        scanner.nextLine(); // Consume newline
38 |        List<Course> availableCourses = courseCatalog.getCoursesForSemester(semester);
39 |        System.out.println("#=---- Available Courses for Semester " + semester + " ----=#");
40 |        CourseTable.printCourseTable(availableCourses);
41 |    }
42 |
43 |    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
44 |        System.out.println("#=---- Register for Course ----=#");
45 |        viewAvailableCourses(scanner, courseCatalog);
46 |        System.out.print("Enter the course code to register: ");
47 |        String courseCode = scanner.nextLine();
48 |        Course course = courseCatalog.getCourse(courseCode);
49 |        
50 |        if (course == null) {
55-|            System.out.println("Invalid course code.");
51+|            System.out.println("Invalid course code.");
52+|            return;
53+|        }
54+|
55+|        if (course.getSemester() != currentSemester) {
56+|            System.out.println("This course is not available for your current semester.");
</diff_history>

Now, continue where I left off and finish my change by rewriting "code_to_rewrite":




Assistant: 
2024-09-18 14:55:36.296 [info] =======>Model output 
    public void completedcourses(String name){
        completedCourseCodes.add("MTH100");
        completedCourseCodes.add("CSE101");
        completedCourseCodes.add("DES102");
        completedCourseCodes.add("ECE111");
        completedCourseCodes.add("COM101");
    }

2024-09-18 14:55:36.296 [info] =======>Debug stream time 424.37883299961686
2024-09-18 14:55:36.296 [info] =======>Debug ttft time 105.78295499831438
2024-09-18 14:55:36.297 [info] Average of latest 20 ttft time 102.84465544968843
2024-09-18 14:55:36.297 [info] Average of latest 20 stream time 339.043860249687
2024-09-18 14:55:36.297 [info] Average of latest 20 total time NaN
2024-09-18 14:55:36.297 [info] Average of latest 20 client time 646.6224487304687
2024-09-18 14:55:36.297 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:36.297 [info] CPP RT LOG: All stats {"streamingtime":608.703369140625,"actualTtftFromStart":351.40478515625,"timeTillServerRequest":58.5107421875,"requestToTtft":292.89404296875,"totalTime":667.177734375}
2024-09-18 14:55:36.297 [info] CURSOR LOG: restFunc done d0824552-e004-41cb-8985-b1d00ba8c2cb
2024-09-18 14:55:37.385 [info] CURSOR LOG: restFunc initiated 69c72109-881e-4487-9d72-bd7fb3e31144
2024-09-18 14:55:37.682 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:37.682 [info] CURSOR LOG: restFunc done 69c72109-881e-4487-9d72-bd7fb3e31144
2024-09-18 14:55:37.718 [info] CURSOR LOG: restFunc initiated 905246d9-344f-4f6d-8a39-21d561862ddf
2024-09-18 14:55:37.881 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:37.881 [info] CURSOR LOG: restFunc done 905246d9-344f-4f6d-8a39-21d561862ddf
2024-09-18 14:55:37.914 [info] CURSOR LOG: restFunc initiated 6879b43f-c5c5-450c-9b3b-775fbbc83580
2024-09-18 14:55:38.081 [info] CURSOR LOG: restFunc initiated e0a28adc-f846-45b9-910b-607734cb5587
2024-09-18 14:55:38.238 [info] CURSOR LOG: restFunc initiated 0a11c2cb-54ef-4d46-8d11-97e5398c9d2a
2024-09-18 14:55:38.414 [info] CURSOR LOG: restFunc initiated 0b4ff0f9-3462-45b9-8c24-b6033b976d23
2024-09-18 14:55:38.534 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:38.550 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:38.633 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:38.640 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:38.726 [info] CURSOR LOG: Done streaming cpp with id 6879b43f-c5c5-450c-9b3b-775fbbc83580
2024-09-18 14:55:38.726 [info] CPP RT LOG: Time taken for streaming cpp 811.987548828125 with request 6879b43f-c5c5-450c-9b3b-775fbbc83580
2024-09-18 14:55:38.727 [info] CPP Request Log with id 6879b43f-c5c5-450c-9b3b-775fbbc83580
2024-09-18 14:55:38.727 [info] =======>Model input 
2024-09-18 14:55:38.727 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:55:38.727 [info] =======>Debug stream time 623.0625209994614
2024-09-18 14:55:38.727 [info] =======>Debug ttft time 94.13454499840736
2024-09-18 14:55:38.727 [info] Average of latest 20 ttft time 100.05115099968388
2024-09-18 14:55:38.727 [info] Average of latest 20 stream time 361.1535402996466
2024-09-18 14:55:38.727 [info] Average of latest 20 total time NaN
2024-09-18 14:55:38.727 [info] Average of latest 20 client time 669.205859375
2024-09-18 14:55:38.727 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:38.727 [info] CPP RT LOG: All stats {"streamingtime":811.987548828125,"actualTtftFromStart":336.583740234375,"timeTillServerRequest":52.18212890625,"requestToTtft":284.401611328125,"totalTime":864.120849609375}
2024-09-18 14:55:38.727 [info] CURSOR LOG: restFunc done 6879b43f-c5c5-450c-9b3b-775fbbc83580
2024-09-18 14:55:38.952 [info] CURSOR LOG: Done streaming cpp with id e0a28adc-f846-45b9-910b-607734cb5587
2024-09-18 14:55:38.952 [info] CPP RT LOG: Time taken for streaming cpp 871.92822265625 with request e0a28adc-f846-45b9-910b-607734cb5587
2024-09-18 14:55:38.952 [info] CPP Request Log with id e0a28adc-f846-45b9-910b-607734cb5587
2024-09-18 14:55:38.952 [info] =======>Model input 
2024-09-18 14:55:38.952 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Sanya")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:55:38.952 [info] =======>Debug stream time 672.7504629995674
2024-09-18 14:55:38.952 [info] =======>Debug ttft time 121.87820999883115
2024-09-18 14:55:38.952 [info] Average of latest 20 ttft time 101.86792919961735
2024-09-18 14:55:38.953 [info] Average of latest 20 stream time 385.2021370996721
2024-09-18 14:55:38.953 [info] Average of latest 20 total time NaN
2024-09-18 14:55:38.953 [info] Average of latest 20 client time 687.17548828125
2024-09-18 14:55:38.953 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:38.953 [info] CPP RT LOG: All stats {"streamingtime":871.92822265625,"actualTtftFromStart":374.579345703125,"timeTillServerRequest":56.38720703125,"requestToTtft":318.192138671875,"totalTime":928.26416015625}
2024-09-18 14:55:38.953 [info] CURSOR LOG: restFunc done e0a28adc-f846-45b9-910b-607734cb5587
2024-09-18 14:55:39.063 [info] CURSOR LOG: Done streaming cpp with id 0a11c2cb-54ef-4d46-8d11-97e5398c9d2a
2024-09-18 14:55:39.063 [info] CPP RT LOG: Time taken for streaming cpp 825.5087890625 with request 0a11c2cb-54ef-4d46-8d11-97e5398c9d2a
2024-09-18 14:55:39.063 [info] CPP Request Log with id 0a11c2cb-54ef-4d46-8d11-97e5398c9d2a
2024-09-18 14:55:39.063 [info] =======>Model input 
2024-09-18 14:55:39.063 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:55:39.063 [info] =======>Debug stream time 636.5042439997196
2024-09-18 14:55:39.063 [info] =======>Debug ttft time 95.09961500018835
2024-09-18 14:55:39.063 [info] Average of latest 20 ttft time 102.17566074961796
2024-09-18 14:55:39.063 [info] Average of latest 20 stream time 411.02267274959013
2024-09-18 14:55:39.063 [info] Average of latest 20 total time NaN
2024-09-18 14:55:39.063 [info] Average of latest 20 client time 711.1083251953125
2024-09-18 14:55:39.063 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:39.063 [info] CPP RT LOG: All stats {"streamingtime":825.5087890625,"actualTtftFromStart":331.0244140625,"timeTillServerRequest":56.81591796875,"requestToTtft":274.20849609375,"totalTime":882.280517578125}
2024-09-18 14:55:39.063 [info] CURSOR LOG: restFunc done 0a11c2cb-54ef-4d46-8d11-97e5398c9d2a
2024-09-18 14:55:39.183 [info] CURSOR LOG: Done streaming cpp with id 0b4ff0f9-3462-45b9-8c24-b6033b976d23
2024-09-18 14:55:39.183 [info] CPP RT LOG: Time taken for streaming cpp 769.28173828125 with request 0b4ff0f9-3462-45b9-8c24-b6033b976d23
2024-09-18 14:55:39.183 [info] CPP Request Log with id 0b4ff0f9-3462-45b9-8c24-b6033b976d23
2024-09-18 14:55:39.183 [info] =======>Model input 
2024-09-18 14:55:39.183 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:55:39.183 [info] =======>Debug stream time 579.815741000697
2024-09-18 14:55:39.183 [info] =======>Debug ttft time 84.13851800002158
2024-09-18 14:55:39.186 [info] Average of latest 20 ttft time 102.18102264953777
2024-09-18 14:55:39.186 [info] Average of latest 20 stream time 427.4738693496212
2024-09-18 14:55:39.186 [info] Average of latest 20 total time NaN
2024-09-18 14:55:39.186 [info] Average of latest 20 client time 718.435302734375
2024-09-18 14:55:39.186 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:39.186 [info] CPP RT LOG: All stats {"streamingtime":769.28173828125,"actualTtftFromStart":325.0166015625,"timeTillServerRequest":53.7822265625,"requestToTtft":271.234375,"totalTime":823.038330078125}
2024-09-18 14:55:39.186 [info] CURSOR LOG: restFunc done 0b4ff0f9-3462-45b9-8c24-b6033b976d23
2024-09-18 14:55:40.040 [info] CURSOR LOG: restFunc initiated 846acd36-6310-4f57-bfc3-1d6b8da19b22
2024-09-18 14:55:40.927 [info] CURSOR LOG: Done streaming cpp with id 846acd36-6310-4f57-bfc3-1d6b8da19b22
2024-09-18 14:55:40.927 [info] CPP RT LOG: Time taken for streaming cpp 886.65478515625 with request 846acd36-6310-4f57-bfc3-1d6b8da19b22
2024-09-18 14:55:40.927 [info] CPP Request Log with id 846acd36-6310-4f57-bfc3-1d6b8da19b22
2024-09-18 14:55:40.927 [info] =======>Model input 
2024-09-18 14:55:40.927 [info] =======>Model output 
    public void completedcourses(String name){
        if(name.equals("Amit Kumar")){
            completedCourseCodes.add("MTH100");
            completedCourseCodes.add("CSE101");
            completedCourseCodes.add("DES102");
            completedCourseCodes.add("ECE111");
            completedCourseCodes.add("COM101");
        }
    }

2024-09-18 14:55:40.927 [info] =======>Debug stream time 561.8834359999746
2024-09-18 14:55:40.927 [info] =======>Debug ttft time 95.31905999965966
2024-09-18 14:55:40.928 [info] Average of latest 20 ttft time 97.9385682995431
2024-09-18 14:55:40.928 [info] Average of latest 20 stream time 435.2763817996718
2024-09-18 14:55:40.928 [info] Average of latest 20 total time NaN
2024-09-18 14:55:40.928 [info] Average of latest 20 client time 725.9361694335937
2024-09-18 14:55:40.928 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:40.928 [info] CPP RT LOG: All stats {"streamingtime":886.65478515625,"actualTtftFromStart":486.1552734375,"timeTillServerRequest":64.96044921875,"requestToTtft":421.19482421875,"totalTime":951.56884765625}
2024-09-18 14:55:40.928 [info] CURSOR LOG: restFunc done 846acd36-6310-4f57-bfc3-1d6b8da19b22
2024-09-18 14:55:42.198 [info] CURSOR LOG: restFunc initiated 659560a7-e916-4ee7-8f7d-201feda72964
2024-09-18 14:55:42.436 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:42.437 [info] CURSOR LOG: restFunc done 659560a7-e916-4ee7-8f7d-201feda72964
2024-09-18 14:55:42.488 [info] CURSOR LOG: restFunc initiated 1a0ed218-0256-4e72-b67a-dfc61df5db50
2024-09-18 14:55:42.728 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:42.728 [info] CURSOR LOG: restFunc done 1a0ed218-0256-4e72-b67a-dfc61df5db50
2024-09-18 14:55:42.765 [info] CURSOR LOG: restFunc initiated 2b69b514-4a04-430b-9c3f-f61a267a1967
2024-09-18 14:55:42.963 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:42.963 [info] CURSOR LOG: restFunc done 2b69b514-4a04-430b-9c3f-f61a267a1967
2024-09-18 14:55:42.997 [info] CURSOR LOG: restFunc initiated bcec99b5-5124-4b7d-8cc6-a1f514f8845e
2024-09-18 14:55:43.154 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:43.154 [info] CURSOR LOG: restFunc done bcec99b5-5124-4b7d-8cc6-a1f514f8845e
2024-09-18 14:55:43.190 [info] CURSOR LOG: restFunc initiated 5915e245-890e-461d-ae97-650bf1cef18c
2024-09-18 14:55:43.341 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:43.341 [info] CURSOR LOG: restFunc done 5915e245-890e-461d-ae97-650bf1cef18c
2024-09-18 14:55:43.378 [info] CURSOR LOG: restFunc initiated 6f85af56-e74e-41f6-9532-5b07737f4d97
2024-09-18 14:55:43.422 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:43.443 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:43.465 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:43.465 [info] CURSOR LOG: restFunc done 6f85af56-e74e-41f6-9532-5b07737f4d97
2024-09-18 14:55:43.520 [info] CURSOR LOG: restFunc initiated 0e4a78c8-eb03-4c7d-a57a-6dcca2ec1b1a
2024-09-18 14:55:43.707 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:43.728 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:43.795 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:43.795 [info] CURSOR LOG: restFunc done 0e4a78c8-eb03-4c7d-a57a-6dcca2ec1b1a
2024-09-18 14:55:43.847 [info] CURSOR LOG: restFunc initiated 8c088110-1cd3-4332-86f7-e4d98e461285
2024-09-18 14:55:43.856 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:43.869 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:44.002 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:44.002 [info] CURSOR LOG: restFunc done 8c088110-1cd3-4332-86f7-e4d98e461285
2024-09-18 14:55:44.013 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:44.054 [info] CURSOR LOG: restFunc initiated 88600165-22d3-43ab-a358-4e27785bd517
2024-09-18 14:55:44.063 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:44.440 [info] CURSOR LOG: Done streaming cpp with id 88600165-22d3-43ab-a358-4e27785bd517
2024-09-18 14:55:44.440 [info] CPP RT LOG: Time taken for streaming cpp 386.19677734375 with request 88600165-22d3-43ab-a358-4e27785bd517
2024-09-18 14:55:44.440 [info] CPP Request Log with id 88600165-22d3-43ab-a358-4e27785bd517
2024-09-18 14:55:44.440 [info] =======>Model input 
2024-09-18 14:55:44.440 [info] =======>Model output 
    private double cgpa;
    private List<List<String>> completedCourseCodes;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:44.440 [info] =======>Debug stream time 186.52029100060463
2024-09-18 14:55:44.440 [info] =======>Debug ttft time 93.30760399997234
2024-09-18 14:55:44.441 [info] Average of latest 20 ttft time 97.10582529958337
2024-09-18 14:55:44.441 [info] Average of latest 20 stream time 438.66191289974375
2024-09-18 14:55:44.441 [info] Average of latest 20 total time NaN
2024-09-18 14:55:44.441 [info] Average of latest 20 client time 709.4968505859375
2024-09-18 14:55:44.441 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:44.441 [info] CPP RT LOG: All stats {"streamingtime":386.19677734375,"actualTtftFromStart":341.26171875,"timeTillServerRequest":51.54345703125,"requestToTtft":289.71826171875,"totalTime":437.69287109375}
2024-09-18 14:55:44.441 [info] CURSOR LOG: restFunc done 88600165-22d3-43ab-a358-4e27785bd517
2024-09-18 14:55:44.541 [info] CURSOR LOG: restFunc initiated 243506a9-e12e-45ee-a843-82f32171f433
2024-09-18 14:55:44.759 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:44.759 [info] CURSOR LOG: restFunc done 243506a9-e12e-45ee-a843-82f32171f433
2024-09-18 14:55:44.813 [info] CURSOR LOG: restFunc initiated 049a35e9-902d-446b-ad27-0385511a435e
2024-09-18 14:55:44.937 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:44.937 [info] CURSOR LOG: restFunc done 049a35e9-902d-446b-ad27-0385511a435e
2024-09-18 14:55:44.988 [info] CURSOR LOG: restFunc initiated 7765719b-6208-49f1-aebb-9a0ada390bc7
2024-09-18 14:55:45.119 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:45.119 [info] CURSOR LOG: restFunc done 7765719b-6208-49f1-aebb-9a0ada390bc7
2024-09-18 14:55:45.172 [info] CURSOR LOG: restFunc initiated 3660c3a8-c282-4d38-b59a-d204241e5a93
2024-09-18 14:55:45.288 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:45.289 [info] CURSOR LOG: restFunc done 3660c3a8-c282-4d38-b59a-d204241e5a93
2024-09-18 14:55:45.341 [info] CURSOR LOG: restFunc initiated ef4ec4cc-a3e8-4865-b4c5-65e5830626e0
2024-09-18 14:55:45.469 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:45.469 [info] CURSOR LOG: restFunc done ef4ec4cc-a3e8-4865-b4c5-65e5830626e0
2024-09-18 14:55:45.520 [info] CURSOR LOG: restFunc initiated 9b2ba960-f6a0-49c4-9e53-4db0e7de5b20
2024-09-18 14:55:45.794 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:45.794 [info] CURSOR LOG: restFunc done 9b2ba960-f6a0-49c4-9e53-4db0e7de5b20
2024-09-18 14:55:45.847 [info] CURSOR LOG: restFunc initiated fde0c302-b52f-4a8c-b7f8-32a87af55200
2024-09-18 14:55:45.980 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:45.980 [info] CURSOR LOG: restFunc done fde0c302-b52f-4a8c-b7f8-32a87af55200
2024-09-18 14:55:46.031 [info] CURSOR LOG: restFunc initiated c808dac7-2a4f-4ca9-8270-dd6766a0d244
2024-09-18 14:55:46.161 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:46.161 [info] CURSOR LOG: restFunc done c808dac7-2a4f-4ca9-8270-dd6766a0d244
2024-09-18 14:55:46.214 [info] CURSOR LOG: restFunc initiated 8f16ad93-07c5-425a-b780-fbf7d4320968
2024-09-18 14:55:46.324 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:46.324 [info] CURSOR LOG: restFunc done 8f16ad93-07c5-425a-b780-fbf7d4320968
2024-09-18 14:55:46.374 [info] CURSOR LOG: restFunc initiated cbba05cb-1aa6-4b92-8e41-2986fa94fec1
2024-09-18 14:55:46.469 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:46.469 [info] CURSOR LOG: restFunc done cbba05cb-1aa6-4b92-8e41-2986fa94fec1
2024-09-18 14:55:46.521 [info] CURSOR LOG: restFunc initiated ddd27769-c13f-49ea-abd1-e35896f1c6de
2024-09-18 14:55:46.765 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:46.765 [info] CURSOR LOG: restFunc done ddd27769-c13f-49ea-abd1-e35896f1c6de
2024-09-18 14:55:46.817 [info] CURSOR LOG: restFunc initiated 337c8ca0-2948-4cf9-9d9e-94b7121426c7
2024-09-18 14:55:46.978 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:46.978 [info] CURSOR LOG: restFunc done 337c8ca0-2948-4cf9-9d9e-94b7121426c7
2024-09-18 14:55:47.030 [info] CURSOR LOG: restFunc initiated 24c526b9-61aa-4b93-b3b2-4909125b2199
2024-09-18 14:55:47.128 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:47.128 [info] CURSOR LOG: restFunc done 24c526b9-61aa-4b93-b3b2-4909125b2199
2024-09-18 14:55:47.180 [info] CURSOR LOG: restFunc initiated f935e628-d0a4-44f0-848e-f9889fb77869
2024-09-18 14:55:47.297 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:47.297 [info] CURSOR LOG: restFunc done f935e628-d0a4-44f0-848e-f9889fb77869
2024-09-18 14:55:47.349 [info] CURSOR LOG: restFunc initiated 11db7c1d-3a45-4919-83a4-3b213c608a14
2024-09-18 14:55:47.466 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:47.466 [info] CURSOR LOG: restFunc done 11db7c1d-3a45-4919-83a4-3b213c608a14
2024-09-18 14:55:47.517 [info] CURSOR LOG: restFunc initiated 98c8201e-6749-425c-99af-bb68939362bb
2024-09-18 14:55:47.638 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:47.638 [info] CURSOR LOG: restFunc done 98c8201e-6749-425c-99af-bb68939362bb
2024-09-18 14:55:47.690 [info] CURSOR LOG: restFunc initiated dd20c2ea-3710-4b6c-96ce-f99f8c664db7
2024-09-18 14:55:47.828 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:47.828 [info] CURSOR LOG: restFunc done dd20c2ea-3710-4b6c-96ce-f99f8c664db7
2024-09-18 14:55:47.883 [info] CURSOR LOG: restFunc initiated 8fd677e4-8c78-45bb-8421-7c6ec1de5224
2024-09-18 14:55:48.001 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:48.001 [info] CURSOR LOG: restFunc done 8fd677e4-8c78-45bb-8421-7c6ec1de5224
2024-09-18 14:55:48.055 [info] CURSOR LOG: restFunc initiated 5cf98022-607b-4177-9615-331761099c26
2024-09-18 14:55:48.236 [info] CURSOR LOG: restFunc initiated 48aa73e3-1cbc-432e-bc92-5808049b69b2
2024-09-18 14:55:48.419 [info] CURSOR LOG: restFunc initiated c289f314-561b-42ca-97dc-b49ac30ca1a4
2024-09-18 14:55:48.558 [info] CURSOR LOG: Done streaming cpp with id 5cf98022-607b-4177-9615-331761099c26
2024-09-18 14:55:48.558 [info] CPP RT LOG: Time taken for streaming cpp 504.078857421875 with request 5cf98022-607b-4177-9615-331761099c26
2024-09-18 14:55:48.559 [info] CPP Request Log with id 5cf98022-607b-4177-9615-331761099c26
2024-09-18 14:55:48.559 [info] =======>Model input 
2024-09-18 14:55:48.559 [info] =======>Model output 
    private double cgpa;
    private List<String> completedCourseCodes;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:48.559 [info] =======>Debug stream time 233.43486000038683
2024-09-18 14:55:48.559 [info] =======>Debug ttft time 93.67008900083601
2024-09-18 14:55:48.559 [info] Average of latest 20 ttft time 97.02670434955508
2024-09-18 14:55:48.559 [info] Average of latest 20 stream time 428.6060329497792
2024-09-18 14:55:48.559 [info] Average of latest 20 total time NaN
2024-09-18 14:55:48.559 [info] Average of latest 20 client time 694.4068481445313
2024-09-18 14:55:48.559 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:48.559 [info] CPP RT LOG: All stats {"streamingtime":504.078857421875,"actualTtftFromStart":349.541015625,"timeTillServerRequest":53.7275390625,"requestToTtft":295.8134765625,"totalTime":557.7646484375}
2024-09-18 14:55:48.559 [info] CURSOR LOG: restFunc done 5cf98022-607b-4177-9615-331761099c26
2024-09-18 14:55:48.602 [info] CURSOR LOG: restFunc initiated d31dda7a-23e9-454a-b353-044c35fb60cb
2024-09-18 14:55:48.727 [info] CURSOR LOG: Done streaming cpp with id 48aa73e3-1cbc-432e-bc92-5808049b69b2
2024-09-18 14:55:48.727 [info] CPP RT LOG: Time taken for streaming cpp 491.68310546875 with request 48aa73e3-1cbc-432e-bc92-5808049b69b2
2024-09-18 14:55:48.727 [info] CPP Request Log with id 48aa73e3-1cbc-432e-bc92-5808049b69b2
2024-09-18 14:55:48.727 [info] =======>Model input 
2024-09-18 14:55:48.727 [info] =======>Model output 
    private double cgpa;
    private List<String> completedCourseCodes;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:48.727 [info] =======>Debug stream time 289.65132499858737
2024-09-18 14:55:48.727 [info] =======>Debug ttft time 111.98687299899757
2024-09-18 14:55:48.727 [info] Average of latest 20 ttft time 92.64938489953056
2024-09-18 14:55:48.727 [info] Average of latest 20 stream time 414.1749340497889
2024-09-18 14:55:48.727 [info] Average of latest 20 total time NaN
2024-09-18 14:55:48.727 [info] Average of latest 20 client time 679.96435546875
2024-09-18 14:55:48.727 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:48.728 [info] CPP RT LOG: All stats {"streamingtime":491.68310546875,"actualTtftFromStart":389.763427734375,"timeTillServerRequest":65.677001953125,"requestToTtft":324.08642578125,"totalTime":557.33349609375}
2024-09-18 14:55:48.728 [info] CURSOR LOG: restFunc done 48aa73e3-1cbc-432e-bc92-5808049b69b2
2024-09-18 14:55:48.738 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:48.738 [info] CURSOR LOG: restFunc done c289f314-561b-42ca-97dc-b49ac30ca1a4
2024-09-18 14:55:48.753 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:48.753 [info] CURSOR LOG: restFunc done d31dda7a-23e9-454a-b353-044c35fb60cb
2024-09-18 14:55:48.792 [info] CURSOR LOG: restFunc initiated 9738fb22-107b-4a1d-ae53-15e24041d98b
2024-09-18 14:55:48.960 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:48.960 [info] CURSOR LOG: restFunc done 9738fb22-107b-4a1d-ae53-15e24041d98b
2024-09-18 14:55:49.001 [info] CURSOR LOG: restFunc initiated 643b7b2f-96dd-4c7f-a88d-72e294969ea8
2024-09-18 14:55:49.159 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:49.159 [info] CURSOR LOG: restFunc done 643b7b2f-96dd-4c7f-a88d-72e294969ea8
2024-09-18 14:55:49.194 [info] CURSOR LOG: restFunc initiated 407cfded-08e7-4632-8044-c61e7528cf7a
2024-09-18 14:55:49.336 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:49.336 [info] CURSOR LOG: restFunc done 407cfded-08e7-4632-8044-c61e7528cf7a
2024-09-18 14:55:49.375 [info] CURSOR LOG: restFunc initiated 11e6fa59-970e-472a-b25a-2d64fa5153ae
2024-09-18 14:55:49.424 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:49.466 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:49.633 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:49.671 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:49.671 [info] CURSOR LOG: restFunc done 11e6fa59-970e-472a-b25a-2d64fa5153ae
2024-09-18 14:55:49.874 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:49.884 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:49.895 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:50.015 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:50.016 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:55:50.547 [info] CURSOR LOG: restFunc initiated a1f99f45-4eee-44c4-8dce-a5e27ca514ec
2024-09-18 14:55:51.421 [info] CURSOR LOG: Done streaming cpp with id a1f99f45-4eee-44c4-8dce-a5e27ca514ec
2024-09-18 14:55:51.421 [info] CPP RT LOG: Time taken for streaming cpp 874.616943359375 with request a1f99f45-4eee-44c4-8dce-a5e27ca514ec
2024-09-18 14:55:51.422 [info] CPP Request Log with id a1f99f45-4eee-44c4-8dce-a5e27ca514ec
2024-09-18 14:55:51.422 [info] =======>Model input 
2024-09-18 14:55:51.422 [info] =======>Model output 
        this.currentSemester = 3;
        this.completedCourses= new HashMap<>();
        completedcourses(name);
    }
2024-09-18 14:55:51.422 [info] =======>Debug stream time 253.65061600133777
2024-09-18 14:55:51.422 [info] =======>Debug ttft time 189.4958680011332
2024-09-18 14:55:51.422 [info] Average of latest 20 ttft time 97.88612314956262
2024-09-18 14:55:51.422 [info] Average of latest 20 stream time 404.11558904983104
2024-09-18 14:55:51.422 [info] Average of latest 20 total time NaN
2024-09-18 14:55:51.422 [info] Average of latest 20 client time 691.6655639648437
2024-09-18 14:55:51.422 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:51.422 [info] CPP RT LOG: All stats {"streamingtime":874.616943359375,"actualTtftFromStart":895.629150390625,"timeTillServerRequest":54.390380859375,"requestToTtft":841.23876953125,"totalTime":928.97998046875}
2024-09-18 14:55:51.422 [info] CURSOR LOG: restFunc done a1f99f45-4eee-44c4-8dce-a5e27ca514ec
2024-09-18 14:55:51.599 [info] CURSOR LOG: restFunc initiated 3cb0b1ff-6492-4c77-909e-48c19d2aeb6f
2024-09-18 14:55:52.180 [info] CURSOR LOG: Done streaming cpp with id 3cb0b1ff-6492-4c77-909e-48c19d2aeb6f
2024-09-18 14:55:52.180 [info] CPP RT LOG: Time taken for streaming cpp 582.021240234375 with request 3cb0b1ff-6492-4c77-909e-48c19d2aeb6f
2024-09-18 14:55:52.180 [info] CPP Request Log with id 3cb0b1ff-6492-4c77-909e-48c19d2aeb6f
2024-09-18 14:55:52.180 [info] =======>Model input 
2024-09-18 14:55:52.180 [info] =======>Model output 
    private double cgpa;
    private List<String> completedCourseCodes;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:52.180 [info] =======>Debug stream time 249.45282899960876
2024-09-18 14:55:52.180 [info] =======>Debug ttft time 135.96084799990058
2024-09-18 14:55:52.181 [info] Average of latest 20 ttft time 99.21826844960451
2024-09-18 14:55:52.181 [info] Average of latest 20 stream time 395.47370469979944
2024-09-18 14:55:52.181 [info] Average of latest 20 total time NaN
2024-09-18 14:55:52.181 [info] Average of latest 20 client time 682.6543212890625
2024-09-18 14:55:52.181 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:52.181 [info] CPP RT LOG: All stats {"streamingtime":582.021240234375,"actualTtftFromStart":566.60595703125,"timeTillServerRequest":55.711669921875,"requestToTtft":510.894287109375,"totalTime":637.700439453125}
2024-09-18 14:55:52.181 [info] CURSOR LOG: restFunc done 3cb0b1ff-6492-4c77-909e-48c19d2aeb6f
2024-09-18 14:55:53.475 [info] CURSOR LOG: restFunc initiated 90d3507e-1c17-40f4-9076-b14b97ec34d7
2024-09-18 14:55:53.788 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:55:53.788 [info] CURSOR LOG: restFunc done 90d3507e-1c17-40f4-9076-b14b97ec34d7
2024-09-18 14:55:53.840 [info] CURSOR LOG: restFunc initiated 2fef3770-12dd-413a-9e58-e63b53a46138
2024-09-18 14:55:54.128 [info] CURSOR LOG: restFunc initiated e18ef719-a774-4f52-9b84-97fdd5c5d697
2024-09-18 14:55:54.268 [info] CURSOR LOG: Done streaming cpp with id 2fef3770-12dd-413a-9e58-e63b53a46138
2024-09-18 14:55:54.268 [info] CPP RT LOG: Time taken for streaming cpp 428.484375 with request 2fef3770-12dd-413a-9e58-e63b53a46138
2024-09-18 14:55:54.269 [info] CPP Request Log with id 2fef3770-12dd-413a-9e58-e63b53a46138
2024-09-18 14:55:54.269 [info] =======>Model input 
2024-09-18 14:55:54.269 [info] =======>Model output 
    private double cgpa;
    private List<String> completedCourseCodes;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:54.269 [info] =======>Debug stream time 233.6829189993441
2024-09-18 14:55:54.269 [info] =======>Debug ttft time 98.63983600027859
2024-09-18 14:55:54.269 [info] Average of latest 20 ttft time 99.8759565495886
2024-09-18 14:55:54.269 [info] Average of latest 20 stream time 388.33140429975464
2024-09-18 14:55:54.269 [info] Average of latest 20 total time NaN
2024-09-18 14:55:54.269 [info] Average of latest 20 client time 672.8352661132812
2024-09-18 14:55:54.269 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:54.269 [info] CPP RT LOG: All stats {"streamingtime":428.484375,"actualTtftFromStart":345.37255859375,"timeTillServerRequest":51.93798828125,"requestToTtft":293.4345703125,"totalTime":480.3740234375}
2024-09-18 14:55:54.269 [info] CURSOR LOG: restFunc done 2fef3770-12dd-413a-9e58-e63b53a46138
2024-09-18 14:55:54.534 [info] CURSOR LOG: restFunc initiated 077e74d6-e0ed-4fbe-b955-16d486d649a9
2024-09-18 14:55:54.558 [info] CURSOR LOG: Done streaming cpp with id e18ef719-a774-4f52-9b84-97fdd5c5d697
2024-09-18 14:55:54.558 [info] CPP RT LOG: Time taken for streaming cpp 430.424072265625 with request e18ef719-a774-4f52-9b84-97fdd5c5d697
2024-09-18 14:55:54.558 [info] CPP Request Log with id e18ef719-a774-4f52-9b84-97fdd5c5d697
2024-09-18 14:55:54.558 [info] =======>Model input 
2024-09-18 14:55:54.558 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:54.558 [info] =======>Debug stream time 233.86790299974382
2024-09-18 14:55:54.558 [info] =======>Debug ttft time 90.72738499939442
2024-09-18 14:55:54.558 [info] Average of latest 20 ttft time 99.5936367996037
2024-09-18 14:55:54.558 [info] Average of latest 20 stream time 381.5830681497231
2024-09-18 14:55:54.558 [info] Average of latest 20 total time NaN
2024-09-18 14:55:54.558 [info] Average of latest 20 client time 666.0637573242187
2024-09-18 14:55:54.558 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:54.558 [info] CPP RT LOG: All stats {"streamingtime":430.424072265625,"actualTtftFromStart":354.64892578125,"timeTillServerRequest":51.9453125,"requestToTtft":302.70361328125,"totalTime":482.333740234375}
2024-09-18 14:55:54.558 [info] CURSOR LOG: restFunc done e18ef719-a774-4f52-9b84-97fdd5c5d697
2024-09-18 14:55:54.928 [info] CURSOR LOG: Done streaming cpp with id 077e74d6-e0ed-4fbe-b955-16d486d649a9
2024-09-18 14:55:54.928 [info] CPP RT LOG: Time taken for streaming cpp 395.328125 with request 077e74d6-e0ed-4fbe-b955-16d486d649a9
2024-09-18 14:55:54.928 [info] CPP Request Log with id 077e74d6-e0ed-4fbe-b955-16d486d649a9
2024-09-18 14:55:54.928 [info] =======>Model input 
2024-09-18 14:55:54.929 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:55:54.929 [info] =======>Debug stream time 197.3222239986062
2024-09-18 14:55:54.929 [info] =======>Debug ttft time 77.20204999856651
2024-09-18 14:55:54.935 [info] Average of latest 20 ttft time 99.29436579952016
2024-09-18 14:55:54.935 [info] Average of latest 20 stream time 374.57712479969484
2024-09-18 14:55:54.935 [info] Average of latest 20 total time NaN
2024-09-18 14:55:54.935 [info] Average of latest 20 client time 659.5287475585938
2024-09-18 14:55:54.935 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:55:54.935 [info] CPP RT LOG: All stats {"streamingtime":395.328125,"actualTtftFromStart":329.160888671875,"timeTillServerRequest":56.668701171875,"requestToTtft":272.4921875,"totalTime":451.975830078125}
2024-09-18 14:55:54.935 [info] CURSOR LOG: restFunc done 077e74d6-e0ed-4fbe-b955-16d486d649a9
2024-09-18 14:56:01.527 [info] CURSOR LOG: restFunc initiated 7a29bff8-75ce-4094-9113-fb407c4fa355
2024-09-18 14:56:02.062 [info] CURSOR LOG: Done streaming cpp with id 7a29bff8-75ce-4094-9113-fb407c4fa355
2024-09-18 14:56:02.062 [info] CPP RT LOG: Time taken for streaming cpp 534.502197265625 with request 7a29bff8-75ce-4094-9113-fb407c4fa355
2024-09-18 14:56:02.063 [info] CPP Request Log with id 7a29bff8-75ce-4094-9113-fb407c4fa355
2024-09-18 14:56:02.063 [info] =======>Model input 
2024-09-18 14:56:02.063 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:56:02.063 [info] =======>Debug stream time 207.59376199916005
2024-09-18 14:56:02.063 [info] =======>Debug ttft time 84.28333299979568
2024-09-18 14:56:02.064 [info] Average of latest 20 ttft time 99.34564919956028
2024-09-18 14:56:02.064 [info] Average of latest 20 stream time 371.5730962497182
2024-09-18 14:56:02.064 [info] Average of latest 20 total time NaN
2024-09-18 14:56:02.064 [info] Average of latest 20 client time 663.564990234375
2024-09-18 14:56:02.064 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:56:02.064 [info] CPP RT LOG: All stats {"streamingtime":534.502197265625,"actualTtftFromStart":466.85595703125,"timeTillServerRequest":52.937744140625,"requestToTtft":413.918212890625,"totalTime":587.413330078125}
2024-09-18 14:56:02.064 [info] CURSOR LOG: restFunc done 7a29bff8-75ce-4094-9113-fb407c4fa355
2024-09-18 14:56:04.491 [info] CURSOR LOG: restFunc initiated 37a60d23-e4fd-4274-86a1-d39bab6f7324
2024-09-18 14:56:04.665 [info] CURSOR LOG: Error in streaming cpp [canceled] This operation was aborted
2024-09-18 14:56:04.665 [info] CURSOR LOG: restFunc done 37a60d23-e4fd-4274-86a1-d39bab6f7324
2024-09-18 14:56:04.702 [info] CURSOR LOG: restFunc initiated 37cdf9c9-6095-472a-a0a2-2f9043fda3fe
2024-09-18 14:56:05.197 [info] CURSOR LOG: Done streaming cpp with id 37cdf9c9-6095-472a-a0a2-2f9043fda3fe
2024-09-18 14:56:05.197 [info] CPP RT LOG: Time taken for streaming cpp 495.2890625 with request 37cdf9c9-6095-472a-a0a2-2f9043fda3fe
2024-09-18 14:56:05.198 [info] CPP Request Log with id 37cdf9c9-6095-472a-a0a2-2f9043fda3fe
2024-09-18 14:56:05.198 [info] =======>Model input 
2024-09-18 14:56:05.198 [info] =======>Model output 
    private double cgpa;
    private Map<Integer, List<Course>> completedCoursesBySemester;

    public Student(String name, String email, String id, String branch) {
2024-09-18 14:56:05.198 [info] =======>Debug stream time 206.4128109999001
2024-09-18 14:56:05.198 [info] =======>Debug ttft time 86.46845799870789
2024-09-18 14:56:05.198 [info] Average of latest 20 ttft time 99.5438502495177
2024-09-18 14:56:05.198 [info] Average of latest 20 stream time 365.83227589977906
2024-09-18 14:56:05.198 [info] Average of latest 20 total time NaN
2024-09-18 14:56:05.198 [info] Average of latest 20 client time 641.0400146484375
2024-09-18 14:56:05.198 [info] Average of latest 20 discrepencies NaN
2024-09-18 14:56:05.198 [info] CPP RT LOG: All stats {"streamingtime":495.2890625,"actualTtftFromStart":437.58837890625,"timeTillServerRequest":51.7822265625,"requestToTtft":385.80615234375,"totalTime":547.0419921875}
2024-09-18 14:56:05.198 [info] CURSOR LOG: restFunc done 37cdf9c9-6095-472a-a0a2-2f9043fda3fe
2024-09-18 14:56:05.338 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:56:05.408 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 14:57:43.546 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 14:57:43.546 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:05:24.712 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:05:24.713 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:05:24.713 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:05:24.713 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:06:36.286 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:06:37.015 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:07:36.391 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:07:36.419 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:08:36.168 [error] Error fetching public IP: [unavailable] getaddrinfo EAI_AGAIN api2.cursor.sh
2024-09-18 15:08:39.499 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:09:36.927 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:10:37.344 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:10:54.593 [info] CURSOR LOG: restFunc initiated 75c27eef-d032-4f5e-8b08-b962621d420c
2024-09-18 15:10:56.496 [info] CURSOR LOG: Done streaming cpp with id 75c27eef-d032-4f5e-8b08-b962621d420c
2024-09-18 15:10:56.496 [info] CPP RT LOG: Time taken for streaming cpp 1902.55908203125 with request 75c27eef-d032-4f5e-8b08-b962621d420c
2024-09-18 15:10:56.496 [info] CPP Request Log with id 75c27eef-d032-4f5e-8b08-b962621d420c
2024-09-18 15:10:56.496 [info] =======>Model input 
2024-09-18 15:10:56.496 [info] =======>Model output 

    public void registerForCourse(Scanner scanner, CourseCatalog courseCatalog) {
        System.out.println("#=---- Register for Course ----=#");
        viewAvailableCourses(scanner, courseCatalog);
2024-09-18 15:10:56.496 [info] =======>Debug stream time 204.58237900026143
2024-09-18 15:10:56.496 [info] =======>Debug ttft time 101.73013100028038
2024-09-18 15:10:56.497 [info] Average of latest 20 ttft time 100.33818714953959
2024-09-18 15:10:56.497 [info] Average of latest 20 stream time 358.45414164979013
2024-09-18 15:10:56.497 [info] Average of latest 20 total time NaN
2024-09-18 15:10:56.497 [info] Average of latest 20 client time 695.2491333007813
2024-09-18 15:10:56.497 [info] Average of latest 20 discrepencies NaN
2024-09-18 15:10:56.497 [info] CPP RT LOG: All stats {"streamingtime":1902.55908203125,"actualTtftFromStart":1956.368408203125,"timeTillServerRequest":54.04443359375,"requestToTtft":1902.323974609375,"totalTime":1956.57958984375}
2024-09-18 15:10:56.497 [info] CURSOR LOG: restFunc done 75c27eef-d032-4f5e-8b08-b962621d420c
2024-09-18 15:11:36.202 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:12:36.930 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:13:36.834 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:14:36.843 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:15:36.804 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:15:38.897 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:16:36.962 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:17:37.792 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:17:38.398 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:18:35.743 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:19:37.622 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:19:38.545 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:20:37.402 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:21:37.325 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
2024-09-18 15:21:39.251 [error] Error fetching public IP: [invalid_argument] parse binary: premature EOF
